{
    "swagger": "2.0",
    "info": {
        "version": "v1.0",
        "title": "Power BI Client"
    },
    "host": "api.powerbigov.us",
    "schemes": [
        "https"
    ],
    "consumes": [],
    "produces": [],
    "paths": {
        "/v1.0/myorg/groups/{groupId}/datasets": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of datasets from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetDatasetsInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasets"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                            "name": "SalesMarketing",
                                            "addRowsAPIEnabled": false,
                                            "configuredBy": "john@contoso.com",
                                            "isRefreshable": true,
                                            "isEffectiveIdentityRequired": false,
                                            "isEffectiveIdentityRolesRequired": false,
                                            "isOnPremGatewayRequired": false
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Creates a new dataset in the specified workspace.",
                "description": "\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API call only supports **push datasets**. For a complete list of limitations, see [Push datasets limitations](/power-bi/developer/embedded/push-datasets-limitations).\n<br><br>",
                "operationId": "Datasets_PostDatasetInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The workspace ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dataset",
                        "in": "body",
                        "description": "Create dataset parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateDatasetRequest"
                        }
                    },
                    {
                        "name": "defaultRetentionPolicy",
                        "description": "The default retention policy",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "None",
                            "basicFIFO"
                        ],
                        "x-ms-enum": {
                            "name": "DefaultRetentionPolicy",
                            "modelAsExtensible": true,
                            "values": [
                                {
                                    "value": "None",
                                    "description": "None"
                                },
                                {
                                    "value": "basicFIFO",
                                    "description": "basicFIFO"
                                }
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    }
                },
                "x-ms-examples": {
                    "Push example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "defaultRetentionPolicy": "basicFIFO",
                            "dataset": {
                                "name": "SalesMarketing",
                                "defaultMode": "Push",
                                "tables": [
                                    {
                                        "name": "Product",
                                        "columns": [
                                            {
                                                "name": "ProductID",
                                                "dataType": "Int64"
                                            },
                                            {
                                                "name": "Name",
                                                "dataType": "string"
                                            },
                                            {
                                                "name": "Category",
                                                "dataType": "string"
                                            },
                                            {
                                                "name": "IsCompete",
                                                "dataType": "bool"
                                            },
                                            {
                                                "name": "ManufacturedOn",
                                                "dataType": "DateTime"
                                            },
                                            {
                                                "name": "Sales",
                                                "dataType": "Int64",
                                                "formatString": "Currency"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "201": {
                                "body": {
                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "name": "SalesMarketing",
                                    "defaultRetentionPolicy": "basicFIFO"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/upstreamDataflows": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of upstream dataflows for datasets from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetDatasetToDataflowsLinksInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetToDataflowLinksResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetDatasetInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "id": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                                    "name": "SalesMarketing",
                                    "addRowsAPIEnabled": false,
                                    "configuredBy": "john@contoso.com",
                                    "isRefreshable": true,
                                    "isEffectiveIdentityRequired": true,
                                    "isEffectiveIdentityRolesRequired": true,
                                    "isOnPremGatewayRequired": false,
                                    "targetStorageMode": "Abf"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the properties for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThe user must be the dataset owner.\n\n## Required Scope\n\nDataset.ReadWrite.All\n<br><br>",
                "operationId": "Datasets_UpdateDatasetInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateDatasetRequest",
                        "in": "body",
                        "description": "Update dataset request parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateDatasetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example of changing the dataset storage mode to support large datasets": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateDatasetRequest": {
                                "targetStorageMode": "PremiumFiles"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Example of changing the dataset storage mode to support small datasets": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateDatasetRequest": {
                                "targetStorageMode": "Abf"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Example of updating scale-out settings of a dataset": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateDatasetRequest": {
                                "queryScaleOutSettings": {
                                    "autoSyncReadOnlyReplicas": false,
                                    "maxReadOnlyReplicas": -1
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Deletes the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n<br><br>",
                "operationId": "Datasets_DeleteDatasetInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/tables": {
            "get": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Returns a list of tables within the specified dataset from the specified workspace.",
                "description": "\n## Required Scope\n\n## Limitations\n\nThis API call only supports **push datasets**. For a complete list of limitations, see [Push datasets limitations](/power-bi/developer/embedded/push-datasets-limitations).\n<br><br>",
                "operationId": "Datasets_GetTablesInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tables"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/tables/{tableName}": {
            "put": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Updates the metadata and schema for the specified table within the specified dataset from the specified workspace.",
                "description": "\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API call only supports **push datasets**.\n<br><br>",
                "operationId": "Datasets_PutTableInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestMessage",
                        "in": "body",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Table"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product",
                            "requestMessage": {
                                "name": "Product",
                                "columns": [
                                    {
                                        "name": "ProductID",
                                        "dataType": "Int64"
                                    },
                                    {
                                        "name": "Name",
                                        "dataType": "string"
                                    },
                                    {
                                        "name": "Category",
                                        "dataType": "string"
                                    },
                                    {
                                        "name": "IsCompete",
                                        "dataType": "bool"
                                    },
                                    {
                                        "name": "ManufacturedOn",
                                        "dataType": "DateTime"
                                    },
                                    {
                                        "name": "NewColumn",
                                        "dataType": "string"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "name": "Product"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/tables/{tableName}/rows": {
            "post": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Adds new data rows to the specified table within the specified dataset from the specified workspace.",
                "description": "\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- This API call only supports **push datasets**.\n- See [Power BI REST API limitations](/power-bi/developer/automation/api-rest-api-limitations).\n<br><br>",
                "operationId": "Datasets_PostRowsInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "description": "The dataset ID",
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestMessage",
                        "in": "body",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostRowsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product",
                            "requestMessage": {
                                "rows": [
                                    {
                                        "ProductID": 1,
                                        "Name": "Adjustable Race",
                                        "Category": "Components",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    },
                                    {
                                        "ProductID": 2,
                                        "Name": "LL Crankarm",
                                        "Category": "Components",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    },
                                    {
                                        "ProductID": 3,
                                        "Name": "HL Mountain Frame - Silver",
                                        "Category": "Bikes",
                                        "IsCompete": true,
                                        "ManufacturedOn": "07/30/2014"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "PushDatasets"
                ],
                "summary": "Deletes all rows from the specified table within the specified dataset from the specified workspace.",
                "description": "\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThis API call only supports **push datasets**. For a complete list of limitations, see [Push datasets limitations](/power-bi/developer/embedded/push-datasets-limitations).\n<br><br>",
                "operationId": "Datasets_DeleteRowsInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tableName",
                        "in": "path",
                        "description": "The table name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "tableName": "Product"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/refreshes": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh history for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\nOneDrive refresh history isn't returned.\n<br><br>",
                "operationId": "Datasets_GetRefreshHistoryInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$top",
                        "description": "The requested number of entries in the refresh history. If not provided, the default is the last available 60 entries.",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "minimum": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Refreshes"
                        }
                    }
                },
                "x-ms-examples": {
                    "In-progress refresh example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "status": "Unknown",
                                            "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Completed refresh example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-13T09:31:43.153Z",
                                            "status": "Completed",
                                            "requestId": "9399bb89-25d1-44f8-8576-136d7e9014b1",
                                            "refreshAttempts": [
                                                {
                                                    "attemptId": 1,
                                                    "startTime": "2017-06-13T09:25:43.153Z",
                                                    "endTime": "2017-06-13T09:31:40.153Z",
                                                    "type": "Data"
                                                },
                                                {
                                                    "attemptId": 1,
                                                    "startTime": "2017-06-13T09:31:40.156Z",
                                                    "endTime": "2017-06-13T09:31:43.153Z",
                                                    "type": "Query"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Failed refresh example": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "$top": 1
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "refreshType": "ViaApi",
                                            "startTime": "2017-06-13T09:25:43.153Z",
                                            "endTime": "2017-06-13T09:31:43.153Z",
                                            "serviceExceptionJson": "{\"errorCode\":\"ModelRefreshFailed_CredentialsNotSpecified\"}",
                                            "status": "Failed",
                                            "requestId": "11bf290a-346b-48b7-8973-c5df149337ff",
                                            "refreshAttempts": [
                                                {
                                                    "attemptId": 1,
                                                    "startTime": "2017-06-13T09:25:43.153Z",
                                                    "endTime": "2017-06-13T09:31:43.153Z",
                                                    "serviceExceptionJson": "{\"errorCode\":\"ModelRefreshFailed_CredentialsNotSpecified\"}",
                                                    "type": "Data"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Triggers a refresh for the specified dataset from the specified workspace. An [enhanced refresh](/power-bi/connect-data/asynchronous-refresh) is triggered only if a request payload other than `notifyOption` is set.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- For Shared capacities, a maximum of eight requests per day, including refreshes executed by using scheduled refresh, can be initiated.\n- For Shared capacities, only `notifyOption` can be specified in the request body.\n- Enhanced refresh is not supported for shared capacities.\n- For enhanced refresh, `notifyOption` is not required and must be excluded from the request body. However, one or more parameters other than `notifyOption` are required.\n- For Premium capacities, the maximum requests per day is only limited by the available resources in the capacity. If available resources are overloaded, refreshes are throttled until the load is reduced. The refresh will fail if throttling exceeds 1 hour.\n<br><br>",
                "operationId": "Datasets_RefreshDatasetInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetRefreshRequest",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DatasetRefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "headers": {
                            "x-ms-request-id": {
                                "description": "The `refreshId` for [getting refresh execution details in group](#/operationId/Datasets_GetRefreshExecutionDetailsInGroup) or [cancelling refresh in group](/rest/api/power-bi/datasets/cancel-refresh-in-group). This would be returned only if any request payload except `notifyOption` is set.",
                                "type": "string",
                                "format": "url"
                            },
                            "Location": {
                                "description": "The full URI for [getting refresh execution details in group](#/operationId/Datasets_GetRefreshExecutionDetailsInGroup) or [cancelling refresh in group](/rest/api/power-bi/datasets/cancel-refresh-in-group). This would be returned only if any request payload except `notifyOption` is set.",
                                "type": "string",
                                "format": "url"
                            }
                        }
                    }
                },
                "x-ms-examples": {
                    "Example of refreshing a dataset": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetRefreshRequest": {
                                "notifyOption": "MailOnFailure",
                                "retryCount": 3
                            }
                        },
                        "responses": {
                            "202": {
                                "headers": {
                                    "x-ms-request-id": "87f31ef7-1e3a-4006-9b0b-191693e79e9e",
                                    "Location": "https://api.powerbigov.us/v1.0/myorg/groups/f089354e-8366-4e18-aea3-4cb4a3a50b48/datasets/cfafbeb1-8037-4d0c-896e-a46fb27ff229/refreshes/87f31ef7-1e3a-4006-9b0b-191693e79e9e"
                                }
                            }
                        }
                    },
                    "Example of refreshing one partition": {
                        "parameters": {
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetRefreshRequest": {
                                "type": "full",
                                "commitMode": "transactional",
                                "objects": [
                                    {
                                        "table": "Customer",
                                        "partition": "Robert"
                                    }
                                ],
                                "applyRefreshPolicy": "false"
                            }
                        },
                        "responses": {
                            "200": {
                                "description": "OK"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/refreshes/{refreshId}": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns execution details of an [enhanced refresh operation](/power-bi/connect-data/asynchronous-refresh) for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetRefreshExecutionDetailsInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "description": "The workspace ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "refreshId",
                        "description": "The refresh ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK (this response is returned when the refresh operation has completed or failed)",
                        "schema": {
                            "$ref": "#/definitions/DatasetRefreshDetail"
                        }
                    },
                    "202": {
                        "description": "Accepted (this response is returned when the refresh operation is still in progress)",
                        "schema": {
                            "$ref": "#/definitions/DatasetRefreshDetail"
                        }
                    }
                },
                "x-ms-examples": {
                    "In progress refresh example": {
                        "parameters": {
                            "groupId": "fdb91b8f-0a9b-44c1-b6c0-0cb185c6ebfb",
                            "datasetId": "f7fc6510-e151-42a3-850b-d0805a391db0",
                            "refreshId": "630110f5-8f93-49c2-afee-bfc87072460c"
                        },
                        "responses": {
                            "202": {
                                "body": {
                                    "startTime": "2021-12-14T03:46:04.833",
                                    "type": "Full",
                                    "commitMode": "Transactional",
                                    "status": "Unknown",
                                    "extendedStatus": "NotStarted",
                                    "currentRefreshType": "Full",
                                    "numberOfAttempts": 0
                                }
                            }
                        }
                    },
                    "Completed refresh example": {
                        "parameters": {
                            "groupId": "fdb91b8f-0a9b-44c1-b6c0-0cb185c6ebfb",
                            "datasetId": "f7fc6510-e151-42a3-850b-d0805a391db0",
                            "refreshId": "87f31ef7-1e3a-4006-9b0b-191693e79e9e"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "startTime": "2021-12-10T08:40:31.57",
                                    "endTime": "2021-12-10T08:40:43.87",
                                    "type": "Full",
                                    "commitMode": "Transactional",
                                    "status": "Completed",
                                    "extendedStatus": "Completed",
                                    "currentRefreshType": "Full",
                                    "numberOfAttempts": 0,
                                    "objects": [
                                        {
                                            "table": "DateTableTemplate_78e78207-b3fb-41b5-8b95-e5efca989067",
                                            "partition": "DateTableTemplate_78e78207-b3fb-41b5-8b95-e5efca989067-ae306fb4-3b7e-4a41-824d-cb3b452fedfc",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_e9d8a66b-4018-4d16-be8c-402b2037c051",
                                            "partition": "LocalDateTable_e9d8a66b-4018-4d16-be8c-402b2037c051-59bc07f8-85c9-456a-ad36-18e1de4d77ed",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_55935f6b-04d1-4cfe-8856-ed9f9e73ab2e",
                                            "partition": "LocalDateTable_55935f6b-04d1-4cfe-8856-ed9f9e73ab2e-d95ae7f7-19c9-48a8-9c16-fcab26558bc2",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_ff25f80e-eb04-4229-986d-b40223c04f1c",
                                            "partition": "LocalDateTable_ff25f80e-eb04-4229-986d-b40223c04f1c-6606fc4c-4cda-49e1-8acd-e55a6ec36cb3",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "DimCurrency",
                                            "partition": "DimCurrency-e5524cc4-a898-433b-91aa-c001b9a6d676",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "DimCustomer",
                                            "partition": "DimCustomer-a31bbd93-e20a-4dee-a33c-7afa27785953",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_fa65a206-f320-4d5d-abcc-1dc0f051ca7d",
                                            "partition": "LocalDateTable_fa65a206-f320-4d5d-abcc-1dc0f051ca7d-06a48a0a-a32b-48a3-b113-924aafd6363c",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_78a4e1b7-a2e5-4bbf-ab68-7c87961b68a2",
                                            "partition": "LocalDateTable_78a4e1b7-a2e5-4bbf-ab68-7c87961b68a2-5b3ba715-7c84-4e52-b310-485b93cfbe6d",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "DimDate",
                                            "partition": "DimDate-62e2f91b-53e5-4ed3-8618-fec74dba5e0d",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_e72c294f-0a06-4051-b943-e6bf8389e2c3",
                                            "partition": "LocalDateTable_e72c294f-0a06-4051-b943-e6bf8389e2c3-891a0e68-d414-4ba3-9c4b-e6f1ec73d4f3",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "DimProduct",
                                            "partition": "DimProduct-3d07cc89-2bd7-4a98-bb37-3368c1562f98",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_e37e4431-8c1a-449c-8796-b704df200a92",
                                            "partition": "LocalDateTable_e37e4431-8c1a-449c-8796-b704df200a92-8596ebb8-418f-4e50-a921-dac88c6f1339",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_73faffeb-a0c7-4ea1-83dc-530823b0fea0",
                                            "partition": "LocalDateTable_73faffeb-a0c7-4ea1-83dc-530823b0fea0-13795c4e-708f-4ddc-8ea3-5a2f39ae2253",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "DimPromotion",
                                            "partition": "DimPromotion-21e6c333-430e-4350-8c94-cdceb362c4c7",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_9c19746b-db7d-4b7e-b95d-c66e4b8fefc8",
                                            "partition": "LocalDateTable_9c19746b-db7d-4b7e-b95d-c66e4b8fefc8-395de144-ad53-41c0-9ec0-68bab6158d99",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "LocalDateTable_d96435dd-6110-4246-996c-616c96125e71",
                                            "partition": "LocalDateTable_d96435dd-6110-4246-996c-616c96125e71-891737ee-c46c-4b9f-bfa8-e4555004e20f",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "DimSalesTerritory",
                                            "partition": "DimSalesTerritory-6d88f938-13d5-49f8-899c-d11b3d346ad5",
                                            "status": "Completed"
                                        },
                                        {
                                            "table": "FactInternetSales",
                                            "status": "Completed"
                                        }
                                    ],
                                    "refreshAttempts": [
                                        {
                                            "attemptId": 1,
                                            "startTime": "2021-12-10T08:40:31.57",
                                            "endTime": "2021-12-10T08:40:43.87",
                                            "type": "Data"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Failed refresh example": {
                        "parameters": {
                            "groupId": "fdb91b8f-0a9b-44c1-b6c0-0cb185c6ebfb",
                            "datasetId": "f7fc6510-e151-42a3-850b-d0805a391db0",
                            "refreshId": "351f7113-59bb-4e5e-8c1e-e15ae7414121"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "startTime": "2021-12-10T08:39:28.517",
                                    "endTime": "2021-12-10T08:39:30.04",
                                    "type": "Full",
                                    "commitMode": "PartialBatch",
                                    "status": "Failed",
                                    "extendedStatus": "Failed",
                                    "currentRefreshType": "Full",
                                    "numberOfAttempts": 0,
                                    "messages": [
                                        {
                                            "message": "RefreshApiRequest for table refresh using refresh policy must have the property 'CommitMode' = 'Transactional' instead of 'PartialBatch'.",
                                            "type": "Error"
                                        }
                                    ],
                                    "refreshAttempts": [
                                        {
                                            "attemptId": 1,
                                            "startTime": "2021-12-10T08:39:28.517",
                                            "endTime": "2021-12-10T08:39:30.04",
                                            "serviceExceptionJson": "{\"errorCode\":\"ModelRefresh_ShortMessage_ProcessingError\",\"errorDescription\":\"0xC112001C: Expression.Error: Forced Error. . The exception was raised by the IDbCommand interface.\\n0xC112001C: The command has been canceled.. The exception was raised by the IDbCommand interface.\\n0xC11C0006: The current operation was cancelled because another operation in the transaction failed.\\n0xC112001C: The command has been canceled.. The exception was raised by the IDbCommand interface.\\n0xC112001C: The command has been canceled.. The exception was raised by the IDbCommand interface.\\n0xC112001C: The command has been canceled.. The exception was raised by the IDbCommand interface.\"}",
                                            "type": "Data"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Cancels the specified refresh operation for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n<br><br>",
                "operationId": "Datasets_CancelRefreshInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "description": "The workspace ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "refreshId",
                        "description": "The refresh ID",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "fdb91b8f-0a9b-44c1-b6c0-0cb185c6ebfb",
                            "datasetId": "f7fc6510-e151-42a3-850b-d0805a391db0",
                            "refreshId": "87f31ef7-1e3a-4006-9b0b-191693e79e9e"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/refreshSchedule": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh schedule for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetRefreshScheduleInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RefreshSchedule"
                        }
                    }
                },
                "x-ms-examples": {
                    "Refresh schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "days": [
                                        "Sunday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "times": [
                                        "05:00",
                                        "11:30",
                                        "17:30",
                                        "23:00"
                                    ],
                                    "enabled": true,
                                    "localTimeZoneId": "UTC",
                                    "notifyOption": "MailOnFailure"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the refresh schedule for the specified dataset from the specified workspace.",
                "description": "\nA request that disables the refresh schedule should contain no other changes.\n\nAt least one day must be specified. If no times are specified, then Power BI will use a default single time per day.\n\n## Permissions\n\n- The user must be the dataset owner.\n- This API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nThe limit on the number of time slots per day depends on whether a [Premium](/power-bi/admin/service-premium-what-is) or Shared capacity is used.\n<br><br>",
                "operationId": "Datasets_UpdateRefreshScheduleInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetModelRefreshScheduleRequest",
                        "description": "Update Refresh Schedule parameters, by specifying all or some of the parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Change the notification option of a refresh schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "notifyOption": "NoNotification"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Change the days and times of a refresh schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "days": [
                                        "Sunday",
                                        "Tuesday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "times": [
                                        "07:00",
                                        "11:30",
                                        "16:00",
                                        "23:30"
                                    ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Update the times of a refresh schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "times": [
                                        "08:00",
                                        "16:00"
                                    ]
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Disable a scheduled refresh example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetModelRefreshScheduleRequest": {
                                "value": {
                                    "enabled": false
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/directQueryRefreshSchedule": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the refresh schedule for a specified [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections) dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetDirectQueryRefreshScheduleInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DirectQueryRefreshSchedule"
                        }
                    }
                },
                "x-ms-examples": {
                    "Days and times schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "days": [
                                        "Sunday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "times": [
                                        "05:00",
                                        "11:30",
                                        "17:30",
                                        "23:00"
                                    ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        }
                    },
                    "Frequency schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "frequency": 15,
                                    "days": [],
                                    "times": [],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the refresh schedule for a specified [DirectQuery](/power-bi/connect-data/desktop-directquery-about) or [LiveConnection](/power-bi/connect-data/desktop-directquery-about#live-connections) dataset from the specified workspace.",
                "description": "\nA request should contain either a set of days and times *or* a valid frequency, but not both. If you choose a set of days without specifying any times, then Power BI will use a default single time per day. Setting the frequency will automatically overwrite the days and times setting.\n\n## Permissions\n\n- The user must be the dataset owner.\n- This API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n<br><br>",
                "operationId": "Datasets_UpdateDirectQueryRefreshScheduleInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "datasetDQRefreshScheduleRequest",
                        "description": "Patch DirectQuery or LiveConnection Refresh Schedule parameters, by specifying all or some of the parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DirectQueryRefreshScheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Set a frequency based schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "frequency": 30
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Set a days and times based schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "days": [
                                        "Sunday",
                                        "Tuesday",
                                        "Friday",
                                        "Saturday"
                                    ],
                                    "times": [
                                        "07:00",
                                        "11:30",
                                        "16:00",
                                        "23:30"
                                    ],
                                    "localTimeZoneId": "UTC"
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Update the times of an existing days and times based schedule example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "datasetDQRefreshScheduleRequest": {
                                "value": {
                                    "times": [
                                        "07:00",
                                        "16:30",
                                        "23:30"
                                    ]
                                }
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/parameters": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of parameters for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.Read.All or Dataset.ReadWrite.All\n\n## Limitations\n\n- Datasets with SQL, Oracle, Teradata, and SAP HANA [DirectQuery](/power-bi/connect-data/desktop-directquery-about) connections aren't supported.\n- Datasets created or modified using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported.\n<br><br>",
                "operationId": "Datasets_GetParametersInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MashupParameters"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "name": "ServerName",
                                            "type": "Text",
                                            "isRequired": true,
                                            "currentValue": "MyTest.database.windows.net"
                                        },
                                        {
                                            "name": "DatabaseName",
                                            "type": "Text",
                                            "isRequired": true,
                                            "currentValue": "MyTestDB"
                                        },
                                        {
                                            "name": "FromDate",
                                            "type": "DateTime",
                                            "isRequired": true,
                                            "currentValue": "2/8/2002 12:00:00 AM"
                                        },
                                        {
                                            "name": "FilterBlanks",
                                            "type": "Logical",
                                            "isRequired": true,
                                            "currentValue": "TRUE"
                                        },
                                        {
                                            "name": "MaxId",
                                            "type": "Number",
                                            "isRequired": true,
                                            "currentValue": "77"
                                        },
                                        {
                                            "name": "AnyParam",
                                            "type": "Any",
                                            "isRequired": true,
                                            "currentValue": "uu63"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.UpdateParameters": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the parameters values for the specified dataset from the specified workspace.",
                "description": "\n> [!NOTE]\n> We recommend using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata) with this API call.\n\n> [!IMPORTANT]\n>\n> - If you're using **enhanced dataset metadata**, refresh the dataset to apply the new parameter values.\n> - If you're not using **enhanced dataset metadata**, wait 30 minutes for the update data sources operation to complete, and then refresh the dataset.\n\n## Permissions\n\n- The user must be the dataset owner.\n- This API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- Datasets created or modified using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported. To make changes to those datasets, the admin must use the Azure Analysis Services client library for Tabular Object Model.\n- [DirectQuery](/power-bi/connect-data/desktop-directquery-about) connections are only supported with [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n- Datasets with Azure Analysis Services live connections aren't supported.\n- Maximum of 100 parameters per request.\n- All specified parameters must exist in the dataset.\n- Parameters values should be of the expected type.\n- The parameter list can't be empty or include duplicate parameters.\n- Parameters names are case-sensitive.\n- Parameter `IsRequired` must have a non-empty value.\n- The parameter types `Any` and `Binary` can't be updated.\n<br><br>",
                "operationId": "Datasets_UpdateParametersInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateMashupParametersRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateMashupParametersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateMashupParametersRequest": {
                                "updateDetails": [
                                    {
                                        "name": "DatabaseName",
                                        "newValue": "NewDB"
                                    },
                                    {
                                        "name": "MaxId",
                                        "newValue": "5678"
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/datasources": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of data sources for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetDatasourcesInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Datasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "Analysis Services example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "AnalysisServices",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SQL example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "My-As-Server",
                                                "database": "My-As-Database"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Excel example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "File",
                                            "connectionDetails": {
                                                "path": "c:\\users\\username\\documents\\orders1.xlsx"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "OData example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "OData",
                                            "connectionDetails": {
                                                "url": "http://services.odata.org/MyOdata/MyOdata.svc"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SharePoint example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "SharePointList",
                                            "connectionDetails": {
                                                "url": "https://microsoft.sharepoint.com/hello/myproj/"
                                            },
                                            "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                            "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "SAP HANA example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "datasourceType": "SAPHana",
                                        "connectionDetails": {
                                            "server": "My-SapHana-Server",
                                            "database": "My-SapHana-Database"
                                        },
                                        "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                        "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                    }
                                ]
                            }
                        }
                    },
                    "Oracle example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "value": [
                                    {
                                        "datasourceType": "Oracle",
                                        "connectionDetails": {
                                            "server": "My-Oracle-Server",
                                            "database": "My-Oracle-Database"
                                        },
                                        "datasourceId": "33cc5222-3fb9-44f7-b19d-ffbff18aaaf5",
                                        "gatewayId": "0a2dafe6-0e93-4120-8d2c-fae123c111b1"
                                    }
                                ]
                            }
                        }
                    },
                    "Extension datasource example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "Extension",
                                            "datasourceId": "70540d95-4c8e-41ae-88c6-27a103b12841",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "kind": "AzureDataExplorer",
                                                "path": "https://myserver.kusto.windows.net"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Microsoft Exchange datasource example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "Exchange",
                                            "datasourceId": "4d126fc8-1568-46aa-ba16-ccf19b18f012",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "emailAddress": "john@contoso.com"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Salesforce datasource example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "Salesforce",
                                            "datasourceId": "e8a6e0f5-b244-402a-ba5a-4d578609ede3",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "classInfo": "report-detail",
                                                "loginServer": "https://login.salesforce.com/"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "Azure Blobs datasource example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "datasourceType": "AzureBlobs",
                                            "datasourceId": "e0315274-90b6-4fc0-abf2-2d60d448cb04",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "connectionDetails": {
                                                "account": "myAccount",
                                                "domain": "blob.core.windows.net"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.UpdateDatasources": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates the data sources of the specified dataset from the specified workspace.",
                "description": "\n> [!NOTE]\n> We recommend using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata) with this API call.\n\n> [!IMPORTANT]\n>\n> - The original data source and the new data source must have the exact same schema.\n> - If you're using **enhanced dataset metadata**, refresh the dataset to get data from the new data sources.\n> - If you're not using **enhanced dataset metadata**, wait 30 minutes for the update data sources operation to complete, and then refresh the dataset.\n\n## Permissions\n\n- The user must be the dataset owner.\n- This API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\n- Datasets created or modified using the public [XMLA endpoint](/power-bi/admin/service-premium-connect-tools) aren't supported. To make changes to those data sources, the admin must use the Azure Analysis Services client library for Tabular Object Model.\n- Only these data sources are supported: SQL Server, Azure SQL Server, Azure Analysis Services, Azure Synapse, OData, SharePoint, Teradata, and SAP HANA. For other data sources, use the [Update Parameters In Group](/rest/api/power-bi/datasets/update-parameters-in-group) API call.\n- Changing the data source type isn't supported.\n- Data sources that contain parameters in the connection string aren't supported.\n- Updating data sources that are part of merged or joined tables is only supported if you're using [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n- For an Advanced Query that reference multiple data sources, only the first data source will be updated. To overcome this limitation, define the data source as a parameter and use the [Update Parameters In Group](/rest/api/power-bi/datasets/update-parameters-in-group) API call.\n- Datasets with incremental refresh policy are not fully supported, calling this API may not work as expected and result of partial datasources update, to overcome this you can try run a dataset refresh before calling this API.\n<br><br>",
                "operationId": "Datasets_UpdateDatasourcesInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "updateDatasourcesRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateDatasourcesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "updateDatasourcesRequest": {
                                "updateDetails": [
                                    {
                                        "datasourceSelector": {
                                            "datasourceType": "Sql",
                                            "connectionDetails": {
                                                "server": "My-Sql-Server",
                                                "database": "My-Sql-Database"
                                            }
                                        },
                                        "connectionDetails": {
                                            "server": "New-Sql-Server",
                                            "database": "New-Sql-Database"
                                        }
                                    },
                                    {
                                        "datasourceSelector": {
                                            "datasourceType": "OData",
                                            "connectionDetails": {
                                                "url": "http://services.odata.org/V4/Northwind/Northwind.svc"
                                            }
                                        },
                                        "connectionDetails": {
                                            "url": "http://services.odata.org/V4/Odata/Northwind.svc"
                                        }
                                    }
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.SetAllConnections": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Updates all connections for the specified dataset from the specified workspace. This API call only supports SQL DirectQuery datasets.",
                "description": "\n> [!IMPORTANT]\n> This API call is deprecated and no longer supported. This API call isn't compatible with [enhanced dataset metadata](/power-bi/connect-data/desktop-enhanced-dataset-metadata).\n>\n> Instead use:\n>\n> - [Update Parameters In Group](/rest/api/power-bi/datasets/update-parameters-in-group) to update connections for SQL, Azure Synapse, OData, and SharePoint data sources.\n> - [Update Datasources In Group](/rest/api/power-bi/datasets/update-datasources-in-group) to connections for other data sources.\n\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nSupports SQL DirectQuery datasets.\n<br><br>",
                "operationId": "Datasets_SetAllDatasetConnectionsInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameters",
                        "in": "body",
                        "description": "The body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConnectionDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "parameters": {
                                "connectionString": "data source=MyServer.database.windows.net;initial catalog=MyDatabase;persist security info=True;encrypt=True;trustservercertificate=False"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.BindToGateway": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Binds the specified dataset from the specified workspace to the specified gateway, optionally with a given set of data source IDs. If you don't supply a specific data source ID, the dataset will be bound to the first matching data source in the gateway.",
                "description": "\n> [!IMPORTANT]\n> Add the API caller principal as a data source user on the gateway.\n\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n\n## Limitations\n\nOnly supports the on-premises data gateway\n<br><br>",
                "operationId": "Datasets_BindToGatewayInGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bindToGatewayRequest",
                        "in": "body",
                        "description": "The bind to gateway request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BindToGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example without 'datasourceObjectIds'": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "bindToGatewayRequest": {
                                "gatewayObjectId": "1f69e798-5852-4fdd-ab01-33bb14b6e934"
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    },
                    "Example with 'datasourceObjectIds'": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "bindToGatewayRequest": {
                                "gatewayObjectId": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                "datasourceObjectIds": [
                                    "dc2f2dac-e5e2-4c37-af76-2a0bc10f16cb",
                                    "3bfe5d33-ab7d-4d24-b0b5-e2bb8eb01cf5"
                                ]
                            }
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.GetBoundGatewayDatasources": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of gateway data sources for the specified dataset from the specified workspace.",
                "description": "\n> [!IMPORTANT]\n> This API call is deprecated, use [Get Datasources In Group](/rest/api/power-bi/datasets/get-datasources-in-group) instead.\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetGatewayDatasourcesInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GatewayDatasources"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "16a54ccd-620d-4af3-9197-0b8c779a9a6d",
                                            "gatewayId": "7f1c4e55-544b-403f-b132-da0d3a024674",
                                            "datasourceType": "Sql",
                                            "connectionDetails": "{\"server\":\"MyServer.database.windows.net\",\"database\":\"MyDatabase\"}"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.DiscoverGateways": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns a list of gateways that the specified dataset from the specified workspace can be bound to.",
                "description": "\nThis API call is only relevant to datasets that have at least one on-premises connection. For datasets with cloud-only connections, this API call returns an empty list.\n\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.Read.All\n<br><br>",
                "operationId": "Datasets_DiscoverGatewaysInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "description": "The dataset ID",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Gateways"
                        }
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "value": [
                                        {
                                            "id": "1f69e798-5852-4fdd-ab01-33bb14b6e934",
                                            "name": "My_Sample_Gateway",
                                            "type": "Resource",
                                            "publicKey": {
                                                "exponent": "AQAB",
                                                "modulus": "o6j2....cLk="
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/Default.TakeOver": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Transfers ownership over the specified dataset to the current authorized user.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n<br><br>",
                "operationId": "Datasets_TakeOverInGroup",
                "consumes": [],
                "produces": [],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-ms-examples": {
                    "Example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {}
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/executeQueries": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Executes Data Analysis Expressions (DAX) queries against the provided dataset.",
                "description": "\nDAX query errors will result in:\n\n- A response error, such as `DAX query failure`.\n- A failure HTTP status code (400).\n\nA query that requests more than one table, or more than the allowed number of table rows, will result in:\n\n- Limited data being returned.\n- A response error, such as `More than one result table in a query` or `More than {allowed number} rows in a query result`.\n- A successful HTTP status code (200).\n\nColumns that are fully qualified in the query will be returned with a fully qualified name, for example, `MyTable[MyColumn]`. Columns that are renamed or created in the query will be returned within square bracket, for example, `[MyNewColumn]`.\n\n## Permissions\n\nThe tenant setting **Dataset Execute Queries REST API**, found under **Integration settings**, must be enabled.\n\nThe user must have access to the workspace, and dataset read and build permissions. For more information, see [Manage dataset access permissions](/power-bi/connect-data/service-datasets-manage-access-permissions).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n\n## Limitations\n\n- Datasets that are hosted in Azure Analysis Services or that have a live connection to an on-premises Azure Analysis Services model aren't supported.\n- One query per API call.\n- One table request per query.\n- Maximum of 100,000 rows or 1,000,000 values per query (whichever is hit first). For example if you query for 5 columns, you can get back max 100,000 rows. If you query for 20 columns, you can get back max 50,000 rows (1 million divided by 20).\n- Maximum of 15MB of data per query. Once 15MB is exceeded, the current row will be completed but no additional rows will be written.\n- There's a limit of 120 query requests per minute per user, regardless of the dataset that's queried.\n- To use Service Principals, make sure the admin tenant setting [_Allow service principals to use Power BI APIs_](/power-bi/admin/service-admin-portal-developer#allow-service-principals-to-use-power-bi-apis) under _Developer settings_ is enabled. However, regardless of the admin tenant setting, Service Principals aren't supported for datasets with RLS per [RLS limitations](/power-bi/admin/service-admin-rls#considerations-and-limitations) or datasets with SSO enabled.\n- Only DAX queries are supported at this time. MDX and DMV queries are not supported. \n<br><br>",
                "operationId": "Datasets_ExecuteQueriesInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "requestMessage",
                        "description": "The request message",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DatasetExecuteQueriesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetExecuteQueriesResponse"
                        }
                    }
                },
                "deprecated": false,
                "x-ms-examples": {
                    "Execute queries example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229",
                            "requestMessage": {
                                "queries": [
                                    {
                                        "query": "EVALUATE VALUES(MyTable)"
                                    }
                                ],
                                "serializerSettings": {
                                    "includeNulls": true
                                },
                                "impersonatedUserName": "someuser@mycompany.com"
                            }
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "results": [
                                        {
                                            "tables": [
                                                {
                                                    "rows": [
                                                        {
                                                            "MyTable[Year]": 2010,
                                                            "MyTable[Quarter]": "Q1"
                                                        },
                                                        {
                                                            "MyTable[Year]": 2010,
                                                            "MyTable[Quarter]": "Q2"
                                                        },
                                                        {
                                                            "MyTable[Year]": 2011,
                                                            "MyTable[Quarter]": "Q1"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/queryScaleOut/syncStatus": {
            "get": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Returns the query scale-out sync status for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All or Dataset.Read.All\n<br><br>",
                "operationId": "Datasets_GetQueryScaleOutSyncStatusInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetQueryScaleOutSyncStatus"
                        }
                    }
                },
                "deprecated": false,
                "x-ms-examples": {
                    "Get query scale-out sync status example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "commitVersion": 133186221251720662,
                                    "commitTimestamp": "2023-01-19T17:15:25.1720662Z",
                                    "targetSyncVersion": 133184583205771509,
                                    "targetSyncTimestamp": "2023-01-17T19:45:20.5771509Z",
                                    "triggerReason": "explicit",
                                    "syncStartTime": "2023-01-17T20:37:49.9625479Z",
                                    "syncEndTime": "2023-01-17T20:37:50.6029293Z",
                                    "minActiveReadVersion": 133184583205771509,
                                    "minActiveReadTimestamp": "2023-01-17T19:45:20.5771509Z",
                                    "scaleOutStatus": "Enabled"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/myorg/groups/{groupId}/datasets/{datasetId}/queryScaleOut/sync": {
            "post": {
                "tags": [
                    "Datasets"
                ],
                "summary": "Triggers a query scale-out sync of read-only replicas for the specified dataset from the specified workspace.",
                "description": "\n## Permissions\n\nThis API call can be called by a service principal profile. For more information see: [Service principal profiles in Power BI Embedded](/power-bi/developer/embedded/embed-multi-tenancy).\n\n## Required Scope\n\nDataset.ReadWrite.All\n<br><br>",
                "operationId": "Datasets_TriggerQueryScaleOutSyncInGroup",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "description": "The workspace ID",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "datasetId",
                        "in": "path",
                        "description": "The dataset ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DatasetQueryScaleOutSyncStatus"
                        }
                    }
                },
                "deprecated": false,
                "x-ms-examples": {
                    "Trigger query scale-out sync example": {
                        "parameters": {
                            "groupId": "f089354e-8366-4e18-aea3-4cb4a3a50b48",
                            "datasetId": "cfafbeb1-8037-4d0c-896e-a46fb27ff229"
                        },
                        "responses": {
                            "200": {
                                "body": {
                                    "commitVersion": 133186221251720662,
                                    "commitTimestamp": "2023-01-19T17:15:25.1720662Z",
                                    "targetSyncVersion": 133184583205771509,
                                    "targetSyncTimestamp": "2023-01-17T19:45:20.5771509Z",
                                    "triggerReason": "explicit",
                                    "syncStartTime": "2023-01-17T20:37:49.9625479Z",
                                    "syncEndTime": "2023-01-17T20:37:50.6029293Z",
                                    "minActiveReadVersion": 133184583205771509,
                                    "minActiveReadTimestamp": "2023-01-17T19:45:20.5771509Z",
                                    "scaleOutStatus": "Enabled"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "EndorsementDetails": {
            "description": "Power BI endorsement details",
            "properties": {
                "endorsement": {
                    "type": "string",
                    "description": "The endorsement status"
                },
                "certifiedBy": {
                    "type": "string",
                    "description": "The user that certified the Power BI item (such as a report or a dashboard)"
                }
            }
        },
        "DatasourceUsage": {
            "required": [
                "datasourceInstanceId"
            ],
            "description": "Data source usage",
            "properties": {
                "datasourceInstanceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The data source instance ID"
                }
            }
        },
        "SensitivityLabel": {
            "required": [
                "labelId"
            ],
            "description": "Sensitivity label info for a Power BI item (such as a report or a dashboard)",
            "properties": {
                "labelId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The sensitivity label ID"
                }
            }
        },
        "ModifiedWorkspace": {
            "required": [
                "id"
            ],
            "description": "A modified workspace",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace object ID"
                }
            }
        },
        "ScanRequest": {
            "description": "A scan request",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The scan ID"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The scan creation date and time"
                },
                "status": {
                    "type": "string",
                    "description": "The scan state"
                },
                "error": {
                    "$ref": "#/definitions/PowerBIApiErrorResponseDetail",
                    "description": "The scan error (if any)"
                }
            }
        },
        "PowerBIApiErrorResponseDetail": {
            "description": "Detailed information about a Power BI error response",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The error code"
                },
                "message": {
                    "type": "string",
                    "description": "The error message"
                },
                "target": {
                    "type": "string",
                    "description": "The error target"
                }
            }
        },
        "RequiredWorkspaces": {
            "description": "A required workspaces request",
            "properties": {
                "workspaces": {
                    "type": "array",
                    "description": "The required workspace IDs to be scanned (supports 1 to 100 workspace IDs)",
                    "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Workspace object ID"
                    }
                }
            }
        },
        "WorkspaceInfoResponse": {
            "description": "Workspace info response",
            "properties": {
                "workspaces": {
                    "type": "array",
                    "description": "The workspace info associated with this scan",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfo"
                    }
                },
                "datasourceInstances": {
                    "type": "array",
                    "description": "The data source instances associated with this scan",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                },
                "misconfiguredDatasourceInstances": {
                    "type": "array",
                    "description": "The data source misconfigured instances associated with this scan",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                }
            }
        },
        "WorkspaceInfo": {
            "required": [
                "id"
            ],
            "description": "Workspace info details",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace object ID"
                },
                "name": {
                    "type": "string",
                    "description": "The workspace name"
                },
                "description": {
                    "type": "string",
                    "description": "The workspace description"
                },
                "type": {
                    "type": "string",
                    "description": "The workspace type"
                },
                "state": {
                    "type": "string",
                    "description": "The workspace state"
                },
                "dataRetrievalState": {
                    "type": "string",
                    "description": "The workspace data retrieval state"
                },
                "isOnDedicatedCapacity": {
                    "type": "boolean",
                    "description": "Whether the workspace is assigned to a dedicated capacity"
                },
                "capacityId": {
                    "type": "string",
                    "description": "The workspace capacity ID"
                },
                "defaultDatasetStorageFormat": {
                    "description": "The default dataset storage format in the workspace. Returned only when `isOnDedicatedCapacity` is `true`",
                    "$ref": "#/definitions/DefaultDatasetStorageFormat"
                },
                "reports": {
                    "type": "array",
                    "description": "The reports associated with this workspace. The list of report properties returned varies for different API calls, so you might not see all report properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoReport"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "The dashboards associated with this workspace. The list of dashboard properties returned varies for different API calls, so you might not see all dashboard properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDashboard"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "The datasets associated with this workspace. The list of dataset properties returned varies for different API calls, so you might not see all dataset properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDataset"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "The dataflows associated with this workspace. The list of dataflow properties returned varies for different API calls, so you might not see all dataflow properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDataflow"
                    }
                },
                "datamarts": {
                    "type": "array",
                    "description": "The datamarts associated with this workspace. The list of datamart properties returned varies for different API calls, so you might not see all datamart properties in an API response.",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDatamart"
                    }
                },
                "users": {
                    "type": "array",
                    "description": "The users with access to the workspace. The list is returned only when explicitly requested. To retrieve a list of users for a classic workspace, use the Azure Active Directory Graph API.",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                }
            }
        },
        "Import": {
            "required": [
                "id"
            ],
            "description": "The import object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The import ID"
                },
                "name": {
                    "type": "string",
                    "description": "The import name"
                },
                "importState": {
                    "type": "string",
                    "description": "The import upload state",
                    "enum": [
                        "Publishing",
                        "Succeeded",
                        "Failed"
                    ]
                },
                "reports": {
                    "type": "array",
                    "description": "The reports associated with this import",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "The datasets associated with this import",
                    "items": {
                        "$ref": "#/definitions/Dataset"
                    }
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Import creation date and time"
                },
                "updatedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Import last update date and time"
                }
            }
        },
        "ImportInfo": {
            "description": "The information about the import",
            "properties": {
                "filePath": {
                    "type": "string",
                    "description": "The path of the OneDrive for Business Excel (.xlsx) file to import, which can be absolute or relative. Power BI .pbix files aren't supported."
                },
                "connectionType": {
                    "type": "string",
                    "description": "The import connection type for a OneDrive for Business file",
                    "enum": [
                        "import",
                        "connect"
                    ],
                    "x-ms-enum": {
                        "name": "connectionType",
                        "modelAsExtensible": true
                    }
                },
                "fileUrl": {
                    "type": "string",
                    "description": "The shared access signature URL of the temporary blob storage used to import large Power BI .pbix files between 1 GB and 10 GB in size."
                }
            }
        },
        "Datasets": {
            "description": "A dataset OData list wrapper",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The datasets",
                    "items": {
                        "$ref": "#/definitions/Dataset"
                    }
                }
            }
        },
        "AdminDatasets": {
            "description": "A dataset odata list wrapper",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The datasets",
                    "items": {
                        "$ref": "#/definitions/AdminDataset"
                    }
                }
            }
        },
        "DatasetNavigationProperties": {
            "description": "A list of navigation related properties of a dataset.",
            "properties": {
                "CreateReportEmbedURL": {
                    "type": "string",
                    "description": "The dataset create report embed URL"
                },
                "QnaEmbedURL": {
                    "type": "string",
                    "description": "The dataset Q&A embed URL"
                },
                "webUrl": {
                    "type": "string",
                    "description": "The web URL of the dataset"
                }
            }
        },
        "DatasetBaseProperties": {
            "required": [
                "id"
            ],
            "description": "A Power BI dataset. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The dataset ID"
                },
                "name": {
                    "type": "string",
                    "description": "The dataset name"
                },
                "configuredBy": {
                    "type": "string",
                    "description": "The dataset owner"
                },
                "CreatedDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The dataset creation date and time"
                },
                "ContentProviderType": {
                    "type": "string",
                    "description": "The content provider type for the dataset"
                },
                "description": {
                    "type": "string",
                    "description": "The dataset description"
                },
                "upstreamDataflows": {
                    "type": "array",
                    "description": "The list of all the dataflows this item depends on",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                }
            }
        },
        "DatasetMiscProperties": {
            "description": "A list of miscellaneous properties returned for a dataset. Returned by User and Admin APIs.",
            "properties": {
                "addRowsAPIEnabled": {
                    "type": "boolean",
                    "description": "Whether the dataset allows adding new rows"
                },
                "IsRefreshable": {
                    "type": "boolean",
                    "description": "This field returns `true` when the dataset is either recently refreshed or is configured for automatic refresh, with the connection mode specifically set to 'Import'. The value will return `false` for other connection modes, such as 'DirectQuery' and 'LiveConnection', regardless of whether the dataset is manually refreshed or is set up for automatic refresh."
                },
                "IsInPlaceSharingEnabled": {
                    "type": "boolean",
                    "description": "Whether the dataset can be shared with external users to be consumed in their own tenant"
                }
            }
        },
        "DatasetSecurityProperties": {
            "description": "A list of security related properties of a Power BI dataset.",
            "properties": {
                "IsEffectiveIdentityRequired": {
                    "type": "boolean",
                    "description": "Whether the dataset requires an effective identity, which you must send in a [GenerateToken](/rest/api/power-bi/embed-token/generate-token) API call."
                },
                "IsEffectiveIdentityRolesRequired": {
                    "type": "boolean",
                    "description": "Whether row-level security is defined inside the Power BI .pbix file. If so, you must specify a role."
                },
                "IsOnPremGatewayRequired": {
                    "type": "boolean",
                    "description": "Whether the dataset requires an on-premises data gateway"
                },
                "Encryption": {
                    "$ref": "#/definitions/Encryption",
                    "description": "Dataset encryption information. Only applicable when `$expand` is specified."
                }
            }
        },
        "DatasetUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "(Empty value) The dataset user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Dataset Users as Admin](/rest/api/power-bi/admin/datasets-get-dataset-users-as-admin) API, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/DatasetUser"
                    }
                }
            }
        },
        "DatasetSchemaProperties": {
            "description": "A list of properties related to the schema of the dataset.",
            "properties": {
                "tables": {
                    "type": "array",
                    "description": "The dataset tables",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                },
                "schemaRetrievalError": {
                    "type": "string",
                    "description": "The dataset schema retrieval error"
                },
                "schemaMayNotBeUpToDate": {
                    "type": "boolean",
                    "description": "Whether the dataset schema might not be up to date"
                },
                "expressions": {
                    "type": "array",
                    "description": "The dataset expressions",
                    "items": {
                        "$ref": "#/definitions/Expression"
                    }
                },
                "roles": {
                    "type": "array",
                    "description": "The dataset roles",
                    "items": {
                        "$ref": "#/definitions/Role"
                    }
                }
            }
        },
        "DatasetQueryScaleOutSettings": {
            "description": "Query scale-out settings of a dataset",
            "properties": {
                "autoSyncReadOnlyReplicas": {
                    "type": "boolean",
                    "description": "Whether the dataset automatically syncs read-only replicas"
                },
                "maxReadOnlyReplicas": {
                    "type": "integer",
                    "minimum": -1,
                    "maximum": 64,
                    "description": "Maximum number of read-only replicas for the dataset (0-64, -1 for automatic number of replicas)"
                }
            }
        },
        "DatasetStorageMode": {
            "properties": {
                "targetStorageMode": {
                    "type": "string",
                    "description": "The dataset storage mode"
                }
            }
        },
        "DatasetWorkspaceIdProperty": {
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dataset workspace ID. This property will be returned only in GetDatasetsAsAdmin."
                }
            }
        },
        "UpdateDatasetRequest": {
            "description": "Update dataset request",
            "properties": {
                "targetStorageMode": {
                    "type": "string",
                    "description": "The dataset storage mode"
                },
                "queryScaleOutSettings": {
                    "type": "object",
                    "$ref": "#/definitions/DatasetQueryScaleOutSettings"
                }
            }
        },
        "UpstreamDatasetsProperties": {
            "properties": {
                "upstreamDatasets": {
                    "type": "array",
                    "description": "The upstream datasets",
                    "items": {
                        "$ref": "#/definitions/DependentDataset"
                    }
                },
                "upstreamDatamarts": {
                    "type": "array",
                    "description": "The list of all the datamarts this item depends on",
                    "items": {
                        "$ref": "#/definitions/DependentDatamart"
                    }
                }
            }
        },
        "Dataset": {
            "description": "A Power BI dataset. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatasetBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatasetNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DatasetSecurityProperties"
                },
                {
                    "$ref": "#/definitions/DatasetUserProperties"
                },
                {
                    "$ref": "#/definitions/DatasetMiscProperties"
                },
                {
                    "$ref": "#/definitions/DatasetStorageMode"
                },
                {
                    "properties": {
                        "queryScaleOutSettings": {
                            "type": "object",
                            "$ref": "#/definitions/DatasetQueryScaleOutSettings",
                            "readOnly": true
                        }
                    }
                }
            ]
        },
        "AdminDataset": {
            "description": "A Power BI dataset returned by Admin APIs. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatasetBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatasetNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DatasetSecurityProperties"
                },
                {
                    "$ref": "#/definitions/DatasetUserProperties"
                },
                {
                    "$ref": "#/definitions/DatasetMiscProperties"
                },
                {
                    "$ref": "#/definitions/DatasetStorageMode"
                },
                {
                    "$ref": "#/definitions/DatasetWorkspaceIdProperty"
                },
                {
                    "properties": {
                        "queryScaleOutSettings": {
                            "type": "object",
                            "$ref": "#/definitions/DatasetQueryScaleOutSettings",
                            "readOnly": true
                        }
                    }
                }
            ]
        },
        "WorkspaceInfoDataset": {
            "description": "A Power BI dataset returned by WorkspaceInfo APIs. The API returns a subset of the following list of dataset properties. The subset depends on the API called, caller permissions, and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatasetBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatasetSchemaProperties"
                },
                {
                    "$ref": "#/definitions/EndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                },
                {
                    "$ref": "#/definitions/DatasetStorageMode"
                },
                {
                    "$ref": "#/definitions/WorkspaceInfoDataflowProperties"
                },
                {
                    "$ref": "#/definitions/UpstreamDatasetsProperties"
                },
                {
                    "$ref": "#/definitions/DatasetUserProperties"
                }
            ]
        },
        "Encryption": {
            "description": "Encryption information for a dataset",
            "properties": {
                "EncryptionStatus": {
                    "type": "string",
                    "description": "Dataset encryption status",
                    "enum": [
                        "Unknown",
                        "NotSupported",
                        "InSyncWithWorkspace",
                        "NotInSyncWithWorkspace"
                    ],
                    "x-ms-enum": {
                        "name": "EncryptionStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Unknown",
                                "description": "The encryption status is unknown due to dataset corruption"
                            },
                            {
                                "value": "NotSupported",
                                "description": "Encryption isn't supported for this dataset"
                            },
                            {
                                "value": "InSyncWithWorkspace",
                                "description": "Encryption is supported and is in sync with the encryption settings"
                            },
                            {
                                "value": "NotInSyncWithWorkspace",
                                "description": "Encryption is supported but isn't in sync with the encryption settings"
                            }
                        ]
                    }
                }
            }
        },
        "CreateDatasetRequest": {
            "required": [
                "name",
                "tables"
            ],
            "description": "A Power BI dataset",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The dataset name"
                },
                "tables": {
                    "type": "array",
                    "description": "The dataset tables",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                },
                "relationships": {
                    "type": "array",
                    "description": "The dataset relationships",
                    "items": {
                        "$ref": "#/definitions/Relationship"
                    }
                },
                "datasources": {
                    "type": "array",
                    "description": "The data sources associated with this dataset",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                },
                "defaultMode": {
                    "type": "string",
                    "description": "The dataset mode or type",
                    "enum": [
                        "AsAzure",
                        "AsOnPrem",
                        "Push",
                        "Streaming",
                        "PushStreaming"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetMode",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "AsAzure",
                                "description": "A dataset with a live connection to Azure Analysis Services"
                            },
                            {
                                "value": "AsOnPrem",
                                "description": "A dataset with a live connection to on-premises Azure Analysis Services"
                            },
                            {
                                "value": "Push",
                                "description": "A dataset that allows programmatic access for pushing data into Power BI"
                            },
                            {
                                "value": "Streaming",
                                "description": "A dataset that supports data streaming. For more information, see [Real-time streaming in Power BI](/power-bi/connect-data/service-real-time-streaming)."
                            },
                            {
                                "value": "PushStreaming",
                                "description": "A dataset that supports data streaming and allows programmatic access for pushing data into Power BI"
                            }
                        ]
                    }
                }
            }
        },
        "Table": {
            "required": [
                "name",
                "columns"
            ],
            "description": "A dataset table",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The table name"
                },
                "columns": {
                    "type": "array",
                    "description": "The column schema for this table",
                    "items": {
                        "$ref": "#/definitions/Column"
                    }
                },
                "rows": {
                    "type": "array",
                    "description": "The data rows within this table",
                    "items": {
                        "$ref": "#/definitions/Row"
                    }
                },
                "measures": {
                    "type": "array",
                    "description": "The measures within this table",
                    "items": {
                        "$ref": "#/definitions/Measure"
                    }
                },
                "isHidden": {
                    "type": "boolean",
                    "description": "Optional. Whether this dataset table is hidden."
                },
                "description": {
                    "type": "string",
                    "description": "The table description"
                },
                "source": {
                    "type": "array",
                    "description": "The table source",
                    "items": {
                        "$ref": "#/definitions/ASMashupExpression"
                    }
                }
            }
        },
        "Expression": {
            "description": "A dataset expression",
            "required": [
                "expression"
            ],
            "properties": {
                "expression": {
                    "$ref": "#/definitions/ASMashupExpression"
                },
                "name": {
                    "type": "string",
                    "description": "The expression name"
                },
                "description": {
                    "type": "string",
                    "description": "The expression description"
                }
            }
        },
        "Role": {
            "description": "A role in a dataset’s RLS configuration",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the role"
                },
                "modelPermission": {
                    "type": "string",
                    "description": "The permissions that the role has on the dataset. For example, Read"
                },
                "members": {
                    "type": "array",
                    "description": "An array listing the members of the role",
                    "$ref": "#/definitions/RoleMember"
                },
                "tablePermissions": {
                    "type": "array",
                    "description": "An array that lists all the filters defined for the role",
                    "$ref": "#/definitions/RoleTablePermission"
                }
            }
        },
        "RoleMember": {
            "description": "A role member",
            "required": [
                "memberName"
            ],
            "properties": {
                "memberName": {
                    "type": "string",
                    "description": "The name of the role member"
                },
                "memberId": {
                    "type": "string",
                    "description": "The role member GUID as assigned by the identity provider"
                },
                "memberType": {
                    "type": "string",
                    "description": "The role member type (user or group)"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The role member identity provider"
                }
            }
        },
        "RoleTablePermission": {
            "description": "A role filter",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the table specified in the filter"
                },
                "filterExpression": {
                    "type": "string",
                    "description": "The expression that filters the table specified in the filter"
                }
            }
        },
        "ASMashupExpression": {
            "description": "A dataset table source",
            "required": [
                "expression"
            ],
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "The source expression"
                }
            }
        },
        "PostRowsRequest": {
            "description": "",
            "properties": {
                "rows": {
                    "type": "array",
                    "description": "An array of data rows pushed to a dataset table. Each element is a collection of properties represented using key-value format.",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "DependentDataflows": {
            "description": "The OData response wrapper for a list of Power BI dependent dataflows",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dependent dataflows",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                }
            }
        },
        "DependentDatasets": {
            "description": "The OData response wrapper for a list of Power BI dependent datasets",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dependent datasets",
                    "items": {
                        "$ref": "#/definitions/DependentDataset"
                    }
                }
            }
        },
        "DatasetToDataflowLinksResponse": {
            "description": "The OData response wrapper for a list of Power BI dataset to dataflow links",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dataset to dataflow links ",
                    "items": {
                        "$ref": "#/definitions/DatasetToDataflowLinkResponse"
                    }
                }
            }
        },
        "Relationship": {
            "required": [
                "name",
                "fromTable",
                "fromColumn",
                "toTable",
                "toColumn"
            ],
            "description": "A relationship between tables in a dataset",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The relationship name and identifier"
                },
                "crossFilteringBehavior": {
                    "type": "string",
                    "description": "The filter direction of the relationship",
                    "enum": [
                        "OneDirection",
                        "BothDirections",
                        "Automatic"
                    ],
                    "x-ms-enum": {
                        "name": "CrossFilteringBehavior",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "OneDirection",
                                "description": "For filtering purposes, the filter will be applied on the table where values are being aggregated."
                            },
                            {
                                "value": "BothDirections",
                                "description": "For filtering purposes, both tables are treated as a single table."
                            },
                            {
                                "value": "Automatic",
                                "description": "Cross filtering behavior is automatically defined"
                            }
                        ]
                    },
                    "default": "OneDirection"
                },
                "fromTable": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The name of the foreign key table"
                },
                "fromColumn": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The name of the foreign key column"
                },
                "toTable": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20\\x23\\x2D\\x30-\\x39\\x40-\\x5A\\x5E-\\x5F\\x61-\\x7A\\x7E-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]{1,100}$",
                    "type": "string",
                    "description": "The name of the primary key table"
                },
                "toColumn": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The name of the primary key column"
                }
            }
        },
        "Datasource": {
            "description": "A Power BI data source",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "(Deprecated) The data source name. Available only for DirectQuery."
                },
                "connectionString": {
                    "type": "string",
                    "description": "(Deprecated) The data source connection string. Available only for DirectQuery."
                },
                "datasourceType": {
                    "type": "string",
                    "description": "The data source type"
                },
                "connectionDetails": {
                    "$ref": "#/definitions/DatasourceConnectionDetails",
                    "description": "The data source connection details"
                },
                "gatewayId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The bound gateway ID, which is empty when not bound to a gateway. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "datasourceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The bound data source ID, which is empty when not bound to a gateway"
                }
            }
        },
        "DatasourceConnectionDetails": {
            "description": "The Power BI data source connection details. See examples in [Get Datasources](/rest/api/power-bi/datasets/get-datasources#examples) or [Get Datasources In Group](/rest/api/power-bi/datasets/get-datasources-in-group#examples).",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "The connection server"
                },
                "database": {
                    "type": "string",
                    "description": "The connection database"
                },
                "url": {
                    "type": "string",
                    "description": "The connection URL"
                },
                "path": {
                    "type": "string",
                    "description": "The connection path"
                },
                "kind": {
                    "type": "string",
                    "description": "The connection kind"
                },
                "account": {
                    "type": "string",
                    "description": "The connection account"
                },
                "domain": {
                    "type": "string",
                    "description": "The connection domain"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The connection email address"
                },
                "loginServer": {
                    "type": "string",
                    "description": "The connection login server"
                },
                "classInfo": {
                    "type": "string",
                    "description": "The connection class information"
                }
            }
        },
        "UpdateDatasourcesRequest": {
            "required": [
                "updateDetails"
            ],
            "description": "Power BI dataset data sources update request",
            "properties": {
                "updateDetails": {
                    "type": "array",
                    "description": "An array of data source connection update requests",
                    "items": {
                        "$ref": "#/definitions/UpdateDatasourceConnectionRequest"
                    }
                }
            }
        },
        "UpdateDatasourceConnectionRequest": {
            "required": [
                "connectionDetails"
            ],
            "description": "Power BI dataset data source connection update request",
            "properties": {
                "connectionDetails": {
                    "$ref": "#/definitions/DatasourceConnectionDetails",
                    "description": "The target connection details of the updated data source"
                },
                "datasourceSelector": {
                    "$ref": "#/definitions/Datasource",
                    "description": "The connection details of the data source that needs update. This is mandatory when a dataset has more than one data source."
                }
            }
        },
        "Column": {
            "required": [
                "name",
                "dataType"
            ],
            "description": "A dataset column",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The column name"
                },
                "dataType": {
                    "type": "string",
                    "description": "The column data type"
                },
                "formatString": {
                    "type": "string",
                    "description": "Optional. The format of the column as specified in [FORMAT_STRING](https://docs.microsoft.com/analysis-services/multidimensional-models/mdx/mdx-cell-properties-format-string-contents)."
                },
                "sortByColumn": {
                    "type": "string",
                    "description": "Optional. String name of a column in the same table to be used to order the current column."
                },
                "dataCategory": {
                    "type": "string",
                    "description": "Optional. The string value to be used for the data category which describes the data within this column."
                },
                "isHidden": {
                    "type": "boolean",
                    "description": "Optional. Whether the column is hidden. The default is `false`."
                },
                "summarizeBy": {
                    "type": "string",
                    "description": "Optional. The aggregate function to use for summarizing this column."
                }
            }
        },
        "Row": {
            "description": "A data row in a dataset",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique row ID"
                }
            }
        },
        "Measure": {
            "required": [
                "name",
                "expression"
            ],
            "description": "A Power BI measure",
            "properties": {
                "name": {
                    "pattern": "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]+$",
                    "type": "string",
                    "description": "The measure name"
                },
                "expression": {
                    "type": "string",
                    "description": "A valid DAX expression"
                },
                "formatString": {
                    "type": "string",
                    "description": "Optional. A string describing how the value should be formatted when it's displayed as specified in [FORMAT_STRING](https://docs.microsoft.com/analysis-services/multidimensional-models/mdx/mdx-cell-properties-format-string-contents)."
                },
                "description": {
                    "type": "string",
                    "description": "Optional. The measure description."
                },
                "isHidden": {
                    "type": "boolean",
                    "description": "Optional. Whether the measure is hidden."
                }
            }
        },
        "Tables": {
            "description": "The OData response wrapper for a Power BI table collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The Power BI tables",
                    "items": {
                        "$ref": "#/definitions/Table"
                    }
                }
            }
        },
        "GatewayDatasources": {
            "description": "The OData response wrapper for a Power BI gateway data source collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of gateway data sources",
                    "items": {
                        "$ref": "#/definitions/GatewayDatasource"
                    }
                }
            }
        },
        "GatewayDatasource": {
            "required": [
                "id",
                "gatewayId",
                "credentialType"
            ],
            "description": "A Power BI gateway data source",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID for the data source"
                },
                "gatewayId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The associated gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "datasourceName": {
                    "type": "string",
                    "description": "The name of the data source"
                },
                "datasourceType": {
                    "type": "string",
                    "description": "The type of [data source](/power-bi/connect-data/power-bi-data-sources).\n\n\n| API name for the data source | | |\n|-|-|-|\n| ActiveDirectory | AdobeAnalytics | AdoDotNet |\n| AnalysisServices | AzureBlobs | AzureDataLakeStorage |\n| AzureMarketplace | AzureTables | BizTalk |\n| CDPA | CustomConnector | CustomHttpApi |\n| DB2 | Essbase | EventHub |\n| Excel | Exchange | Extension |\n| Facebook | File | Folder |\n| GoogleAnalytics | Hdfs | HDInsight |\n| Informix | MQ | MySql |\n| OData | ODBC | OleDb |\n| Oracle | PostgreSql | PowerQueryMashup \n| PubNub | Salesforce | SAPBW |\n| SAPBWMessageServer | SapErp | SAPHana |\n| SharePoint | SharePointDocLib | SharePointList |\n| Sql | Sybase | Teradata |\n| UIFlow | Web |"
                },
                "connectionDetails": {
                    "type": "string",
                    "description": "Connection details in JSON format"
                },
                "credentialType": {
                    "type": "string",
                    "description": "The type of data source [credential](/power-bi/developer/embedded/configure-credentials)",
                    "enum": [
                        "Basic",
                        "Windows",
                        "Anonymous",
                        "OAuth2",
                        "Key",
                        "SAS"
                    ],
                    "x-ms-enum": {
                        "name": "credentialType",
                        "modelAsExtensible": true
                    }
                },
                "credentialDetails": {
                    "$ref": "#/definitions/GatewayDatasourceCredentialDetails",
                    "description": "The connection details for the data source that needs update. The connection details are mandatory when the dataset has more than one data source."
                }
            }
        },
        "DependentDataflow": {
            "description": "A Power BI dependent dataflow",
            "properties": {
                "targetDataflowId": {
                    "type": "string",
                    "description": "The target dataflow ID"
                },
                "groupId": {
                    "type": "string",
                    "description": "The target group ID"
                }
            }
        },
        "DependentDatamart": {
            "description": "A Power BI dependent datamart",
            "properties": {
                "targetDatamartId": {
                    "type": "string",
                    "description": "The target datamart ID"
                },
                "groupId": {
                    "type": "string",
                    "description": "The target group ID"
                }
            }
        },
        "DependentDataset": {
            "description": "A Power BI dependent dataset",
            "properties": {
                "targetDatasetId": {
                    "type": "string",
                    "description": "The target dataset ID"
                },
                "groupId": {
                    "type": "string",
                    "description": "The target group ID"
                }
            }
        },
        "DatasetToDataflowLinkResponse": {
            "description": "A Power BI dataset to dataflow link",
            "properties": {
                "datasetObjectId": {
                    "type": "string",
                    "description": "The dataset object ID"
                },
                "dataflowObjectId": {
                    "type": "string",
                    "description": "The dataflow object ID"
                },
                "workspaceObjectId": {
                    "type": "string",
                    "description": "The workspace object ID"
                }
            }
        },
        "Datasources": {
            "description": "The OData response wrapper for a Power BI data source collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The data source collection",
                    "items": {
                        "$ref": "#/definitions/Datasource"
                    }
                }
            }
        },
        "Reports": {
            "description": "The OData response wrapper for a Power BI report collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The report collection",
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                }
            }
        },
        "AdminReports": {
            "description": "OData response wrapper for a Power BI Admin report collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The report collection",
                    "items": {
                        "$ref": "#/definitions/AdminReport"
                    }
                }
            }
        },
        "Pages": {
            "description": "The OData response wrapper for a Power BI page collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The page collection",
                    "items": {
                        "$ref": "#/definitions/Page"
                    }
                }
            }
        },
        "Dashboards": {
            "description": "The OData response wrapper for a Power BI dashboard collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dashboard collection",
                    "items": {
                        "$ref": "#/definitions/Dashboard"
                    }
                }
            }
        },
        "AdminDashboards": {
            "description": "The OData response wrapper for a Power BI dashboard collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dashboard collection",
                    "items": {
                        "$ref": "#/definitions/AdminDashboard"
                    }
                }
            }
        },
        "WorkspaceInfoDashboards": {
            "description": "The OData response wrapper for a Power BI dashboard collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dashboard collection",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoDashboard"
                    }
                }
            }
        },
        "Tiles": {
            "description": "The OData response wrapper for a Power BI tile collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The tile collection",
                    "items": {
                        "$ref": "#/definitions/Tile"
                    }
                }
            }
        },
        "AdminTiles": {
            "description": "The OData response wrapper for a Power BI tile collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The tile collection",
                    "items": {
                        "$ref": "#/definitions/AdminTile"
                    }
                }
            }
        },
        "WorkspaceInfoTiles": {
            "description": "The OData response wrapper for a Power BI tile collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The tile collection",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoTile"
                    }
                }
            }
        },
        "Imports": {
            "description": "The OData response wrapper for a Power BI import collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The import collection",
                    "items": {
                        "$ref": "#/definitions/Import"
                    }
                }
            }
        },
        "Groups": {
            "description": "The OData response wrapper for a list of Power BI groups",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of groups",
                    "items": {
                        "$ref": "#/definitions/Group"
                    }
                }
            }
        },
        "AdminGroups": {
            "description": "The OData response wrapper for a list of Power BI groups returned by Admin APIs",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of groups",
                    "items": {
                        "$ref": "#/definitions/AdminGroup"
                    }
                }
            }
        },
        "Apps": {
            "description": "The OData response wrapper for a list of Power BI installed apps",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of installed apps",
                    "items": {
                        "$ref": "#/definitions/App"
                    }
                }
            }
        },
        "AdminApps": {
            "description": "The OData response wrapper for a list of Power BI installed apps for Admin APIs",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The list of installed apps",
                    "items": {
                        "$ref": "#/definitions/AdminApp"
                    }
                }
            }
        },
        "Gateways": {
            "description": "The OData response wrapper for a list of Power BI gateways",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of gateways",
                    "items": {
                        "$ref": "#/definitions/Gateway"
                    }
                }
            }
        },
        "Refreshes": {
            "description": "The OData response wrapper for a Power BI refresh history list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The refresh history list",
                    "items": {
                        "$ref": "#/definitions/Refresh"
                    }
                }
            }
        },
        "DatasourceUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a data source",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a data source",
                    "items": {
                        "$ref": "#/definitions/DatasourceUser"
                    }
                }
            }
        },
        "GroupUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a workspace",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a workspace",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                }
            }
        },
        "AppUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to an app",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to an app",
                    "items": {
                        "$ref": "#/definitions/AppUser"
                    }
                }
            }
        },
        "CapacityUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a capacity",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a capacity",
                    "items": {
                        "$ref": "#/definitions/CapacityUser"
                    }
                }
            }
        },
        "ReportUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a report",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a report",
                    "items": {
                        "$ref": "#/definitions/ReportUser"
                    }
                }
            }
        },
        "DashboardUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a dashboard",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dashboard",
                    "items": {
                        "$ref": "#/definitions/DashboardUser"
                    }
                }
            }
        },
        "DatasetUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a dataset",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dataset",
                    "items": {
                        "$ref": "#/definitions/DatasetUser"
                    }
                }
            }
        },
        "DatasetUsersAccess": {
            "description": "The OData response wrapper for a list of Power BI principals with access to a dataset",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dataset",
                    "items": {
                        "$ref": "#/definitions/DatasetUserAccess"
                    }
                }
            }
        },
        "DataflowUsers": {
            "description": "The OData response wrapper for a list of Power BI users with access to a dataflow",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of users with access to a dataflow",
                    "items": {
                        "$ref": "#/definitions/DataflowUser"
                    }
                }
            }
        },
        "ArtifactAccessResponse": {
            "description": "The OData response wrapper for a list of Power BI items (such as reports or dashboards) that a user can access",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "artifactAccessEntities": {
                    "type": "array",
                    "description": "The list of Power BI items that a user can access",
                    "items": {
                        "$ref": "#/definitions/ArtifactAccessEntry"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI of the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "The token for the next chunk in the result set"
                }
            }
        },
        "EndorsmentProperties": {
            "description": "A list of properties returned for a Power BI item (such as a report or a dashboard) by WorkspaceInfo APIs",
            "properties": {
                "endorsementDetails": {
                    "$ref": "#/definitions/EndorsementDetails",
                    "description": "The endorsement details"
                }
            }
        },
        "SensitivityProperties": {
            "description": "A list of properties returned for a Power BI item (such as a report or a dashboard) by WorkspaceInfo APIs",
            "properties": {
                "sensitivityLabel": {
                    "$ref": "#/definitions/SensitivityLabel",
                    "description": "The sensitivity label"
                }
            }
        },
        "SubscriptionsByUserResponse": {
            "description": "OData response wrapper for a Power BI subscriptions for user",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "subscriptionEntities": {
                    "type": "array",
                    "description": "The subscriptions for user",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI for the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "Token to get the next chunk of the result set"
                }
            }
        },
        "ReportBaseProperties": {
            "required": [
                "id"
            ],
            "description": "Power BI report common properties. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The report ID"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the report"
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID of the report"
                },
                "appId": {
                    "type": "string",
                    "description": "The app ID, returned only if the report belongs to an app"
                },
                "description": {
                    "type": "string",
                    "description": "The report description"
                },
                "reportType": {
                    "type": "string",
                    "description": "The report type",
                    "enum": [
                        "PaginatedReport",
                        "PowerBIReport"
                    ]
                },
                "originalReportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The actual report ID when the workspace is published as an app."
                },
                "isOwnedByMe": {
                    "type": "boolean",
                    "description": "Determine if the report is created by the current user."
                }
            }
        },
        "ReportNavigationProperties": {
            "description": "A list of navigation related properties of a report.",
            "properties": {
                "webUrl": {
                    "type": "string",
                    "description": "The web URL of the report"
                },
                "embedUrl": {
                    "type": "string",
                    "description": "The embed URL of the report"
                }
            }
        },
        "ReportAuthoringProperties": {
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "The report owner. Available only for reports created after June 2019."
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The last user that modified the report"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The report creation date and time"
                },
                "modifiedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the report was last modified"
                }
            }
        },
        "ReportAuthoringPropertiesById": {
            "properties": {
                "createdById": {
                    "type": "string",
                    "description": "The ID of the report owner. Available only for reports created after June 2019."
                },
                "modifiedById": {
                    "type": "string",
                    "description": "The ID of the last user that modified the report"
                }
            }
        },
        "ReportUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "(Empty value) The user access details for a Power BI report. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI report by using the [Get Report Users as Admin](/rest/api/power-bi/admin/reports-get-report-users-as-admin) API call, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API call with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/ReportUser"
                    }
                }
            }
        },
        "ReportWorkspaceIdProperty": {
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID (GUID) of the report. This property will be returned only in GetReportsAsAdmin."
                }
            }
        },
        "DatamartBaseProperties": {
            "required": [
                "id"
            ],
            "description": "Power BI datamart common properties. The API returns a subset of the following list of datamart properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The datamart ID"
                },
                "name": {
                    "type": "string",
                    "description": "The datamart name"
                },
                "description": {
                    "type": "string",
                    "description": "The datamart description"
                },
                "type": {
                    "type": "string",
                    "description": "The datamart type",
                    "enum": [
                        "Unset",
                        "Ignore",
                        "Sql",
                        "Lakehouse",
                        "Dataverse",
                        "Datawarehouse"
                    ],
                    "x-ms-enum": {
                        "name": "datamartType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Unset",
                                "description": "The datamart type was unset"
                            },
                            {
                                "value": "Ignore",
                                "description": "The datamart has no type"
                            },
                            {
                                "value": "Sql",
                                "description": "The datamart is of Sql type"
                            },
                            {
                                "value": "Lakehouse",
                                "description": "The datamart is of Lakehouse type"
                            },
                            {
                                "value": "Dataverse",
                                "description": "The datamart is of Dataverse type"
                            },
                            {
                                "value": "Datawarehouse",
                                "description": "The datamart is of Datawarehouse type"
                            }
                        ]
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The datamart status",
                    "enum": [
                        "Invalid",
                        "Available",
                        "SuspendedInCriticalPhase",
                        "InProgress",
                        "Error",
                        "OutOfRegion",
                        "NoCapacity"
                    ],
                    "x-ms-enum": {
                        "name": "datamartStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Invalid",
                                "description": "The datamart has invalid status"
                            },
                            {
                                "value": "Available",
                                "description": "The datamart is available"
                            },
                            {
                                "value": "SuspendedInCriticalPhase",
                                "description": "The datamart is suspended in critical phase"
                            },
                            {
                                "value": "InProgress",
                                "description": "The datamart is in progress"
                            },
                            {
                                "value": "Error",
                                "description": "The datamart has error status"
                            },
                            {
                                "value": "OutOfRegion",
                                "description": "The datamart is out of region"
                            },
                            {
                                "value": "NoCapacity",
                                "description": "The datamart has no capacity"
                            }
                        ]
                    }
                },
                "state": {
                    "type": "string",
                    "description": "The datamart current state",
                    "enum": [
                        "Invalid",
                        "Initialized",
                        "Active",
                        "Migrating",
                        "Evicted",
                        "Deleted"
                    ],
                    "x-ms-enum": {
                        "name": "datamartState",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Invalid",
                                "description": "The datamart has invalid state"
                            },
                            {
                                "value": "Initialized",
                                "description": "The datamart was initialized"
                            },
                            {
                                "value": "Active",
                                "description": "The datamart is active"
                            },
                            {
                                "value": "Migrating",
                                "description": "The datamart is migrating"
                            },
                            {
                                "value": "Evicted",
                                "description": "The datamart was evicted"
                            },
                            {
                                "value": "Deleted",
                                "description": "The datamart was deleted"
                            }
                        ]
                    }
                },
                "suspendedBatchId": {
                    "type": "string",
                    "description": "datamart suspended batch id"
                }
            }
        },
        "DatamartAuthoringProperties": {
            "properties": {
                "modifiedBy": {
                    "type": "string",
                    "description": "The last user that modified the datamart"
                },
                "modifiedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the datamart was last modified"
                },
                "configuredBy": {
                    "type": "string",
                    "description": "The name of the datamart owner"
                }
            }
        },
        "DatamartAuthoringPropertiesById": {
            "properties": {
                "modifiedById": {
                    "type": "string",
                    "description": "The ID of the last user that modified the datamart"
                },
                "configuredById": {
                    "type": "string",
                    "description": "The ID of the datamart owner"
                }
            }
        },
        "DatamartUpstreamProperties": {
            "properties": {
                "upstreamDataflows": {
                    "type": "array",
                    "description": "The list of all the dataflows this item depends on",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                },
                "upstreamDatamarts": {
                    "type": "array",
                    "description": "The list of all the datamarts this item depends on",
                    "items": {
                        "$ref": "#/definitions/DependentDatamart"
                    }
                }
            }
        },
        "DatamartDatasourceUsagesProperties": {
            "properties": {
                "datasourceUsages": {
                    "type": "array",
                    "description": "The data source usages",
                    "items": {
                        "$ref": "#/definitions/DatasourceUsage"
                    }
                }
            }
        },
        "DatamartEndorsmentProperties": {
            "properties": {
                "endorsementDetails": {
                    "$ref": "#/definitions/EndorsementDetails",
                    "description": "The datamart endorsement details"
                }
            }
        },
        "DatamartSensitivityLabelProperties": {
            "properties": {
                "sensitivityLabel": {
                    "$ref": "#/definitions/SensitivityLabel",
                    "description": "The datamart sensitivity label"
                }
            }
        },
        "DatamartUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "The user access details for a Power BI datamart.",
                    "items": {
                        "$ref": "#/definitions/DatamartUser"
                    }
                }
            }
        },
        "SubscriptionProperties": {
            "properties": {
                "subscriptions": {
                    "type": "array",
                    "description": "(Empty Value) The subscription details for a Power BI item (such as a report or a dashboard). This property will be removed from the payload response in an upcoming release. You can retrieve subscription information for a Power BI report by using the [Get Report Subscriptions as Admin](/rest/api/power-bi/admin/reports-get-report-subscriptions-as-admin) API call.",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                }
            }
        },
        "RelatedDatasetProperties": {
            "properties": {
                "datasetWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID of the related dataset, returned only if the related dataset belongs to a different workspace"
                }
            }
        },
        "Report": {
            "description": "A Power BI report. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBaseProperties"
                },
                {
                    "$ref": "#/definitions/ReportNavigationProperties"
                },
                {
                    "$ref": "#/definitions/ReportUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "AdminReport": {
            "description": "A Power BI report returned by Admin APIs. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBaseProperties"
                },
                {
                    "$ref": "#/definitions/ReportNavigationProperties"
                },
                {
                    "$ref": "#/definitions/ReportAuthoringProperties"
                },
                {
                    "$ref": "#/definitions/ReportUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                },
                {
                    "$ref": "#/definitions/ReportWorkspaceIdProperty"
                }
            ]
        },
        "WorkspaceInfoReport": {
            "description": "A Power BI report returned by Workspace Info APIs. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/ReportBaseProperties"
                },
                {
                    "$ref": "#/definitions/ReportAuthoringProperties"
                },
                {
                    "$ref": "#/definitions/ReportAuthoringPropertiesById"
                },
                {
                    "$ref": "#/definitions/EndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                },
                {
                    "$ref": "#/definitions/ReportUserProperties"
                },
                {
                    "$ref": "#/definitions/RelatedDatasetProperties"
                }
            ]
        },
        "WorkspaceInfoDatamart": {
            "description": "A Power BI datamart returned by Workspace Info APIs. The API returns a subset of the following list of datamart properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DatamartBaseProperties"
                },
                {
                    "$ref": "#/definitions/DatamartEndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/DatamartSensitivityLabelProperties"
                },
                {
                    "$ref": "#/definitions/DatamartAuthoringProperties"
                },
                {
                    "$ref": "#/definitions/DatamartAuthoringPropertiesById"
                },
                {
                    "$ref": "#/definitions/DatamartUpstreamProperties"
                },
                {
                    "$ref": "#/definitions/DatamartDatasourceUsagesProperties"
                },
                {
                    "$ref": "#/definitions/DatamartUserProperties"
                }
            ]
        },
        "Page": {
            "description": "A Power BI report page",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the report page"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the report page"
                },
                "order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The order of the report page"
                }
            }
        },
        "DashboardBaseProperties": {
            "required": [
                "id"
            ],
            "description": "Power BI dashboard common properties. The API returns a subset of the following list of report properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dashboard ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the dashboard"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether the dashboard is read-only"
                },
                "appId": {
                    "type": "string",
                    "description": "The app ID, returned only if the dashboard belongs to an app"
                }
            }
        },
        "DashboardNavigationProperties": {
            "description": "A list of navigation related properties of a Dashboard.",
            "properties": {
                "webUrl": {
                    "type": "string",
                    "description": "The web URL of the dashboard"
                },
                "embedUrl": {
                    "type": "string",
                    "description": "The embed URL of the dashboard"
                }
            }
        },
        "DashboardUserProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "(Empty value) The dashboard user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI dashboard by using the [Get Dashboard Users as Admin](/rest/api/power-bi/admin/dashboards-get-dashboard-users-as-admin) API call, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API call with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/DashboardUser"
                    }
                }
            }
        },
        "DataClassificationProperties": {
            "properties": {
                "dataClassification": {
                    "type": "string",
                    "description": "The data classification tag of a Power BI item (such as a report or a dashboard)"
                }
            }
        },
        "AdminDashboardTilesProperties": {
            "properties": {
                "tiles": {
                    "type": "array",
                    "description": "The tiles that belong to the dashboard",
                    "items": {
                        "$ref": "#/definitions/AdminTile"
                    }
                }
            }
        },
        "WorkspaceInfoDashboardTilesProperties": {
            "properties": {
                "tiles": {
                    "type": "array",
                    "description": "The tiles that belong to the dashboard",
                    "items": {
                        "$ref": "#/definitions/WorkspaceInfoTile"
                    }
                }
            }
        },
        "DashboardWorkspaceIdProperty": {
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID (GUID) of the dashboard. This property will be returned only in GetDashboardsAsAdmin."
                }
            }
        },
        "Dashboard": {
            "required": [
                "id"
            ],
            "description": "A Power BI dashboard. The API returns a subset of the following list of dashboard properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DashboardBaseProperties"
                },
                {
                    "$ref": "#/definitions/DashboardNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DashboardUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "AdminDashboard": {
            "required": [
                "id"
            ],
            "description": "A Power BI dashboard returned by Admin APIs. The API returns a subset of the following list of dashboard properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DashboardBaseProperties"
                },
                {
                    "$ref": "#/definitions/DashboardNavigationProperties"
                },
                {
                    "$ref": "#/definitions/DashboardWorkspaceIdProperty"
                },
                {
                    "$ref": "#/definitions/AdminDashboardTilesProperties"
                },
                {
                    "$ref": "#/definitions/DashboardUserProperties"
                },
                {
                    "$ref": "#/definitions/SubscriptionProperties"
                }
            ]
        },
        "WorkspaceInfoDashboard": {
            "required": [
                "id"
            ],
            "description": "A Power BI dashboard returned by WorkspaceInfo APIs. The API returns a subset of the following list of dashboard properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DashboardBaseProperties"
                },
                {
                    "$ref": "#/definitions/DataClassificationProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                },
                {
                    "$ref": "#/definitions/WorkspaceInfoDashboardTilesProperties"
                },
                {
                    "$ref": "#/definitions/DashboardUserProperties"
                }
            ]
        },
        "TileBaseProperties": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tile ID"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the tile "
                },
                "reportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The report ID. Available only for tiles created from a report."
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID. Available only for tiles created from a report or by using a dataset, such as Q&A tiles."
                }
            }
        },
        "TileLayoutProperties": {
            "properties": {
                "rowSpan": {
                    "type": "integer",
                    "description": "The number of tile span rows"
                },
                "colSpan": {
                    "type": "integer",
                    "description": "The number of tile span columns"
                }
            }
        },
        "TileEmbedProperties": {
            "properties": {
                "embedUrl": {
                    "type": "string",
                    "description": "The embed URL of the tile"
                },
                "embedData": {
                    "type": "string",
                    "description": "The embed data for the tile"
                }
            }
        },
        "Tile": {
            "description": "A Power BI tile",
            "allOf": [
                {
                    "$ref": "#/definitions/TileBaseProperties"
                },
                {
                    "$ref": "#/definitions/TileLayoutProperties"
                },
                {
                    "$ref": "#/definitions/TileEmbedProperties"
                }
            ]
        },
        "AdminTile": {
            "description": "A Power BI tile returned by Admin APIs.",
            "allOf": [
                {
                    "$ref": "#/definitions/TileBaseProperties"
                },
                {
                    "$ref": "#/definitions/TileLayoutProperties"
                },
                {
                    "$ref": "#/definitions/TileEmbedProperties"
                }
            ]
        },
        "WorkspaceInfoTile": {
            "description": "A Power BI tile returned by WorkspaceInfo APIs",
            "allOf": [
                {
                    "$ref": "#/definitions/TileBaseProperties"
                },
                {
                    "$ref": "#/definitions/RelatedDatasetProperties"
                }
            ]
        },
        "GroupBaseProperties": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID"
                },
                "name": {
                    "type": "string",
                    "description": "The group name"
                }
            }
        },
        "GroupExtendedProperties": {
            "properties": {
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether the group is read-only"
                },
                "isOnDedicatedCapacity": {
                    "type": "boolean",
                    "description": "Whether the group is assigned to a dedicated capacity"
                },
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID"
                },
                "dataflowStorageId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI dataflow storage account ID"
                },
                "defaultDatasetStorageFormat": {
                    "description": "The default dataset storage format in the workspace. Returned only when `isOnDedicatedCapacity` is `true`",
                    "$ref": "#/definitions/DefaultDatasetStorageFormat"
                },
                "logAnalyticsWorkspace": {
                    "description": "The Log Analytics workspace assigned to the group.  This is returned only when retrieving a single group.",
                    "$ref": "#/definitions/AzureResource"
                }
            }
        },
        "GroupAdminProperties": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The group description"
                },
                "type": {
                    "description": "The type of group being returned.",
                    "$ref": "#/definitions/GroupType"
                },
                "state": {
                    "type": "string",
                    "description": "The group state"
                },
                "users": {
                    "type": "array",
                    "description": "(Empty value) The users that belong to the group and their access rights. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI item (such as a report or a dashboard) by using the [Get Group Users As Admin](/rest/api/power-bi/admin/groups-get-group-users-as-admin) API call, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API call with the `getArtifactUsers` parameter.",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "The reports that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminReport"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "The dashboards that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminDashboard"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "The datasets that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminDataset"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "The dataflows that belong to the group",
                    "items": {
                        "$ref": "#/definitions/AdminDataflow"
                    }
                },
                "workbooks": {
                    "type": "array",
                    "description": "The workbooks that belong to the group",
                    "items": {
                        "$ref": "#/definitions/Workbook"
                    }
                },
                "pipelineId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The deployment pipeline ID that the workspace is assigned to."
                },
                "hasWorkspaceLevelSettings": {
                    "type": "boolean",
                    "description": "Whether the workspace has custom settings"
                }
            }
        },
        "RefreshableGroup": {
            "description": "A Power BI group associated to a Refreshable item",
            "allOf": [
                {
                    "$ref": "#/definitions/GroupBaseProperties"
                }
            ]
        },
        "UpdateGroupRequest": {
            "description": "An update request for the group",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name"
                },
                "defaultDatasetStorageFormat": {
                    "description": "The default dataset storage format in the group",
                    "$ref": "#/definitions/DefaultDatasetStorageFormat"
                }
            }
        },
        "Group": {
            "description": "A Power BI group",
            "allOf": [
                {
                    "$ref": "#/definitions/GroupBaseProperties"
                },
                {
                    "$ref": "#/definitions/GroupExtendedProperties"
                }
            ]
        },
        "AdminGroup": {
            "description": "A Power BI group returned by admin APIs",
            "allOf": [
                {
                    "$ref": "#/definitions/GroupBaseProperties"
                },
                {
                    "$ref": "#/definitions/GroupExtendedProperties"
                },
                {
                    "$ref": "#/definitions/GroupAdminProperties"
                }
            ]
        },
        "App": {
            "required": [
                "id"
            ],
            "description": "A Power BI installed app",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The app ID"
                },
                "name": {
                    "type": "string",
                    "description": "The app name"
                },
                "description": {
                    "type": "string",
                    "description": "The app description"
                },
                "lastUpdate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time the app was last updated"
                },
                "publishedBy": {
                    "type": "string",
                    "description": "The app publisher"
                }
            }
        },
        "AdminApp": {
            "allOf": [
                {
                    "$ref": "#/definitions/App"
                }
            ],
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "description": "Associated workspace for the app"
                }
            }
        },
        "Subscription": {
            "required": [
                "id"
            ],
            "description": "An email subscription for a Power BI item (such as a report or a dashboard)",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The subscription ID"
                },
                "title": {
                    "type": "string",
                    "description": "The app name"
                },
                "artifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the subscribed Power BI item (such as a report or a dashboard)"
                },
                "artifactDisplayName": {
                    "type": "string",
                    "description": "The name of the subscribed Power BI item (such as a report or a dashboard)"
                },
                "subArtifactDisplayName": {
                    "type": "string",
                    "description": "The page name of the subscribed Power BI item, if it's a report."
                },
                "artifactType": {
                    "type": "string",
                    "description": "The type of Power BI item (for example a `Report`, `Dashboard`, or `Dataset`)"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether the email subscription is enabled"
                },
                "frequency": {
                    "type": "string",
                    "description": "The frequency of the email subscription"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the email subscription"
                },
                "endDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end date and time of the email subscription"
                },
                "linkToContent": {
                    "type": "boolean",
                    "description": "Whether a subscription link exists in the email subscription"
                },
                "previewImage": {
                    "type": "boolean",
                    "description": "Whether a screenshot of the report exists in the email subscription"
                },
                "attachmentFormat": {
                    "type": "string",
                    "description": "Format of the report attached in the email subscription"
                },
                "users": {
                    "type": "array",
                    "description": "The details of each email subscriber. When using the [Get User Subscriptions As Admin](/rest/api/power-bi/admin/users-get-user-subscriptions-as-admin) API call, the returned value is an empty array (null). This property will be removed from the payload response in an upcoming release. You can retrieve subscription information on a Power BI report or dashboard by using the [Get Report Subscriptions As Admin](/rest/api/power-bi/admin/reports-get-report-subscriptions-as-admin) or [Get Dashboard Subscriptions As Admin](/rest/api/power-bi/admin/dashboards-get-dashboard-subscriptions-as-admin) API calls.",
                    "items": {
                        "$ref": "#/definitions/SubscriptionUser"
                    }
                }
            }
        },
        "Subscriptions": {
            "description": "OData response wrapper for a Power BI subscriptions",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "Power BI email subscription",
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                }
            }
        },
        "GatewayPublicKey": {
            "description": "A Power BI gateway public key",
            "properties": {
                "exponent": {
                    "type": "string",
                    "description": "The public key exponent"
                },
                "modulus": {
                    "type": "string",
                    "description": "The public key modulus"
                }
            }
        },
        "Gateway": {
            "required": [
                "id"
            ],
            "description": "A Power BI gateway",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "name": {
                    "type": "string",
                    "description": "The gateway name"
                },
                "type": {
                    "type": "string",
                    "description": "The gateway type"
                },
                "gatewayAnnotation": {
                    "type": "string",
                    "description": "Gateway metadata in JSON format"
                },
                "publicKey": {
                    "$ref": "#/definitions/GatewayPublicKey",
                    "description": "The gateway public key"
                },
                "gatewayStatus": {
                    "type": "string",
                    "description": "The gateway connectivity status"
                }
            }
        },
        "PublishDatasourceToGatewayRequest": {
            "required": [
                "dataSourceType",
                "connectionDetails",
                "credentialDetails",
                "dataSourceName"
            ],
            "description": "A publish data source to gateway request",
            "properties": {
                "dataSourceType": {
                    "type": "string",
                    "description": "The data source type"
                },
                "connectionDetails": {
                    "type": "string",
                    "description": "The connection details"
                },
                "credentialDetails": {
                    "$ref": "#/definitions/CredentialDetails"
                },
                "dataSourceName": {
                    "type": "string",
                    "description": "The data source name"
                }
            }
        },
        "CredentialDetails": {
            "required": [
                "credentials",
                "credentialType",
                "encryptedConnection",
                "encryptionAlgorithm",
                "privacyLevel"
            ],
            "description": "The credential details",
            "properties": {
                "credentials": {
                    "type": "string",
                    "description": "The credentials, which depend on the 'credentialType' value. For more information, see [Update Datasource](/rest/api/power-bi/gateways/update-datasource#examples) examples."
                },
                "credentialType": {
                    "type": "string",
                    "description": "The credential type",
                    "enum": [
                        "Basic",
                        "Windows",
                        "Anonymous",
                        "OAuth2",
                        "Key",
                        "SAS"
                    ],
                    "x-ms-enum": {
                        "name": "credentialType",
                        "modelAsExtensible": true
                    }
                },
                "encryptedConnection": {
                    "type": "string",
                    "description": "Whether to encrypt the data source connection. The API call will fail if you select encryption and Power BI is unable to establish an encrypted connection with the data source.",
                    "enum": [
                        "Encrypted",
                        "NotEncrypted"
                    ],
                    "x-ms-enum": {
                        "name": "encryptedConnection",
                        "modelAsExtensible": true
                    }
                },
                "encryptionAlgorithm": {
                    "type": "string",
                    "description": "The encryption algorithm. For a cloud data source, specify `None`. For an on-premises data source, specify `RSA-OAEP` and use the gateway public key to encrypt the credentials.",
                    "enum": [
                        "None",
                        "RSA-OAEP"
                    ],
                    "x-ms-enum": {
                        "name": "encryptionAlgorithm",
                        "modelAsExtensible": true
                    }
                },
                "privacyLevel": {
                    "type": "string",
                    "description": "The privacy level, which is relevant when combining data from multiple sources.",
                    "enum": [
                        "None",
                        "Public",
                        "Organizational",
                        "Private"
                    ],
                    "x-ms-enum": {
                        "name": "privacyLevel",
                        "modelAsExtensible": true
                    }
                },
                "useCallerAADIdentity": {
                    "type": "boolean",
                    "description": "Whether the Azure AD identity (OAuth 2.0 credentials) of the API caller (which must be the data source owner) will be used to configure data source credentials (the owner OAuth access token). Typically, you would either use this flag or `useEndUserOAuth2Credentials`."
                },
                "useEndUserOAuth2Credentials": {
                    "type": "boolean",
                    "description": "Whether the end-user Azure AD identity (OAuth 2.0 credentials) is used when connecting to the data source in DirectQuery mode. Use with data sources that support [single sign-on (SSO)](/power-bi/connect-data/power-bi-data-sources#single-sign-on-sso-for-directquery-sources). Typically, you would either use this flag or `useCallerAADIdentity`."
                }
            }
        },
        "GatewayDatasourceCredentialDetails": {
            "description": "The data source credential details",
            "properties": {
                "useEndUserOAuth2Credentials": {
                    "type": "boolean",
                    "description": "Whether the end-user Azure AD identity (OAuth 2.0 credentials) is used when connecting to the data source in DirectQuery mode. Use with data sources that support [single sign-on (SSO)](/power-bi/connect-data/power-bi-data-sources#single-sign-on-sso-for-directquery-sources)."
                }
            }
        },
        "UpdateDatasourceRequest": {
            "required": [
                "credentialDetails"
            ],
            "description": "An update data source to gateway request",
            "properties": {
                "credentialDetails": {
                    "$ref": "#/definitions/CredentialDetails"
                }
            }
        },
        "BindToGatewayRequest": {
            "required": [
                "gatewayObjectId"
            ],
            "description": "The bind dataset to gateway request",
            "properties": {
                "gatewayObjectId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "datasourceObjectIds": {
                    "type": "array",
                    "description": "The unique identifiers for the data sources in the gateway",
                    "items": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A data source ID"
                    }
                }
            }
        },
        "ConnectionDetails": {
            "required": [
                "connectionString"
            ],
            "description": "A connection string wrapper",
            "properties": {
                "connectionString": {
                    "type": "string",
                    "description": "A dataset connection string"
                }
            }
        },
        "Refresh": {
            "description": "A Power BI refresh history entry",
            "properties": {
                "refreshType": {
                    "type": "string",
                    "description": "The type of refresh request",
                    "enum": [
                        "Scheduled",
                        "OnDemand",
                        "ViaApi",
                        "ViaXmlaEndpoint",
                        "ViaEnhancedApi",
                        "OnDemandTraining"
                    ],
                    "x-ms-enum": {
                        "name": "RefreshType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Scheduled",
                                "description": "The refresh was triggered by a dataset refresh schedule setting"
                            },
                            {
                                "value": "OnDemand",
                                "description": "The refresh was triggered interactively through the Power BI portal"
                            },
                            {
                                "value": "ViaApi",
                                "description": "The refresh was triggered by an API call"
                            },
                            {
                                "value": "ViaXmlaEndpoint",
                                "description": "The refresh was triggered through Power BI public XMLA endpoint"
                            },
                            {
                                "value": "ViaEnhancedApi",
                                "description": "The refresh was triggered by an enhanced refresh REST API call"
                            },
                            {
                                "value": "OnDemandTraining",
                                "description": "The refresh was triggered interactively through the Power BI portal with automatic aggregations training"
                            }
                        ]
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the refresh"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end date and time of the refresh (may be empty if a refresh is in progress)"
                },
                "serviceExceptionJson": {
                    "type": "string",
                    "description": "Failure error code in JSON format (empty if no error)"
                },
                "status": {
                    "type": "string",
                    "description": "- `Unknown` if the completion state is unknown or a refresh is in progress.\n- `Completed` for a successfully completed refresh.\n- `Failed` for an unsuccessful refresh (`serviceExceptionJson` will contain the error code).\n- `Disabled` if the refresh is disabled by a selective refresh."
                },
                "requestId": {
                    "type": "string",
                    "description": "The identifier of the refresh request. Provide this identifier in all service requests."
                },
                "refreshAttempts": {
                    "type": "array",
                    "description": "The refresh attempt list.",
                    "items": {
                        "$ref": "#/definitions/RefreshAttempt"
                    }
                }
            }
        },
        "RefreshAttempt": {
            "description": "Power BI automatically makes multiple attempts to refresh a dataset if it experiences a refresh failure. This object contains information about each refresh attempt.",
            "properties": {
                "attemptId": {
                    "type": "integer",
                    "description": "The index of the refresh attempt."
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the refresh attempt."
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end date and time of the refresh attempt. The value is void if the refresh attempt is in progress."
                },
                "serviceExceptionJson": {
                    "type": "string",
                    "description": "Failure error code in JSON format. Void if there's no error."
                },
                "type": {
                    "type": "string",
                    "description": "The type of refresh attempt.",
                    "enum": [
                        "Data",
                        "Query"
                    ],
                    "x-ms-enum": {
                        "name": "RefreshAttemptType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Data",
                                "description": "The refresh attempt to load data into the dataset."
                            },
                            {
                                "value": "Query",
                                "description": "The attempt to refresh premium query caches and dashboard tiles.u"
                            }
                        ]
                    }
                }
            }
        },
        "RefreshRequest": {
            "description": "Power BI refresh request",
            "properties": {
                "notifyOption": {
                    "type": "string",
                    "description": "Mail notification options",
                    "enum": [
                        "NoNotification",
                        "MailOnFailure",
                        "MailOnCompletion"
                    ],
                    "x-ms-enum": {
                        "name": "NotifyOption",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NoNotification",
                                "description": "No notification will be sent"
                            },
                            {
                                "value": "MailOnFailure",
                                "description": "A mail notification will be sent on refresh failure"
                            },
                            {
                                "value": "MailOnCompletion",
                                "description": "A mail notification indicating success or failure will be sent on refresh completion"
                            }
                        ]
                    }
                }
            },
            "required": [
                "notifyOption"
            ]
        },
        "DatasetRefreshRequest": {
            "description": "Power BI dataset refresh request",
            "properties": {
                "notifyOption": {
                    "type": "string",
                    "description": "Mail notification options. This parameter is not applicable to enhanced refreshes or API operations with a service principal.",
                    "enum": [
                        "NoNotification",
                        "MailOnFailure",
                        "MailOnCompletion"
                    ],
                    "x-ms-enum": {
                        "name": "NotifyOption",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NoNotification",
                                "description": "No notification will be sent"
                            },
                            {
                                "value": "MailOnFailure",
                                "description": "A mail notification will be sent on refresh failure"
                            },
                            {
                                "value": "MailOnCompletion",
                                "description": "A mail notification indicating success or failure will be sent on refresh completion"
                            }
                        ]
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of processing to perform",
                    "enum": [
                        "Full",
                        "ClearValues",
                        "Calculate",
                        "DataOnly",
                        "Automatic",
                        "Defragment"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetRefreshType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Full",
                                "description": "For all partitions in the specified partition, table, or database, refresh data and recalculate all dependents. For a calculation partition, recalculate the partition and all its dependents."
                            },
                            {
                                "value": "ClearValues",
                                "description": "Clear values in this object and all its dependents"
                            },
                            {
                                "value": "Calculate",
                                "description": "Recalculate this object and all its dependents, but only if needed. This value doesn't force recalculation, except for volatile formulas."
                            },
                            {
                                "value": "DataOnly",
                                "description": "Refresh data in this object and clear all dependents"
                            },
                            {
                                "value": "Automatic",
                                "description": "If the object needs to be refreshed and recalculated, refresh and recalculate the object and all its dependents. Applies if the partition is in a state other than Ready."
                            },
                            {
                                "value": "Defragment",
                                "description": "Defragment the data in the specified table. As data is added to or removed from a table, the dictionaries of each column can become polluted with values that no longer exist in the actual column values. The defragment option will clean up the values in the dictionaries that are no longer used."
                            }
                        ]
                    }
                },
                "commitMode": {
                    "type": "string",
                    "description": "Determines if objects will be committed in batches or only when complete",
                    "enum": [
                        "Transactional",
                        "PartialBatch"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetCommitMode",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Transactional",
                                "description": "Commit the whole refresh operation as a transaction"
                            },
                            {
                                "value": "PartialBatch",
                                "description": "Commit the refresh operation in batches. When utilizing `partialBatch` mode, the refresh operation does not occur within a transaction. Consequently, each command will be committed individually, and in the event of a failure, the model may end up in a state where only a subset of the data is loaded, or the table is left empty. If you desire to guarantee the preservation of previous data in case of a failure, you should execute the operation with `commitMode = transactional.`"
                            }
                        ]
                    }
                },
                "maxParallelism": {
                    "type": "integer",
                    "description": "The maximum number of threads on which to run parallel processing commands"
                },
                "retryCount": {
                    "type": "integer",
                    "description": "Number of times the operation will retry before failing"
                },
                "objects": {
                    "type": "array",
                    "description": "An array of objects to be processed",
                    "items": {
                        "$ref": "#/definitions/DatasetRefreshObjects"
                    }
                },
                "applyRefreshPolicy": {
                    "type": "boolean",
                    "description": "Determine if the policy is applied or not"
                },
                "effectiveDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "If an incremental refresh policy is applied, the `effectiveDate` parameter overrides the current date."
                }
            },
            "required": [
                "notifyOption"
            ]
        },
        "DatasetRefreshDetail": {
            "description": "A Power BI refresh detail entry",
            "properties": {
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the refresh"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end date and time of the refresh (may be empty if a refresh is in progress)"
                },
                "type": {
                    "description": "The type of processing to perform",
                    "$ref": "#/definitions/DatasetRefreshDetailType"
                },
                "commitMode": {
                    "type": "string",
                    "description": "Determines if objects will be committed in batches or only when complete",
                    "enum": [
                        "Transactional",
                        "PartialBatch"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetRefreshDetailCommitMode",
                        "modelAsString": true,
                        "values": [
                            {
                                "value": "Transactional",
                                "description": "Commit the whole refresh operation as a transaction"
                            },
                            {
                                "value": "PartialBatch",
                                "description": "Commit the refresh operation in batches"
                            }
                        ]
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Dataset operation general status",
                    "enum": [
                        "Unknown",
                        "Completed",
                        "Failed",
                        "Disabled"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetRefreshDetailStatus",
                        "modelAsString": true,
                        "values": [
                            {
                                "value": "Unknown",
                                "description": "The completion state is unknown or a refresh is in progress"
                            },
                            {
                                "value": "Completed",
                                "description": "The refresh operation is successfully completed"
                            },
                            {
                                "value": "Failed",
                                "description": "The refresh operation is unsuccessful"
                            },
                            {
                                "value": "Disabled",
                                "description": "The refresh operation is disabled by a selective refresh"
                            }
                        ]
                    }
                },
                "extendedStatus": {
                    "type": "string",
                    "description": "Dataset operation detailed status",
                    "enum": [
                        "Unknown",
                        "NotStarted",
                        "InProgress",
                        "Completed",
                        "TimedOut",
                        "Failed",
                        "Disabled",
                        "Cancelled"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetRefreshDetailExtendedStatus",
                        "modelAsString": true,
                        "values": [
                            {
                                "value": "Unknown",
                                "description": "The completion state is unknown"
                            },
                            {
                                "value": "NotStarted",
                                "description": "The refresh operation isn't started"
                            },
                            {
                                "value": "InProgress",
                                "description": "The refresh operation is in progress"
                            },
                            {
                                "value": "Completed",
                                "description": "The refresh operation is successfully completed"
                            },
                            {
                                "value": "TimedOut",
                                "description": "The refresh operation is timed out"
                            },
                            {
                                "value": "Failed",
                                "description": "The refresh operation is unsuccessful"
                            },
                            {
                                "value": "Disabled",
                                "description": "The refresh operation is disabled by a selective refresh"
                            },
                            {
                                "value": "Cancelled",
                                "description": "The refresh operation has been cancelled by customer"
                            }
                        ]
                    }
                },
                "currentRefreshType": {
                    "description": "The type of processing for the current iteration. This is useful when `commitMode` is set to `PartialBatch`",
                    "$ref": "#/definitions/DatasetRefreshDetailType"
                },
                "numberOfAttempts": {
                    "type": "integer",
                    "description": "The number of attempts for the refresh request"
                },
                "objects": {
                    "type": "array",
                    "description": "An array of objects included in the refresh request",
                    "items": {
                        "$ref": "#/definitions/DatasetRefreshObjects"
                    }
                },
                "messages": {
                    "type": "array",
                    "description": "An array of engine error or warning messages for the refresh request",
                    "items": {
                        "$ref": "#/definitions/EngineMessage"
                    }
                },
                "refreshAttempts": {
                    "type": "array",
                    "description": "The refresh attempt list.",
                    "items": {
                        "$ref": "#/definitions/RefreshAttempt"
                    }
                }
            }
        },
        "DatasetRefreshDetailType": {
            "type": "string",
            "description": "The type of processing to perform",
            "enum": [
                "Full",
                "ClearValues",
                "Calculate",
                "DataOnly",
                "Automatic",
                "Defragment"
            ],
            "x-ms-enum": {
                "name": "DatasetRefreshDetailType",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Full",
                        "description": "For all partitions in the specified partition, table, or database, refresh data and recalculate all dependents. For a calculation partition, recalculate the partition and all its dependents."
                    },
                    {
                        "value": "ClearValues",
                        "description": "Clear values in this object and all its dependents"
                    },
                    {
                        "value": "Calculate",
                        "description": "Recalculate this object and all its dependents, but only if needed. This value doesn't force recalculation, except for volatile formulas."
                    },
                    {
                        "value": "DataOnly",
                        "description": "Refresh data in this object and clear all dependents"
                    },
                    {
                        "value": "Automatic",
                        "description": "If the object needs to be refreshed and recalculated, refresh and recalculate the object and all its dependents. Applies if the partition is in a state other than Ready."
                    },
                    {
                        "value": "Defragment",
                        "description": "Defragment the data in the specified table. As data is added to or removed from a table, the dictionaries of each column can become polluted with values that no longer exist in the actual column values. The defragment option will clean up the values in the dictionaries that are no longer used."
                    }
                ]
            }
        },
        "EngineMessage": {
            "description": "The error or warning message from engine for enhanced refresh",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The error code in hex format"
                },
                "message": {
                    "type": "string",
                    "description": "The text of error or warning message"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the error",
                    "enum": [
                        "Error",
                        "Warning"
                    ],
                    "x-ms-enum": {
                        "name": "RefreshEngineErrorType",
                        "modelAsString": true,
                        "values": [
                            {
                                "value": "Error",
                                "description": "Error message"
                            },
                            {
                                "value": "Warning",
                                "description": "Warning message"
                            }
                        ]
                    }
                }
            }
        },
        "DatasetRefreshObjects": {
            "description": "Power BI dataset refresh target",
            "properties": {
                "table": {
                    "type": "string",
                    "description": "Table to refresh"
                },
                "partition": {
                    "type": "string",
                    "description": "Partition to refresh"
                }
            }
        },
        "RefreshScheduleRequest": {
            "required": [
                "value"
            ],
            "description": "Power BI refresh schedule request",
            "properties": {
                "value": {
                    "description": "An object that contains the details of a refresh schedule",
                    "$ref": "#/definitions/RefreshSchedule"
                }
            }
        },
        "RefreshSchedule": {
            "description": "A Power BI refresh schedule for [imported model](/power-bi/connect-data/refresh-data#datasets-in-import-mode)",
            "properties": {
                "days": {
                    "type": "array",
                    "description": "The days on which to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "Days of week",
                        "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                        ],
                        "x-ms-enum": {
                            "name": "days",
                            "modelAsExtensible": true
                        }
                    }
                },
                "times": {
                    "type": "array",
                    "description": "The times of day to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "A time of day in the format of `hh:mm`, where `hh` is the hour (from *00* to *23*) and `mm` is the minute (can only be *00* or *30*)."
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the refresh is enabled"
                },
                "localTimeZoneId": {
                    "type": "string",
                    "description": "The ID of the time zone to use. For more information, see [Time zone info](/dotnet/api/system.timezoneinfo.id)."
                },
                "NotifyOption": {
                    "type": "string",
                    "description": "The notification option on termination of a scheduled refresh. Service principals only support the `NoNotification` value.",
                    "enum": [
                        "NoNotification",
                        "MailOnFailure"
                    ],
                    "x-ms-enum": {
                        "name": "ScheduleNotifyOption",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NoNotification",
                                "description": "No notification will be sent"
                            },
                            {
                                "value": "MailOnFailure",
                                "description": "A mail notification will be sent on refresh failure"
                            }
                        ]
                    }
                }
            }
        },
        "DefaultDatasetStorageFormat": {
            "type": "string",
            "description": "The default dataset storage format in the group",
            "enum": [
                "Small",
                "Large"
            ],
            "x-ms-enum": {
                "name": "DefaultDatasetStorageFormat",
                "modelAsString": true,
                "values": [
                    {
                        "value": "Small",
                        "description": "Small dataset storage format"
                    },
                    {
                        "value": "Large",
                        "description": "Large dataset storage format"
                    }
                ]
            }
        },
        "DirectQueryRefreshScheduleRequest": {
            "required": [
                "value"
            ],
            "description": "Power BI refresh schedule request for DirectQuery or LiveConnection ",
            "properties": {
                "value": {
                    "description": "An object containing the refresh schedule details for DirectQuery or LiveConnection",
                    "$ref": "#/definitions/DirectQueryRefreshSchedule"
                }
            }
        },
        "DirectQueryRefreshSchedule": {
            "description": "A Power BI refresh schedule for DirectQuery or LiveConnection, specifying either the frequency or a combination of days and times.",
            "properties": {
                "frequency": {
                    "type": "integer",
                    "description": "The interval in minutes between successive refreshes. Supported values are *15*, *30*, *60*, *120*, and *180*."
                },
                "days": {
                    "type": "array",
                    "description": "The days on which to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "Days of week",
                        "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                        ],
                        "x-ms-enum": {
                            "name": "days",
                            "modelAsExtensible": true
                        }
                    }
                },
                "times": {
                    "type": "array",
                    "description": "The times of day to execute the refresh",
                    "items": {
                        "type": "string",
                        "description": "A time of day in the format of `hh:mm`, where `hh` is the hour (from *00* to *23*) and `mm` is the minute (can only be *00* or *30*)."
                    }
                },
                "localTimeZoneId": {
                    "type": "string",
                    "description": "The ID of the time zone to use. For more information, see [Time zone info](/dotnet/api/system.timezoneinfo.id)"
                }
            }
        },
        "MashupParameter": {
            "description": "A Power BI dataset parameter",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The parameter name"
                },
                "type": {
                    "type": "string",
                    "description": "The parameter type"
                },
                "currentValue": {
                    "type": "string",
                    "description": "The current value of the parameter"
                },
                "isRequired": {
                    "type": "boolean",
                    "description": "Whether the dataset parameter is required"
                },
                "suggestedValues": {
                    "type": "array",
                    "description": "A list of suggested parameter values",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "name",
                "type",
                "isRequired"
            ]
        },
        "UpdateMashupParameterDetails": {
            "description": "The update details for a Power BI dataset parameter",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The parameter name"
                },
                "newValue": {
                    "type": "string",
                    "description": "The new value for the parameter"
                }
            },
            "required": [
                "name"
            ]
        },
        "UpdateMashupParametersRequest": {
            "description": "An update request for a Power BI dataset parameter",
            "properties": {
                "updateDetails": {
                    "type": "array",
                    "description": "A list of dataset parameters to update",
                    "items": {
                        "$ref": "#/definitions/UpdateMashupParameterDetails"
                    }
                }
            },
            "required": [
                "updateDetails"
            ]
        },
        "MashupParameters": {
            "description": "The OData response wrapper for a list of Power BI dataset parameters",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "A list of dataset parameters",
                    "items": {
                        "$ref": "#/definitions/MashupParameter"
                    }
                }
            }
        },
        "User": {
            "required": [
                "principalType",
                "identifier"
            ],
            "description": "A Power BI user",
            "properties": {
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "userType": {
                    "type": "string",
                    "description": "Type of the user."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                },
                "profile": {
                    "$ref": "#/definitions/ServicePrincipalProfile"
                }
            }
        },
        "Principal": {
            "required": [
                "identifier",
                "principalType"
            ],
            "description": "A Power BI principal with access to the artifact",
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "For principal type `User`, provide the *UPN*. Otherwise provide the [object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the principal."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "DatasourceUser": {
            "required": [
                "datasourceAccessRight"
            ],
            "description": "A Power BI user with access to the data source",
            "properties": {
                "datasourceAccessRight": {
                    "type": "string",
                    "description": "The access right (permission level) that a user has on the data source",
                    "enum": [
                        "None",
                        "Read",
                        "ReadOverrideEffectiveIdentity"
                    ],
                    "x-ms-enum": {
                        "name": "DatasourceUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to access the data source. Only applies when updating user permissions."
                            },
                            {
                                "value": "Read",
                                "description": "Datasets owned by the user have read access to the data source"
                            },
                            {
                                "value": "ReadOverrideEffectiveIdentity",
                                "description": "The user can override the effective identity for Power BI Embedded. Applicable only for on-premises Analysis Services data sources."
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "The [object ID](/power-bi/developer/embedded/embedded-troubleshoot#what-is-the-difference-between-application-object-id-and-principal-object-id) of the principal"
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                },
                "profile": {
                    "$ref": "#/definitions/ServicePrincipalProfile"
                }
            }
        },
        "ServicePrincipalProfiles": {
            "description": "Odata response wrapper for a Power BI service principal profile collection.",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The service principal profile collection",
                    "items": {
                        "$ref": "#/definitions/ServicePrincipalProfile"
                    }
                }
            }
        },
        "AdminServicePrincipalProfiles": {
            "description": "Odata response wrapper for a Power BI service principal profile collection.",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The service principal profile collection",
                    "items": {
                        "$ref": "#/definitions/AdminServicePrincipalProfile"
                    }
                }
            }
        },
        "ServicePrincipalProfile": {
            "required": [
                "id"
            ],
            "description": "A Power BI service principal profile. Only relevant for [Power BI Embedded multi-tenancy solution](/power-bi/developer/embedded/embed-multi-tenancy).",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal profile ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The service principal profile name"
                }
            }
        },
        "AdminServicePrincipalProfile": {
            "required": [
                "id"
            ],
            "description": "A Power BI service principal profile. Only relevant for [Power BI Embedded multi-tenancy solution](/power-bi/developer/embedded/embed-multi-tenancy).",
            "allOf": [
                {
                    "$ref": "#/definitions/ServicePrincipalProfile"
                }
            ],
            "properties": {
                "servicePrincipalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID"
                }
            }
        },
        "CreateOrUpdateProfileRequest": {
            "required": [
                "id"
            ],
            "description": "A Power BI service principal profile create or update request",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The service principal profile name"
                }
            }
        },
        "GroupUser": {
            "required": [
                "groupUserAccessRight"
            ],
            "description": "A Power BI user with access to the workspace",
            "properties": {
                "groupUserAccessRight": {
                    "type": "string",
                    "description": "The access right (permission level) that a user has on the workspace",
                    "enum": [
                        "None",
                        "Member",
                        "Admin",
                        "Contributor",
                        "Viewer"
                    ],
                    "x-ms-enum": {
                        "name": "GroupUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No access to workspace content"
                            },
                            {
                                "value": "Member",
                                "description": "Read, reshare and explore (ReadReshareExplore) access rights to workspace content"
                            },
                            {
                                "value": "Admin",
                                "description": "Administrator rights to workspace content"
                            },
                            {
                                "value": "Contributor",
                                "description": "Read and explore (ReadExplore) access to workspace content"
                            },
                            {
                                "value": "Viewer",
                                "description": "Read-only (Read) access to workspace content"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "AppUser": {
            "required": [
                "appUserAccessRight"
            ],
            "description": "A Power BI user access right entry for an app",
            "properties": {
                "appUserAccessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the app",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadWriteReshare",
                        "ReadExplore",
                        "ReadCopy",
                        "ReadExploreCopy",
                        "ReadReshareExplore",
                        "ReadReshareExploreCopy",
                        "ReadWriteExplore",
                        "ReadWriteReshareExplore",
                        "ReadWriteExploreCopy",
                        "ReadReshareCopy",
                        "All"
                    ],
                    "x-ms-enum": {
                        "name": "AppUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in app"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in app"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in app"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in app"
                            },
                            {
                                "value": "ReadWriteReshare",
                                "description": "Grants Read, Write and Reshare access to content in app"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to content in app"
                            },
                            {
                                "value": "ReadCopy",
                                "description": "Grants Read and Copy access to content in app"
                            },
                            {
                                "value": "ReadExploreCopy",
                                "description": "Grants Read, Explore and Copy access to content in app"
                            },
                            {
                                "value": "ReadReshareExploreCopy",
                                "description": "Grants Read, Reshare, Explore and Copy access to content in app"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare and Explore access to content in app"
                            },
                            {
                                "value": "ReadWriteExplore",
                                "description": "Grants Read, Write and Explore access to content in app"
                            },
                            {
                                "value": "ReadWriteReshareExplore",
                                "description": "Grants Read, Write, Reshare and Explore access to content in app"
                            },
                            {
                                "value": "ReadWriteExploreCopy",
                                "description": "Grants Read, Write, Explore and Copy access to content in app"
                            },
                            {
                                "value": "ReadReshareCopy",
                                "description": "Grants Read, Reshare, and Copy access to content in app"
                            },
                            {
                                "value": "All",
                                "description": "Grants Read, Write, Explore, Reshare and Copy access to content in app"
                            }
                        ]
                    }
                },
                "emailAddress": {
                    "type": "string",
                    "description": "Email address of the user"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the principal"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier of the principal"
                },
                "graphId": {
                    "type": "string",
                    "description": "Identifier of the principal in Microsoft Graph. Only available for admin APIs."
                },
                "principalType": {
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "CapacityUser": {
            "required": [
                "capacityUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a capacity",
            "properties": {
                "capacityUserAccessRight": {
                    "type": "string",
                    "description": "The access right that the user has on the capacity",
                    "enum": [
                        "None",
                        "Assign",
                        "Admin"
                    ],
                    "x-ms-enum": {
                        "name": "capacityUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "User doesn't have access to the capacity"
                            },
                            {
                                "value": "Assign",
                                "description": "User has contributor rights and can assign workspaces to the capacity"
                            },
                            {
                                "value": "Admin",
                                "description": "User has administrator rights on the capacity"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "ReportUser": {
            "required": [
                "reportUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a report",
            "properties": {
                "reportUserAccessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the report (permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadCopy",
                        "Owner"
                    ],
                    "x-ms-enum": {
                        "name": "ReportUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in report"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in report"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in report"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in report"
                            },
                            {
                                "value": "ReadCopy",
                                "description": "Grants Read and Copy access to content in report"
                            },
                            {
                                "value": "Owner",
                                "description": "Grants Read, Write and Reshare access to content in report"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "DatamartUser": {
            "required": [
                "datamartUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a report",
            "properties": {
                "datamartUserAccessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the datamart (permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "Write",
                        "Reshare",
                        "Explore",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadWriteReshare",
                        "ReadExplore",
                        "ReadReshareExplore",
                        "ReadWriteExplore",
                        "ReadWriteReshareExplore"
                    ],
                    "x-ms-enum": {
                        "name": "DatamartUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in datamart"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in datamart"
                            },
                            {
                                "value": "Write",
                                "description": "Grants write access to content in datamart"
                            },
                            {
                                "value": "Reshare",
                                "description": "Grants reshare access to content in datamart"
                            },
                            {
                                "value": "Explore",
                                "description": "Grants explore access to content in datamart"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants read and write access to content in datamart"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants read and reshare access to content in datamart"
                            },
                            {
                                "value": "ReadWriteReshare",
                                "description": "Grants read and write and reshare access to content in datamart"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants read and explore access to content in datamart"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants read and reshare and explore access to content in datamart"
                            },
                            {
                                "value": "ReadWriteExplore",
                                "description": "Grants read and write and explore access to content in datamart"
                            },
                            {
                                "value": "ReadWriteReshareExplore",
                                "description": "Grants read and write and reshare and explore access to content in datamart"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "DashboardUser": {
            "required": [
                "dashboardUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a dashboard",
            "properties": {
                "dashboardUserAccessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the dashboard (permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadCopy",
                        "Owner"
                    ],
                    "x-ms-enum": {
                        "name": "DashboardUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "No permission to content in dashboard"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in dashboard"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in dashboard"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in dashboard"
                            },
                            {
                                "value": "ReadCopy",
                                "description": "Grants Read and Copy access to content in dashboard"
                            },
                            {
                                "value": "Owner",
                                "description": "Grants Read, Write and Reshare access to content in report"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "DatasetUser": {
            "required": [
                "datasetUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a dataset",
            "properties": {
                "datasetUserAccessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the dataset (permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadWriteReshare",
                        "ReadExplore",
                        "ReadReshareExplore",
                        "ReadWriteExplore",
                        "ReadWriteReshareExplore"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "Removes permission to the content in the dataset"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to the content in the dataset"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to the content in the dataset"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to the content in the dataset"
                            },
                            {
                                "value": "ReadWriteReshare",
                                "description": "Grants Read, Write, and Reshare access to the content in the dataset"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare, and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadWriteExplore",
                                "description": "Grants Read, Write, and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadWriteReshareExplore",
                                "description": "Grants Read, Write, Reshare, and Explore access to the content in the dataset"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "PostDatasetUserAccess": {
            "required": [
                "identifier",
                "principalType",
                "datasetUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a dataset",
            "allOf": [
                {
                    "$ref": "#/definitions/Principal"
                }
            ],
            "properties": {
                "datasetUserAccessRight": {
                    "type": "string",
                    "description": "Required. The access right to grant to the user for the dataset.",
                    "enum": [
                        "Read",
                        "ReadReshare",
                        "ReadExplore",
                        "ReadReshareExplore"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetUserAccessRightEntry",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Read",
                                "description": "Grants Read access to the content in the dataset"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to the content in the dataset"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare, and Explore access to the content in the dataset"
                            }
                        ]
                    }
                }
            }
        },
        "DatasetUserAccess": {
            "required": [
                "identifier",
                "principalType",
                "datasetUserAccessRight"
            ],
            "description": "A Power BI principal access right entry for a dataset",
            "allOf": [
                {
                    "$ref": "#/definitions/Principal"
                }
            ],
            "properties": {
                "datasetUserAccessRight": {
                    "type": "string",
                    "description": "The access rights to assign to the user for the dataset (permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "ReadWriteReshare",
                        "ReadExplore",
                        "ReadReshareExplore",
                        "ReadWriteExplore",
                        "ReadWriteReshareExplore"
                    ],
                    "x-ms-enum": {
                        "name": "DatasetUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "Removes permission to content in dataset"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to the content in the dataset"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to the content in the dataset"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to the content in the dataset"
                            },
                            {
                                "value": "ReadWriteReshare",
                                "description": "Grants Read, Write, and Reshare access to the content in the dataset"
                            },
                            {
                                "value": "ReadExplore",
                                "description": "Grants Read and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadReshareExplore",
                                "description": "Grants Read, Reshare, and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadWriteExplore",
                                "description": "Grants Read, Write, and Explore access to the content in the dataset"
                            },
                            {
                                "value": "ReadWriteReshareExplore",
                                "description": "Grants Read, Write, Reshare, and Explore access to the content in the dataset"
                            }
                        ]
                    }
                }
            }
        },
        "DataflowUser": {
            "required": [
                "dataflowUserAccessRight"
            ],
            "description": "A Power BI user access right entry for a dataflow",
            "properties": {
                "DataflowUserAccessRight": {
                    "type": "string",
                    "description": "The access right that a user has for the dataflow (permission level)",
                    "enum": [
                        "None",
                        "Read",
                        "ReadWrite",
                        "ReadReshare",
                        "Owner"
                    ],
                    "x-ms-enum": {
                        "name": "DataflowUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "Removes permission to content in dataflow"
                            },
                            {
                                "value": "Read",
                                "description": "Grants Read access to content in dataflow"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Grants Read and Write access to content in dataflow"
                            },
                            {
                                "value": "ReadReshare",
                                "description": "Grants Read and Reshare access to content in dataflow"
                            },
                            {
                                "value": "Owner",
                                "description": "Grants Read, Write and Reshare access to content in dataflow"
                            }
                        ]
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "SubscriptionUser": {
            "required": [
                "emailAddress",
                "principalType",
                "identifier"
            ],
            "description": "A Power BI email subscription user",
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                }
            ]
        },
        "ArtifactAccessEntry": {
            "required": [
                "artifactId",
                "displayName",
                "artifactType",
                "accessRight"
            ],
            "description": "A user access entry for a Power BI item",
            "properties": {
                "artifactId": {
                    "type": "string",
                    "description": "The Power BI item ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the Power BI item"
                },
                "artifactType": {
                    "$ref": "#/definitions/ArtifactType",
                    "description": "The type of Power BI item"
                },
                "accessRight": {
                    "type": "string",
                    "description": "The access right that the user has for the Power BI item"
                },
                "shareType": {
                    "type": "string",
                    "description": "The type of how the access is given to the Power BI item. Only available for widely shared artifacts APIs."
                },
                "sharer": {
                    "$ref": "#/definitions/User",
                    "description": "The user who shared the Power BI item. Only available for widely shared artifacts APIs."
                }
            }
        },
        "ArtifactType": {
            "type": "string",
            "description": "The artifact type",
            "enum": [
                "Report",
                "PaginatedReport",
                "Dashboard",
                "Dataset",
                "Dataflow",
                "PersonalGroup",
                "Group",
                "Workspace",
                "Capacity",
                "App"
            ],
            "x-ms-enum": {
                "name": "ArtifactType",
                "modelAsExtensible": true,
                "modelAsString": false,
                "values": [
                    {
                        "value": "Report",
                        "description": "Power BI Report"
                    },
                    {
                        "value": "PaginatedReport",
                        "description": "Power BI Paginated Report"
                    },
                    {
                        "value": "Dashboard",
                        "description": "Power BI Dashboard"
                    },
                    {
                        "value": "Dataset",
                        "description": "Power BI Dataset"
                    },
                    {
                        "value": "Dataflow",
                        "description": "Power BI Dataflow "
                    },
                    {
                        "value": "PersonalGroup",
                        "description": "My workspace object"
                    },
                    {
                        "value": "Group",
                        "description": "V1 shared workspace object"
                    },
                    {
                        "value": "Workspace",
                        "description": "Shared workspace object"
                    },
                    {
                        "value": "Capacity",
                        "description": "Capacity object"
                    },
                    {
                        "value": "App",
                        "description": "Power BI Apps"
                    }
                ]
            }
        },
        "PrincipalType": {
            "type": "string",
            "description": "The principal type",
            "enum": [
                "None",
                "User",
                "Group",
                "App"
            ],
            "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsExtensible": true,
                "values": [
                    {
                        "value": "None",
                        "description": "No principal type. Use for whole organization level access."
                    },
                    {
                        "value": "User",
                        "description": "User principal type"
                    },
                    {
                        "value": "Group",
                        "description": "Group principal type"
                    },
                    {
                        "value": "App",
                        "description": "Service principal type"
                    }
                ]
            }
        },
        "GroupType": {
            "type": "string",
            "description": "The group type",
            "enum": [
                "PersonalGroup",
                "Personal",
                "Group",
                "Workspace"
            ],
            "x-ms-enum": {
                "name": "GroupType",
                "modelAsExtensible": true,
                "modelAsString": false,
                "values": [
                    {
                        "value": "PersonalGroup",
                        "description": "“My workspace”, also known as personal workspace"
                    },
                    {
                        "value": "Personal",
                        "description": "Special type of workspace meant for SharePoint list and OneDrive integration"
                    },
                    {
                        "value": "Workspace",
                        "description": "Shared workspace or simple workspace used to share content with other users in the organization"
                    },
                    {
                        "value": "Group",
                        "description": "V1 version of shared workspace. This type of workspaces will be deprecated as Microsoft migrate all workspaces to latest version of shared workspace"
                    }
                ]
            }
        },
        "CloneReportRequest": {
            "required": [
                "name"
            ],
            "description": "Power BI clone report request",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The new report name"
                },
                "targetWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Optional. Parameter for specifying the target workspace ID. An empty GUID (`00000000-0000-0000-0000-000000000000`) indicates **My workspace**. If this parameter isn't provided, the new report will be cloned within the same workspace as the source report."
                },
                "targetModelId": {
                    "type": "string",
                    "description": "Optional. Parameter for specifying the target associated dataset ID. If not provided, the new report will be associated with the same dataset as the source report."
                }
            }
        },
        "RebindReportRequest": {
            "required": [
                "datasetId"
            ],
            "description": "Power BI rebind report request",
            "properties": {
                "datasetId": {
                    "type": "string",
                    "description": "The new dataset for the rebound report. If the dataset resides in a different workspace than the report, a shared dataset will be created in the report's workspace."
                }
            }
        },
        "ExportReportRequest": {
            "required": [
                "format"
            ],
            "description": "The export to file request",
            "properties": {
                "format": {
                    "type": "string",
                    "description": "The requested format for the exported file",
                    "enum": [
                        "PPTX",
                        "PDF",
                        "PNG",
                        "IMAGE",
                        "XLSX",
                        "DOCX",
                        "CSV",
                        "XML",
                        "MHTML",
                        "ACCESSIBLEPDF"
                    ],
                    "x-ms-enum": {
                        "name": "FileFormat",
                        "values": [
                            {
                                "value": "PPTX",
                                "description": "Microsoft PowerPoint"
                            },
                            {
                                "value": "PDF",
                                "description": "PDF"
                            },
                            {
                                "value": "PNG",
                                "description": "PNG (only supported for Power BI reports)"
                            },
                            {
                                "value": "IMAGE",
                                "description": "BMP, EMF, GIF, JPEG, PNG, or TIFF [image](/sql/reporting-services/image-device-information-settings) formats (only supported for paginated reports)"
                            },
                            {
                                "value": "XLSX",
                                "description": "Microsoft Excel (only supported for paginated reports)"
                            },
                            {
                                "value": "DOCX",
                                "description": "Microsoft Word (only supported for paginated reports)"
                            },
                            {
                                "value": "CSV",
                                "description": "CSV (only supported for paginated reports)"
                            },
                            {
                                "value": "XML",
                                "description": "XML (only supported for paginated reports)"
                            },
                            {
                                "value": "MHTML",
                                "description": "MHTML (only supported for paginated reports)"
                            },
                            {
                                "value": "ACCESSIBLEPDF",
                                "description": "Accessible PDF (only supported for paginated reports)"
                            }
                        ]
                    }
                },
                "powerBIReportConfiguration": {
                    "$ref": "#/definitions/PowerBIReportExportConfiguration",
                    "description": "The configuration used to export a Power BI report"
                },
                "paginatedReportConfiguration": {
                    "$ref": "#/definitions/PaginatedReportExportConfiguration",
                    "description": "The configuration used to export a paginated report"
                }
            }
        },
        "PowerBIReportExportConfiguration": {
            "description": "The export to file configuration for a Power BI report",
            "properties": {
                "settings": {
                    "$ref": "#/definitions/ExportReportSettings",
                    "description": "The settings to be applied for the export to file job"
                },
                "datasetToBind": {
                    "type": "string",
                    "description": "The dataset ID to export the report with. Only needed if exporting with a dataset other than the report's default dataset."
                },
                "defaultBookmark": {
                    "$ref": "#/definitions/PageBookmark",
                    "description": "A default bookmark to apply on all pages that don't have a specific bookmark"
                },
                "reportLevelFilters": {
                    "type": "array",
                    "description": "A list of report level filters to apply. Currently, only one filter is supported.",
                    "items": {
                        "$ref": "#/definitions/ExportFilter"
                    }
                },
                "pages": {
                    "type": "array",
                    "description": "A list of pages to export and their properties. The same page may appear more than once with different visuals.",
                    "items": {
                        "$ref": "#/definitions/ExportReportPage"
                    }
                },
                "identities": {
                    "type": "array",
                    "description": "A list of identities to use for row-level security rules",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                }
            }
        },
        "PaginatedReportExportConfiguration": {
            "description": "The export to file configuration for a paginated report ",
            "properties": {
                "identities": {
                    "type": "array",
                    "description": "The single identity to use when exporting a report. Required when a report uses a Power BI dataset or an Azure Analysis Services data source.",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                },
                "formatSettings": {
                    "type": "object",
                    "description": "A dictionary of format settings. The keys are the device information property names for the requested file format.",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "parameterValues": {
                    "type": "array",
                    "description": "A list of report parameters",
                    "items": {
                        "$ref": "#/definitions/ParameterValue"
                    }
                }
            }
        },
        "ExportReportSettings": {
            "description": "Export to file request settings",
            "properties": {
                "locale": {
                    "type": "string",
                    "description": "The locale to apply"
                },
                "includeHiddenPages": {
                    "type": "boolean",
                    "description": "Whether to include hidden pages when exporting an entire report. If not provided, the default behavior is to exclude hidden pages. This property will be ignored when specific pages are exported."
                }
            }
        },
        "ExportReportPage": {
            "description": "A single page configuration for the export request",
            "required": [
                "pageName"
            ],
            "properties": {
                "pageName": {
                    "type": "string",
                    "description": "The page name"
                },
                "visualName": {
                    "type": "string",
                    "description": "The name of the visual to export. Specify a name, in case only a single visual from this page is exported."
                },
                "bookmark": {
                    "$ref": "#/definitions/PageBookmark",
                    "description": "The bookmark to apply on the page"
                }
            }
        },
        "PageBookmark": {
            "description": "The bookmark to apply on a single page. Provide name or state, but not both.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The bookmark name"
                },
                "state": {
                    "type": "string",
                    "description": "The bookmark state"
                }
            }
        },
        "ExportFilter": {
            "description": "A filter to be applied during the export operation",
            "properties": {
                "filter": {
                    "type": "string",
                    "description": "The filter to apply. For information about the filter syntax, see [Filter a report](/power-bi/collaborate-share/service-url-filters)."
                }
            }
        },
        "ParameterValue": {
            "description": "Data contract for paginated report parameters",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The parameter name"
                },
                "value": {
                    "type": "string",
                    "description": "The parameter value"
                }
            }
        },
        "GroupCreationRequest": {
            "required": [
                "name"
            ],
            "description": "A Power BI request to create a new group",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the newly created group"
                }
            }
        },
        "GroupRestoreRequest": {
            "description": "A Power BI request to restore a deleted group",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the group to be restored"
                },
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the owner of the group to be restored"
                }
            },
            "required": [
                "emailAddress"
            ]
        },
        "IdentityBlob": {
            "required": [
                "value"
            ],
            "description": "A blob for specifying an identity. Only supported for datasets with a DirectQuery connection to Azure SQL",
            "properties": {
                "value": {
                    "type": "string",
                    "description": "An OAuth 2.0 access token for Azure SQL"
                }
            }
        },
        "EffectiveIdentity": {
            "required": [
                "username"
            ],
            "description": "Defines the user identity and roles. For more information, see [Row-level security with Power BI Embedded](/power-bi/developer/embedded/embedded-row-level-security).",
            "properties": {
                "username": {
                    "type": "string",
                    "description": "The effective username within a token that applies row-level security rules. For an on-premises model, the username can contain alphanumeric or any of the following characters `.`, `-`, `_`, `!`, `#`, `^`, `~`, `\\\\`, `@`. For cloud models, the username can contain any ASCII character. For either model, the username length must not exceed 256 characters, and the username shouldn't contain spaces."
                },
                "auditableContext": {
                    "type": "string",
                    "description": "The EffectiveIdentity auditable context. If this parameter is provided and isn't empty, it will enable auditing of the EffectiveIdentity and its value will be set to the username in the audit record. Otherwise, the EffectiveIdentity context will be omitted from the GenerateToken audit record."
                },
                "datasets": {
                    "type": "array",
                    "description": "An array of datasets for which this identity applies",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "description": "An array of row-level security (RLS) roles within a token that applies RLS rules. An identity can contain up to 50 roles. A role can contain any character except `,`, and its length must not exceed 50 characters.",
                    "items": {
                        "type": "string"
                    }
                },
                "customData": {
                    "type": "string",
                    "description": "[Custom data](/power-bi/developer/embedded/embedded-row-level-security#using-the-customdata-feature) that's used to apply row-level security rules. Supported for live connection to Azure Analysis Services models and cloud models only."
                },
                "identityBlob": {
                    "$ref": "#/definitions/IdentityBlob",
                    "description": "A blob that specifies an [identity](/power-bi/developer/embedded/embedded-row-level-security#token-based-identity-sdk-additions). Only supported for datasets with a DirectQuery connection to Azure SQL."
                },
                "reports": {
                    "type": "array",
                    "description": "An array of reports for which this identity applies. Only supported for paginated reports.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DatasourceIdentity": {
            "required": [
                "identityBlob",
                "datasources"
            ],
            "description": "Effective identity for connecting DirectQuery data sources with single sign-on (SSO) enabled.",
            "properties": {
                "identityBlob": {
                    "type": "string",
                    "description": "A blob for specifying the identity."
                },
                "datasources": {
                    "type": "array",
                    "description": "An array of data sources that this identity applies to.",
                    "items": {
                        "$ref": "#/definitions/DatasourceSelector"
                    }
                }
            }
        },
        "DatasourceSelector": {
            "required": [
                "datasourceType",
                "connectionDetails"
            ],
            "description": "An object that uniquely identifies a single data source by its connection details.",
            "properties": {
                "datasourceType": {
                    "type": "string",
                    "description": "The type of the [data source](/power-bi/connect-data/power-bi-data-sources).\n\n\n| API name for the data source | | |\n|-|-|-|\n| ActiveDirectory | AdobeAnalytics | AdoDotNet |\n| AnalysisServices | AzureBlobs | AzureDataLakeStorage |\n| AzureMarketplace | AzureTables | BizTalk |\n| CDPA | CustomConnector | CustomHttpApi |\n| DB2 | Essbase | EventHub |\n| Excel | Exchange | Extension |\n| Facebook | File | Folder |\n| GoogleAnalytics | Hdfs | HDInsight |\n| Informix | MQ | MySql |\n| OData | ODBC | OleDb |\n| Oracle | PostgreSql | PowerQueryMashup \n| PubNub | Salesforce | SAPBW |\n| SAPBWMessageServer | SapErp | SAPHana |\n| SharePoint | SharePointDocLib | SharePointList |\n| Sql | Sybase | Teradata |\n| UIFlow | Web |"
                },
                "connectionDetails": {
                    "$ref": "#/definitions/DatasourceConnectionDetails",
                    "description": "The data source connection details. \nYou can obtain the connection details using [Get Datasources for paginated reports](/rest/api/power-bi/reports/get-datasources-in-group) and [Get Datasources for powerbi reports](/rest/api/power-bi/datasets/get-datasources-in-group) APIs."
                }
            }
        },
        "GenerateTokenRequestV2Dataset": {
            "required": [
                "id"
            ],
            "description": "A dataset object in [GenerateTokenRequestV2](#generatetokenrequestv2)",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The dataset ID"
                },
                "xmlaPermissions": {
                    "type": "string",
                    "description": "XMLA Permissions",
                    "enum": [
                        "Off",
                        "ReadOnly"
                    ],
                    "x-ms-enum": {
                        "name": "XmlaPermissions",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Off",
                                "description": "Indicates that the generated embed token doesn't grant access permissions to the dataset's XMLA endpoint."
                            },
                            {
                                "value": "ReadOnly",
                                "description": "Indicates that the generated embed token grants Read access permissions to the dataset's XMLA endpoint."
                            }
                        ]
                    }
                }
            }
        },
        "GenerateTokenRequestV2TargetWorkspace": {
            "required": [
                "id"
            ],
            "description": "A workspace object in [GenerateTokenRequestV2](#generatetokenrequestv2)",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID"
                }
            }
        },
        "GenerateTokenRequestV2Report": {
            "required": [
                "id"
            ],
            "description": "A report object in [GenerateTokenRequestV2](#generatetokenrequestv2)",
            "properties": {
                "allowEdit": {
                    "type": "boolean",
                    "description": "Whether the generated embed token supports report editing"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The report ID"
                }
            }
        },
        "GenerateTokenRequest": {
            "description": "Power BI Generate Token Request",
            "properties": {
                "accessLevel": {
                    "type": "string",
                    "description": "The required access level for embed token generation",
                    "enum": [
                        "View",
                        "Edit",
                        "Create"
                    ],
                    "x-ms-enum": {
                        "name": "TokenAccessLevel",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "View",
                                "description": "Indicates that the generated embed token grants view-only permission"
                            },
                            {
                                "value": "Edit",
                                "description": "Indicates that the generated embed token grants view and edit permissions. Only applies when you generate an embed token for report embedding."
                            },
                            {
                                "value": "Create",
                                "description": "Indicates that the generated embed token grants create permission. Only applies when you generate an embed token for report creation."
                            }
                        ]
                    }
                },
                "datasetId": {
                    "type": "string",
                    "description": "The dataset ID used for report creation. Only applies when you generate an embed token for report creation."
                },
                "allowSaveAs": {
                    "type": "boolean",
                    "description": "Whether an embedded report can be saved as a new report. The default value is `false`. Only applies when you generate an embed token for report embedding."
                },
                "identities": {
                    "type": "array",
                    "description": "A list of identities to use for row-level security rules",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                },
                "lifetimeInMinutes": {
                    "type": "integer",
                    "description": "The maximum lifetime of the token in minutes, starting from the time it was generated. Can be used to shorten the expiration time of a token, but not to extend it. The value must be a positive integer. Zero (0) is equivalent to null and will be ignored, resulting in the default expiration time."
                }
            }
        },
        "GenerateTokenRequestV2": {
            "description": "Power BI Generate Token Request V2",
            "properties": {
                "datasets": {
                    "type": "array",
                    "description": "A list of datasets",
                    "items": {
                        "$ref": "#/definitions/GenerateTokenRequestV2Dataset"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "A list of reports",
                    "items": {
                        "$ref": "#/definitions/GenerateTokenRequestV2Report"
                    }
                },
                "targetWorkspaces": {
                    "type": "array",
                    "description": "The list of workspaces that the embed token will allow saving to",
                    "items": {
                        "$ref": "#/definitions/GenerateTokenRequestV2TargetWorkspace"
                    }
                },
                "identities": {
                    "type": "array",
                    "description": "The list of identities to use for row-level security rules",
                    "items": {
                        "$ref": "#/definitions/EffectiveIdentity"
                    }
                },
                "lifetimeInMinutes": {
                    "type": "integer",
                    "description": "The maximum lifetime of the token in minutes, starting from the time it was generated. Can be used to shorten the token's expiration time, but not to extend it. The value must be a positive integer. Zero (`0`) is equivalent to `null`, and will set the default expiration time."
                },
                "datasourceIdentities": {
                    "type": "array",
                    "description": "List of identities to use when connecting to data sources with Single Sign-On (SSO) enabled.",
                    "items": {
                        "$ref": "#/definitions/DatasourceIdentity"
                    }
                }
            }
        },
        "EmbedToken": {
            "required": [
                "token",
                "tokenId",
                "expiration"
            ],
            "description": "A Power BI embed token",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "The embed token"
                },
                "tokenId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique token ID. Through audit logs, the token ID can be used to correlate operations that use the token with the generate operation."
                },
                "expiration": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time (UTC) of token expiration"
                }
            }
        },
        "CloneTileRequest": {
            "required": [
                "targetDashboardId"
            ],
            "description": " A Power BI request to clone a tile",
            "properties": {
                "targetDashboardId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The target dashboard ID"
                },
                "targetWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Optional. A parameter for specifying a target workspace ID. An empty GUID (`00000000-0000-0000-0000-000000000000`) indicates **My workspace**. If this parameter isn't provided, the tile will be cloned within the same workspace as the source tile."
                },
                "targetReportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Optional. A parameter for specifying a target report ID. When cloning a tile linked to a report, pass the target report ID to rebind the new tile to a different report."
                },
                "targetModelId": {
                    "type": "string",
                    "description": "Optional. A parameter for specifying a target model ID. When cloning a tile linked to a dataset, pass the target model ID to rebind the new tile to a different dataset."
                },
                "positionConflictAction": {
                    "type": "string",
                    "description": "Optional. A parameter for specifying an action in case of a position conflict. If there's a conflict and this parameter isn't provided, then the default value `Tail` will be applied. If there's no conflict, then the cloned tile will have the same position as in the source.",
                    "enum": [
                        "Tail",
                        "Abort"
                    ],
                    "x-ms-enum": {
                        "name": "positionConflictAction",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Tail",
                                "description": "In the event of position conflict, the tile will be added at the end of the specified dashboard."
                            },
                            {
                                "value": "Abort",
                                "description": "In the event of position conflict, the request will be cancelled."
                            }
                        ]
                    }
                }
            }
        },
        "AddDashboardRequest": {
            "required": [
                "name"
            ],
            "description": "A Power BI request to add a dashboard",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the new dashboard"
                }
            }
        },
        "SourceReport": {
            "required": [
                "sourceReportId"
            ],
            "description": "An existing source report",
            "properties": {
                "sourceReportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The source report ID"
                },
                "sourceWorkspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The source workspace ID"
                }
            }
        },
        "UpdateReportContentRequest": {
            "required": [
                "sourceType",
                "sourceReport"
            ],
            "description": "A Power BI request to update the content of a report",
            "properties": {
                "sourceType": {
                    "type": "string",
                    "description": "The source type of the content update",
                    "enum": [
                        "ExistingReport"
                    ],
                    "x-ms-enum": {
                        "name": "sourceType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "ExistingReport",
                                "description": "Use an existing report as the source of the content used to update a target report"
                            }
                        ]
                    }
                },
                "sourceReport": {
                    "$ref": "#/definitions/SourceReport"
                }
            }
        },
        "Capacity": {
            "required": [
                "id",
                "state",
                "capacityUserAccessRight"
            ],
            "description": "A Power BI capacity",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the capacity"
                },
                "admins": {
                    "type": "array",
                    "description": "An array of capacity admins",
                    "items": {
                        "type": "string"
                    }
                },
                "sku": {
                    "type": "string",
                    "description": "The capacity SKU"
                },
                "state": {
                    "type": "string",
                    "description": "The capacity state",
                    "enum": [
                        "NotActivated",
                        "Active",
                        "Provisioning",
                        "ProvisionFailed",
                        "PreSuspended",
                        "Suspended",
                        "Deleting",
                        "Deleted",
                        "Invalid",
                        "UpdatingSku"
                    ],
                    "x-ms-enum": {
                        "name": "CapacityState",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NotActivated",
                                "description": "Unsupported"
                            },
                            {
                                "value": "Active",
                                "description": "The capacity is ready to use"
                            },
                            {
                                "value": "Provisioning",
                                "description": "Activation of the capacity is in progress"
                            },
                            {
                                "value": "ProvisionFailed",
                                "description": "Provisioning of the capacity failed"
                            },
                            {
                                "value": "Suspended",
                                "description": "Use of the capacity is suspended"
                            },
                            {
                                "value": "PreSuspended",
                                "description": "Unsupported"
                            },
                            {
                                "value": "Deleting",
                                "description": "Deletion of the capacity is in progress"
                            },
                            {
                                "value": "Deleted",
                                "description": "The capacity was deleted and is unavailable"
                            },
                            {
                                "value": "Invalid",
                                "description": "The capacity can't be used"
                            },
                            {
                                "value": "UpdatingSku",
                                "description": "A capacity SKU change is in progress"
                            }
                        ]
                    }
                },
                "capacityUserAccessRight": {
                    "type": "string",
                    "description": "The access right a user has on the capacity",
                    "enum": [
                        "None",
                        "Assign",
                        "Admin"
                    ],
                    "x-ms-enum": {
                        "name": "capacityUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "None",
                                "description": "User doesn't have access to the capacity"
                            },
                            {
                                "value": "Assign",
                                "description": "User has contributor rights and can assign workspaces to the capacity"
                            },
                            {
                                "value": "Admin",
                                "description": "User has administrator rights on the capacity"
                            }
                        ]
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The Azure region where the capacity was provisioned"
                },
                "tenantKeyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of an encryption key (only applicable to the admin route)"
                },
                "tenantKey": {
                    "$ref": "#/definitions/TenantKey",
                    "description": "Encryption key information (only applies to admin routes)"
                }
            }
        },
        "Capacities": {
            "description": "OData response wrapper for a Power BI capacity list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The capacity list",
                    "items": {
                        "$ref": "#/definitions/Capacity"
                    }
                }
            }
        },
        "AvailableFeatures": {
            "description": "OData response wrapper for a Power BI available features list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "description": "The available features list",
                    "items": {
                        "$ref": "#/definitions/AvailableFeature"
                    }
                }
            }
        },
        "AvailableFeature": {
            "required": [
                "name",
                "state",
                "extendedState"
            ],
            "description": "A Power BI available feature",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The feature name"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "Disabled"
                    ],
                    "x-ms-enum": {
                        "name": "FeatureState",
                        "modelAsExtensible": true
                    },
                    "description": "The feature state"
                },
                "extendedState": {
                    "type": "string",
                    "enum": [
                        "Enabled",
                        "DisabledByAdmin",
                        "UserNotLicensed"
                    ],
                    "x-ms-enum": {
                        "name": "FeatureExtendedState",
                        "modelAsExtensible": true
                    },
                    "description": "The feature extended state"
                },
                "additionalInfo": {
                    "description": "Additional feature information",
                    "$ref": "#/definitions/AdditionalFeatureInfo"
                }
            }
        },
        "AdditionalFeatureInfo": {
            "description": "Additional feature information",
            "properties": {
                "Usage": {
                    "type": "integer",
                    "description": "Workspaces that aren't assigned to a capacity get a limited amount of [embed tokens](/power-bi/developer/embedded/embed-tokens#embed-token), to allow experimenting with the APIs. The `Usage` value represents the percentage of embed tokens that have been consumed. The `Usage` value only applies to the **embed trial** feature. For more information, see [Development testing](/power-bi/developer/embedded/move-to-production#development-testing)."
                }
            }
        },
        "AssignToCapacityRequest": {
            "required": [
                "capacityId"
            ],
            "description": "A Power BI assign-to-capacity request",
            "properties": {
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID. To unassign from a capacity, use an empty GUID (`00000000-0000-0000-0000-000000000000`)."
                }
            }
        },
        "WorkspaceCapacityAssignmentStatus": {
            "required": [
                "status"
            ],
            "description": "A Power BI response with the status of a workspace assign-to-capacity operation",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "The status of a workspace assign-to-capacity operation",
                    "enum": [
                        "Pending",
                        "InProgress",
                        "CompletedSuccessfully",
                        "AssignmentFailed"
                    ],
                    "x-ms-enum": {
                        "name": "AssignmentStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Pending",
                                "description": "The assignment request was received, but the assignment operation hasn't started."
                            },
                            {
                                "value": "InProgress",
                                "description": "The assignment operation is in progress"
                            },
                            {
                                "value": "CompletedSuccessfully",
                                "description": "The assignment operation has completed successfully"
                            },
                            {
                                "value": "AssignmentFailed",
                                "description": "The assignment operation failed"
                            }
                        ]
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of a workspace assignment operation"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end date and time of a workspace assignment operation"
                },
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The capacity ID"
                },
                "activityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The activity ID of the assignment operation (provided in case of an assignment failure)."
                }
            }
        },
        "AzureResource": {
            "required": [
                "subscriptionId",
                "resourceGroup",
                "resourceName"
            ],
            "description": "A response detailing a user-owned Azure resource such as a Log Analytics workspace.",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An identifier for the resource within Power BI.",
                    "readOnly": true
                },
                "subscriptionId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Azure subscription where the resource resides."
                },
                "resourceGroup": {
                    "type": "string",
                    "description": "The resource group within the subscription where the resource resides."
                },
                "resourceName": {
                    "type": "string",
                    "description": "The name of the resource."
                }
            }
        },
        "TemporaryUploadLocation": {
            "required": [
                "Url",
                "ExpirationTime"
            ],
            "description": "A Power BI update report content request",
            "properties": {
                "Url": {
                    "type": "string",
                    "description": "The shared access signature URL for the temporary blob storage"
                },
                "ExpirationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date and time of the shared access signature URL"
                }
            }
        },
        "Workloads": {
            "description": "OData response wrapper for capacity workload settings list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The list of capacity workload settings",
                    "items": {
                        "$ref": "#/definitions/Workload"
                    }
                }
            }
        },
        "WorkloadState": {
            "type": "string",
            "enum": [
                "Disabled",
                "Enabled",
                "Unsupported"
            ],
            "x-ms-enum": {
                "name": "WorkloadState",
                "modelAsExtensible": true,
                "values": [
                    {
                        "value": "Disabled",
                        "description": "The workload is disabled"
                    },
                    {
                        "value": "Enabled",
                        "description": "The workload is enabled"
                    },
                    {
                        "value": "Unsupported",
                        "description": "The workload is unsupported by the current capacity SKU and can't be enabled. This value can't be set by the user in a [Patch Workload](/rest/api/power-bi/capacities/patch-workload) API call."
                    }
                ]
            },
            "description": "The capacity workload state"
        },
        "Workload": {
            "required": [
                "state"
            ],
            "description": "A capacity workload setting",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The workload name"
                },
                "state": {
                    "$ref": "#/definitions/WorkloadState"
                },
                "maxMemoryPercentageSetByUser": {
                    "type": "integer",
                    "description": "The percentage of the maximum memory that a workload can consume (set by the user)"
                }
            }
        },
        "PatchWorkloadRequest": {
            "required": [
                "state"
            ],
            "description": "Patch workload setting request",
            "properties": {
                "state": {
                    "$ref": "#/definitions/WorkloadState"
                },
                "maxMemoryPercentageSetByUser": {
                    "type": "integer",
                    "description": "The percentage of the maximum memory that a workload can consume (set by the user)"
                }
            }
        },
        "DataflowBaseProperties": {
            "required": [
                "objectId"
            ],
            "description": "The metadata of a dataflow. The API returns a subset of the following list of dataflow properties. The subset depends on the API called, caller permissions, and the availability of data in the Power BI database.",
            "properties": {
                "objectId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dataflow ID"
                },
                "name": {
                    "type": "string",
                    "description": "The dataflow name"
                },
                "description": {
                    "type": "string",
                    "description": "The dataflow description"
                },
                "modelUrl": {
                    "type": "string",
                    "description": "A URL to the dataflow definition file (model.json)"
                },
                "configuredBy": {
                    "type": "string",
                    "description": "The dataflow owner"
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The user that modified the dataflow"
                },
                "modifiedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the dataflow was last modified"
                },
                "users": {
                    "type": "array",
                    "description": "(Empty value) The dataflow user access details. This property will be removed from the payload response in an upcoming release. You can retrieve user information on a Power BI dataflow by using the [Get Dataflow Users as Admin](/rest/api/power-bi/admin/dataflows-get-dataflow-users-as-admin) API call, or the [PostWorkspaceInfo](/rest/api/power-bi/admin/workspace-info-post-workspace-info) API call with the `getArtifactUser` parameter.",
                    "items": {
                        "$ref": "#/definitions/DataflowUser"
                    }
                }
            }
        },
        "WorkspaceInfoDataflowProperties": {
            "properties": {
                "datasourceUsages": {
                    "type": "array",
                    "description": "The data source usages",
                    "items": {
                        "$ref": "#/definitions/DatasourceUsage"
                    }
                },
                "misconfiguredDatasourceUsages": {
                    "type": "array",
                    "description": "The data source misconfigured usages",
                    "items": {
                        "$ref": "#/definitions/DatasourceUsage"
                    }
                },
                "upstreamDataflows": {
                    "type": "array",
                    "description": "The list of all the dataflows this item depends on",
                    "items": {
                        "$ref": "#/definitions/DependentDataflow"
                    }
                },
                "upstreamDatamarts": {
                    "type": "array",
                    "description": "The list of all the datamarts this item depends on",
                    "items": {
                        "$ref": "#/definitions/DependentDatamart"
                    }
                }
            }
        },
        "DataflowWorkspaceIdProperty": {
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The dataflow workspace ID."
                }
            }
        },
        "Dataflow": {
            "description": "The metadata of a dataflow. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DataflowBaseProperties"
                }
            ]
        },
        "AdminDataflow": {
            "description": "The metadata of a dataflow returned by Admin APIs. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DataflowBaseProperties"
                },
                {
                    "$ref": "#/definitions/DataflowWorkspaceIdProperty"
                }
            ]
        },
        "WorkspaceInfoDataflow": {
            "description": "The metadata of a dataflow returned by Workspace Info APIs. Below is a list of properties that may be returned for a dataflow. Only a subset of the properties will be returned depending on the API called, the caller permissions and the availability of the data in the Power BI database.",
            "allOf": [
                {
                    "$ref": "#/definitions/DataflowBaseProperties"
                },
                {
                    "$ref": "#/definitions/WorkspaceInfoDataflowProperties"
                },
                {
                    "$ref": "#/definitions/EndorsmentProperties"
                },
                {
                    "$ref": "#/definitions/SensitivityProperties"
                }
            ]
        },
        "Dataflows": {
            "description": "OData response wrapper for a dataflow metadata list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The dataflow metadata list",
                    "items": {
                        "$ref": "#/definitions/Dataflow"
                    }
                }
            }
        },
        "AdminDataflows": {
            "description": "OData response wrapper for a Power BI Admin dataflow collection",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The report collection",
                    "items": {
                        "$ref": "#/definitions/AdminDataflow"
                    }
                }
            }
        },
        "DataflowStorageAccount": {
            "required": [
                "id",
                "isEnabled"
            ],
            "description": "A Power BI dataflow storage account",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI dataflow storage account ID"
                },
                "name": {
                    "type": "string",
                    "description": "The Power BI dataflow storage account name"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Whether workspaces can be assigned to this storage account"
                }
            }
        },
        "DataflowStorageAccounts": {
            "description": "OData response wrapper for Power BI dataflow storage account list",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "The Power BI dataflow storage account list",
                    "items": {
                        "$ref": "#/definitions/DataflowStorageAccount"
                    }
                }
            }
        },
        "AssignToDataflowStorageRequest": {
            "required": [
                "dataflowStorageId"
            ],
            "description": "A Power BI assign to dataflow storage account request",
            "properties": {
                "dataflowStorageId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI dataflow storage account ID. To unassign the specified workspace from a Power BI dataflow storage account, use an empty GUID (`00000000-0000-0000-0000-000000000000`)."
                }
            }
        },
        "Export": {
            "description": "An object describing the details and current state of an export to file job",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The export to file job ID"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start date and time of the export to file job"
                },
                "lastActionDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time of the last change to the export to file job"
                },
                "reportId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the exported report"
                },
                "reportName": {
                    "type": "string",
                    "description": "The name of the exported report"
                },
                "status": {
                    "type": "string",
                    "description": "The current state of the export to file job",
                    "enum": [
                        "Undefined",
                        "NotStarted",
                        "Running",
                        "Succeeded",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "ExportState",
                        "values": [
                            {
                                "value": "Undefined",
                                "description": "The state of the export to file job is undefined"
                            },
                            {
                                "value": "NotStarted",
                                "description": "The export to file job didn't start"
                            },
                            {
                                "value": "Running",
                                "description": "The export to file job is running"
                            },
                            {
                                "value": "Succeeded",
                                "description": "The export to file job finished successfully"
                            },
                            {
                                "value": "Failed",
                                "description": "The export to file job failed"
                            }
                        ]
                    }
                },
                "percentComplete": {
                    "type": "integer",
                    "description": "Job progress as a percentage",
                    "format": "int32",
                    "minimum": 0,
                    "maximum": 100
                },
                "resourceLocation": {
                    "type": "string",
                    "description": "The retrieval URL for the exported file"
                },
                "ResourceFileExtension": {
                    "type": "string",
                    "description": "The extension of the exported file"
                },
                "expirationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date and time of the retrieval URL"
                }
            }
        },
        "TenantKeyCreationRequest": {
            "description": "Add encryption key request",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the encryption key"
                },
                "keyVaultKeyIdentifier": {
                    "type": "string",
                    "description": "The URI that uniquely specifies an encryption key in Azure Key Vault"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether an encryption key is the default key for the entire tenant. Any newly created capacity inherits the default key."
                },
                "activate": {
                    "type": "boolean",
                    "description": "Whether to activate any inactivated capacities and to use this key for its encryption"
                }
            }
        },
        "TenantKeys": {
            "description": "Encryption keys information",
            "properties": {
                "odata.context": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "description": "Encryption keys",
                    "items": {
                        "$ref": "#/definitions/TenantKey"
                    }
                }
            }
        },
        "TenantKey": {
            "description": "Encryption key information",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the encryption key"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the encryption key"
                },
                "keyVaultKeyIdentifier": {
                    "type": "string",
                    "description": "The URI that uniquely specifies the encryption key in Azure Key Vault"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the encryption key is the default key for the entire tenant. Any newly created capacity inherits the default key."
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation date and time of the encryption key"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last update date and time of the encryption key"
                }
            }
        },
        "TenantKeyRotationRequest": {
            "description": "A request to rotate an encryption key",
            "properties": {
                "keyVaultKeyIdentifier": {
                    "type": "string",
                    "description": "The URI that uniquely specifies the encryption key in Azure Key Vault"
                }
            }
        },
        "CapacityPatchRequest": {
            "description": "A patch capacity request",
            "properties": {
                "tenantKeyId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the encryption key"
                }
            }
        },
        "AssignWorkspacesToCapacityRequest": {
            "description": "A request to assign workspaces to a premium capacity",
            "properties": {
                "capacityMigrationAssignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CapacityMigrationAssignment"
                    }
                }
            }
        },
        "CapacityMigrationAssignment": {
            "required": [
                "workspacesToAssign",
                "targetCapacityObjectId"
            ],
            "description": "Assignment contract for migrating workspaces to a premium capacity as tenant admin",
            "properties": {
                "workspacesToAssign": {
                    "type": "array",
                    "description": "The workspace IDs to migrate to a premium capacity",
                    "items": {
                        "type": "string",
                        "description": "The workspace ID"
                    }
                },
                "targetCapacityObjectId": {
                    "type": "string",
                    "description": "The premium capacity ID"
                }
            }
        },
        "UnassignWorkspacesCapacityRequest": {
            "required": [
                "workspacesToUnassign"
            ],
            "description": "A request for migrating workspaces to a shared capacity as tenant admin",
            "properties": {
                "workspacesToUnassign": {
                    "type": "array",
                    "description": "The workspaces to migrate to a shared capacity",
                    "items": {
                        "type": "string",
                        "description": "The workspace ID"
                    }
                }
            }
        },
        "ActivityEventResponse": {
            "description": "OData response wrapper for audit activity events list",
            "properties": {
                "activityEventEntities": {
                    "type": "array",
                    "description": "An array of activity event objects. To learn more about an activity event (which is a collection of event properties) refer to [Microsoft 365 Management Activity schema](https://learn.microsoft.com/en-us/office/office-365-management-api/office-365-management-activity-api-schema#power-bi-schema).",
                    "items": {
                        "type": "object"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI for the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "Token to get the next chunk of the result set"
                }
            }
        },
        "UnusedArtifactsResponse": {
            "description": "OData response wrapper for unused Power BI item (such as a report or a dashboard) entities",
            "properties": {
                "unusedArtifactEntities": {
                    "type": "array",
                    "description": "The unused Power BI item entities",
                    "items": {
                        "$ref": "#/definitions/UnusedArtifactEntity"
                    }
                },
                "continuationUri": {
                    "type": "string",
                    "description": "The URI for the next chunk in the result set"
                },
                "continuationToken": {
                    "type": "string",
                    "description": "Token to get the next chunk of the result set"
                }
            }
        },
        "UnusedArtifactEntity": {
            "required": [
                "artifactId",
                "displayName",
                "artifactType"
            ],
            "description": "The unused Power BI item entity",
            "properties": {
                "artifactId": {
                    "type": "string",
                    "description": "The ID of the Power BI item"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the Power BI item"
                },
                "artifactType": {
                    "type": "string",
                    "description": "The Power BI item type"
                },
                "artifactSizeInMB": {
                    "type": "integer",
                    "description": "The size of the Power BI item in megabytes (if applicable)"
                },
                "createdDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the Power BI item (if applicable)"
                },
                "lastAccessedDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last access time of the Power BI item (if applicable)"
                }
            }
        },
        "Workbooks": {
            "description": "A Power BI workbook list",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The workbooks",
                    "items": {
                        "$ref": "#/definitions/Workbook"
                    }
                }
            }
        },
        "Workbook": {
            "description": "A Power BI workbook",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The workbook name"
                },
                "datasetId": {
                    "type": "string",
                    "description": "The ID of the dataset associated with a workbook. Only applies if the workbook has an associated dataset."
                }
            }
        },
        "Refreshables": {
            "description": "A Power BI refreshables list",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The refreshables",
                    "items": {
                        "$ref": "#/definitions/Refreshable"
                    }
                }
            }
        },
        "Refreshable": {
            "description": "A Power BI refreshable is a dataset that's been refreshed at least once, or for which a valid refresh schedule exists. If a dataset doesn't meet either of these conditions, then it won't show up in the API response. Power BI retains a seven-day refresh history for each dataset, up to a maximum of sixty refreshes.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The object ID of the refreshable"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the refreshable"
                },
                "kind": {
                    "type": "string",
                    "description": "The refreshable kind",
                    "enum": [
                        "Dataset"
                    ],
                    "x-ms-enum": {
                        "name": "RefreshableKind",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Dataset",
                                "description": "Dataset"
                            }
                        ]
                    }
                },
                "startTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start time of the window for which refresh data exists"
                },
                "endTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end time of the window for which refresh data exists"
                },
                "refreshCount": {
                    "type": "integer",
                    "description": "The number of refreshes within the time window for which refresh data exists"
                },
                "refreshFailures": {
                    "type": "integer",
                    "description": "The number of refresh failures within the time window for which refresh data exists"
                },
                "averageDuration": {
                    "type": "number",
                    "description": "The average duration in seconds of a refresh during the time window for which refresh data exists"
                },
                "medianDuration": {
                    "type": "number",
                    "description": "The median duration in seconds of a refresh within the time window for which refresh data exists"
                },
                "refreshesPerDay": {
                    "type": "integer",
                    "description": "The number of refreshes per day (scheduled and on-demand) within the time window for which refresh data exists"
                },
                "lastRefresh": {
                    "$ref": "#/definitions/Refresh",
                    "description": "The last Power BI refresh history entry for the refreshable item"
                },
                "refreshSchedule": {
                    "$ref": "#/definitions/RefreshSchedule",
                    "description": "The refresh schedule for the refreshable item"
                },
                "configuredBy": {
                    "type": "array",
                    "description": "The refreshable owners",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity": {
                    "$ref": "#/definitions/Capacity",
                    "description": "The capacity for the refreshable item"
                },
                "group": {
                    "$ref": "#/definitions/RefreshableGroup",
                    "description": "The associated group for the refreshable item"
                }
            }
        },
        "UpdateRdlDatasourcesRequest": {
            "required": [
                "updateDetails"
            ],
            "description": "A request to update the data sources of a paginated report",
            "properties": {
                "updateDetails": {
                    "type": "array",
                    "description": "The update details for the data sources of the paginated report",
                    "items": {
                        "$ref": "#/definitions/UpdateRdlDatasourceDetails"
                    }
                }
            }
        },
        "UpdateRdlDatasourceDetails": {
            "required": [
                "connectionDetails",
                "datasourceName"
            ],
            "description": "Update details for a paginated report data source",
            "properties": {
                "connectionDetails": {
                    "$ref": "#/definitions/RdlDatasourceConnectionDetails",
                    "description": "The new connection details for the paginated report data source"
                },
                "datasourceName": {
                    "type": "string",
                    "description": "The name of the paginated report data source"
                }
            }
        },
        "RdlDatasourceConnectionDetails": {
            "description": "The connection details for a paginated report data source",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "The connection server"
                },
                "database": {
                    "type": "string",
                    "description": "The connection database"
                }
            }
        },
        "RdlBindToGatewayRequest": {
            "required": [
                "gatewayObjectId",
                "bindDetails"
            ],
            "description": "Paginated report bind data source to gateway request",
            "properties": {
                "gatewayObjectId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The gateway ID. When using a gateway cluster, the gateway ID refers to the primary (first) gateway in the cluster and is similar to the gateway cluster ID."
                },
                "bindDetails": {
                    "description": "List of bind details",
                    "type": "array",  
                    "items": {
                        "$ref": "#/definitions/RdlBindDetail",
                        "description": "BindDetail for each data source in the paginated report"
                    }
                }
            }
        },
        "RdlBindDetail": {
            "description": "BindDetail for each data source in a paginated report",
            "required": ["dataSourceName"],
            "properties": {
                "dataSourceName": {
                    "description": "Name of the data source in the paginated report",
                    "type": "string"
                },
                "dataSourceObjectId": {
                    "description": "The unique identifier for the data source in the gateway",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "DataflowTransactions": {
            "description": "Odata response wrapper for dataflow transactions",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The dataflow transactions",
                    "items": {
                        "$ref": "#/definitions/DataflowTransaction"
                    }
                }
            }
        },
        "DataflowTransaction": {
            "required": [
                "id"
            ],
            "description": "A Power BI dataflow transaction",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The transaction ID"
                },
                "refreshType": {
                    "type": "string",
                    "description": "The type of refresh transaction"
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time of the transaction"
                },
                "endTime": {
                    "type": "string",
                    "description": "The end time of the transaction"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the transaction"
                }
            }
        },
        "DataflowTransactionStatus": {
            "description": "The status of a dataflow refresh transaction",
            "properties": {
                "transactionId": {
                    "description": "The transaction ID",
                    "type": "string"
                },
                "status": {
                    "description": "The transaction status",
                    "type": "string",
                    "enum": [
                        "invalid",
                        "successfullyMarked",
                        "alreadyConcluded",
                        "notFound"
                    ]
                }
            }
        },
        "DataflowUpdateRequestMessage": {
            "description": "A request to update dataflow information",
            "properties": {
                "name": {
                    "description": "The new name for the dataflow",
                    "type": "string"
                },
                "description": {
                    "description": "The new description for the dataflow",
                    "type": "string"
                },
                "allowNativeQueries": {
                    "description": "Whether to allow native queries",
                    "type": "boolean"
                },
                "computeEngineBehavior": {
                    "description": "The behavior of the compute engine",
                    "type": "string",
                    "enum": [
                        "computeOptimized",
                        "computeOn",
                        "computeDisabled"
                    ]
                }
            }
        },
        "CreateInstallTicketRequest": {
            "description": "A request to create a Power BI install ticket",
            "properties": {
                "installDetails": {
                    "type": "array",
                    "description": "List of install details",
                    "items": {
                        "$ref": "#/definitions/TemplateAppInstallDetails"
                    }
                }
            }
        },
        "TemplateAppInstallDetails": {
            "required": [
                "appId",
                "packageKey",
                "ownerTenantId"
            ],
            "description": "The install details for a Power BI template app",
            "properties": {
                "appId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID of the Power BI template app"
                },
                "packageKey": {
                    "type": "string",
                    "description": "The secure key for the Power BI template app version"
                },
                "ownerTenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the Power BI template app owner"
                },
                "config": {
                    "$ref": "#/definitions/TemplateAppConfigurationRequest",
                    "description": "The automated install configuration"
                }
            }
        },
        "TemplateAppConfigurationRequest": {
            "description": "An automated install configuration for a Power BI template app (dictionary of name-value pairs)",
            "properties": {
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "param1": "value1",
                        "param2": "value2"
                    }
                }
            }
        },
        "InstallTicket": {
            "required": [
                "ticket",
                "ticketId",
                "expiration"
            ],
            "description": "An automated install ticket for a Power BI template app",
            "properties": {
                "ticket": {
                    "type": "string",
                    "description": "Install ticket"
                },
                "ticketId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The unique ID of an install ticket. Audit logs can be used to correlate operations that use this ticket with the generate ticket operation."
                },
                "expiration": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The expiration date and time (UTC) of the ticket"
                }
            }
        },
        "ArtifactId": {
            "description": "The unique ID of a Power BI item in UUID format. Dashboard, report, and dataflow IDs are in UUID format, and dataset IDs can be in UUID or string format.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An ID in UUID format"
                }
            }
        },
        "ArtifactStringId": {
            "description": "The unique ID of a Power BI item in string or UUID format. Dashboard, report, and dataflow IDs are in UUID format, and dataset IDs can be in UUID or string format.",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "An ID in string or UUID format"
                }
            }
        },
        "InformationProtectionArtifactsChangeLabel": {
            "description": "A composite of Power BI item IDs for each item type. The IDs specify which Power BI items require an information protection label update.",
            "properties": {
                "dashboards": {
                    "type": "array",
                    "description": "A list of unique dashboard IDs",
                    "items": {
                        "$ref": "#/definitions/ArtifactId"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "A list of unique report IDs",
                    "items": {
                        "$ref": "#/definitions/ArtifactId"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "A list of unique dataset IDs",
                    "items": {
                        "$ref": "#/definitions/ArtifactStringId"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "A list of unique dataflow IDs",
                    "items": {
                        "$ref": "#/definitions/ArtifactId"
                    }
                }
            }
        },
        "InformationProtectionChangeLabelResponse": {
            "description": "A composite of the ID and information protection label change status for one or more Power BI items organized by type",
            "properties": {
                "dashboards": {
                    "type": "array",
                    "description": "A list containing the unique ID and information protection label change status of one or more dashboards",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "A list containing the unique ID and information protection label change status of one or more reports",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "A list containing the unique ID and information protection label change status of one or more dataflows",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                },
                "datasets": {
                    "type": "array",
                    "description": "A list containing the unique ID and information protection label change status of one or more datasets",
                    "items": {
                        "$ref": "#/definitions/ChangeLabelStatus"
                    }
                }
            }
        },
        "ChangeLabelStatus": {
            "description": "The unique ID and information protection label change status of a Power BI item",
            "required": [
                "id",
                "status"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique ID of a Power BI item. The ID is in UUID format for dashboards, reports, and dataflows; and in UUID or string format for datasets."
                },
                "status": {
                    "type": "string",
                    "description": "The status of an information protection label change operation",
                    "enum": [
                        "Failed",
                        "FailedToGetUsageRights",
                        "InsufficientUsageRights",
                        "NotFound",
                        "Succeeded"
                    ],
                    "x-ms-enum": {
                        "name": "status",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Failed",
                                "description": "Failed to set a new label. Please retry."
                            },
                            {
                                "value": "FailedToGetUsageRights",
                                "description": "Failed to set a new label. The Power BI item has a sensitivity label with protection settings, and Power BI was unable to verify that the user has sufficient usage rights to change the label."
                            },
                            {
                                "value": "InsufficientUsageRights",
                                "description": "Failed to set a new label. The Power BI item has a sensitivity label with protection settings, and the admin user (and the delegated user, if provided) doesn't have sufficient usage rights to change the label."
                            },
                            {
                                "value": "NotFound",
                                "description": "The Power BI item ID or label wasn't found"
                            },
                            {
                                "value": "Succeeded",
                                "description": "The Power BI item label was changed"
                            }
                        ]
                    }
                }
            }
        },
        "InformationProtectionChangeLabelDetails": {
            "description": "A composite of label information required to update an information protection label",
            "required": [
                "artifacts",
                "labelId"
            ],
            "properties": {
                "artifacts": {
                    "description": "A composite of Power BI item IDs for each item type",
                    "$ref": "#/definitions/InformationProtectionArtifactsChangeLabel"
                },
                "labelId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The label ID, which must be in the user's label policy."
                },
                "delegatedUser": {
                    "description": "Delegated user details. A delegated user is a user within an organization whose admin sets a label on behalf of the user. Although the admin sets the label, the delegated user is marked as the label issuer.",
                    "$ref": "#/definitions/DelegatedUser"
                },
                "assignmentMethod": {
                    "type": "string",
                    "enum": [
                        "Standard",
                        "Priviledged"
                    ],
                    "x-ms-enum": {
                        "name": "assignmentMethod",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Standard",
                                "description": "The label was set by an automated process (default value)"
                            },
                            {
                                "value": "Priviledged",
                                "description": "The label was set manually"
                            }
                        ]
                    },
                    "description": "Specifies whether the assigned label was set by an automated process or manually."
                }
            }
        },
        "DelegatedUser": {
            "description": "Delegated user details. The user must be an existing user in Power BI and Azure AAD, and must have signed in to Power BI during the last three months.",
            "required": [
                "emailAddress"
            ],
            "properties": {
                "emailAddress": {
                    "description": "The email address of the delegated user",
                    "type": "string"
                }
            }
        },
        "Pipelines": {
            "description": "OData response wrapper for a collection of Power BI deployment pipelines",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipelines",
                    "items": {
                        "$ref": "#/definitions/Pipeline"
                    }
                }
            }
        },
        "AdminPipelines": {
            "description": "OData response wrapper for a collection of Power BI deployment pipelines",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipelines",
                    "items": {
                        "$ref": "#/definitions/AdminPipeline"
                    }
                }
            }
        },
        "PipelineBaseProperties": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The deployment pipeline ID"
                },
                "displayName": {
                    "type": "string",
                    "description": "The deployment pipeline display name"
                },
                "description": {
                    "type": "string",
                    "description": "The deployment pipeline description"
                },
                "stages": {
                    "type": "array",
                    "description": "The collection of deployment pipeline stages. Only returned when `$expand` is set to `stages` in the request.",
                    "items": {
                        "$ref": "#/definitions/PipelineStage"
                    }
                }
            }
        },
        "PipelineUsersProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "description": "The collection of deployment pipeline users. Only returned when `$expand` is set to `users` in the request.",
                    "items": {
                        "$ref": "#/definitions/PipelineUser"
                    }
                }
            }
        },
        "Pipeline": {
            "description": "A Power BI pipeline",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineBaseProperties"
                }
            ]
        },
        "AdminPipeline": {
            "description": "A Power BI pipeline returned by user APIs",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineBaseProperties"
                },
                {
                    "$ref": "#/definitions/PipelineUsersProperties"
                }
            ]
        },
        "PipelineStages": {
            "description": "OData response wrapper for a collection of Power BI deployment pipeline stages.",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipeline stages",
                    "items": {
                        "$ref": "#/definitions/PipelineStage"
                    }
                }
            }
        },
        "PipelineStage": {
            "required": [
                "order"
            ],
            "description": "A Power BI deployment pipeline stage",
            "properties": {
                "order": {
                    "type": "integer",
                    "description": "The stage order, starting from zero."
                },
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The assigned workspace ID. Only applicable when there's an assigned workspace."
                },
                "workspaceName": {
                    "type": "string",
                    "description": "The assigned workspace name. Only applicable when there's an assigned workspace and the user has access to the workspace."
                }
            }
        },
        "PipelineStageArtifacts": {
            "description": "Supported items from a workspace that's assigned to a deployment pipeline stage",
            "properties": {
                "datasets": {
                    "type": "array",
                    "description": "The datasets collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDataset"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "The reports collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageReport"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "The dashboards collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDashboard"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "The dataflows collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDataflow"
                    }
                },
                "datamarts": {
                    "type": "array",
                    "description": "The datamarts collection",
                    "items": {
                        "$ref": "#/definitions/PipelineStageDatamart"
                    }
                }
            }
        },
        "PipelineStageArtifactBase": {
            "required": [
                "artifactId"
            ],
            "description": "Power BI item metadata for a deployment pipeline stage",
            "properties": {
                "artifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The Power BI item ID"
                },
                "artifactDisplayName": {
                    "type": "string",
                    "description": "The Power BI item display name"
                },
                "sourceArtifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item (such as a report or a dashboard) from the workspace assigned to the source stage, which will update the current Power BI item upon deployment. Applicable only when the user has at least contributor access to the source stage workspace."
                },
                "targetArtifactId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item (such as a report or a dashboard) from the workspace of the target stage, which will be updated by the current Power BI item upon deployment. Applicable only when the user has at least contributor access to the target stage workspace."
                },
                "lastDeploymentTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last deployment date and time of the Power BI item"
                }
            }
        },
        "PipelineStageDataflow": {
            "description": "The metadata for a deployment pipeline dataflow",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineStageArtifactBase"
                }
            ]
        },
        "PipelineStageDatamart": {
            "description": "The metadata for a deployment pipeline datamart",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineStageArtifactBase"
                }
            ]
        },
        "PipelineStageDataset": {
            "description": "The metadata for a deployment pipeline dataset",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineStageArtifactBase"
                }
            ]
        },
        "PipelineStageReport": {
            "description": "The metadata for a deployment pipeline report",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineStageArtifactBase"
                }
            ]
        },
        "PipelineStageDashboard": {
            "description": "The metadata for a deployment pipeline dashboard",
            "allOf": [
                {
                    "$ref": "#/definitions/PipelineStageArtifactBase"
                }
            ]
        },
        "PipelineOperations": {
            "description": "OData response wrapper for a collection of Power BI deployment pipeline operations",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipeline operations",
                    "items": {
                        "$ref": "#/definitions/PipelineOperation"
                    }
                }
            }
        },
        "PipelineOperation": {
            "required": [
                "id",
                "status",
                "lastUpdatedTime"
            ],
            "description": "A Power BI deployment pipeline operation",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The operation ID"
                },
                "type": {
                    "type": "string",
                    "description": "The operation type",
                    "enum": [
                        "Deploy"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineOperationType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Deploy",
                                "description": "Deploy content between stages"
                            }
                        ]
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The pipeline operation status",
                    "enum": [
                        "NotStarted",
                        "Executing",
                        "Succeeded",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineOperationStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NotStarted",
                                "description": "Operation not started"
                            },
                            {
                                "value": "Executing",
                                "description": "Operation executing"
                            },
                            {
                                "value": "Succeeded",
                                "description": "Operation succeeded"
                            },
                            {
                                "value": "Failed",
                                "description": "Operation failed"
                            }
                        ]
                    }
                },
                "lastUpdatedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the operation was last updated"
                },
                "executionStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the operation started"
                },
                "executionEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time that the operation ended"
                },
                "sourceStageOrder": {
                    "type": "integer",
                    "description": "The numeric identifier of a source pipeline deployment stage. Development (0), Test (1), Production (2)."
                },
                "targetStageOrder": {
                    "type": "integer",
                    "description": "The numeric identifier of a target pipeline deployment stage. Development (0), Test (1), Production (2)."
                },
                "performedBy": {
                    "description": "User or service principal that performed the pipeline operation.",
                    "$ref": "#/definitions/PipelineOperationUser"
                },
                "note": {
                    "description": "A note representing a description of the operation.",
                    "$ref": "#/definitions/PipelineOperationNote"
                },
                "executionPlan": {
                    "description": "The deployment execution plan. Only applicable to a single pipeline operation.",
                    "$ref": "#/definitions/DeploymentExecutionPlan"
                },
                "preDeploymentDiffInformation": {
                    "description": "The amount of deployed items in the source stage, that are new, identical or different to items in the target stage, before deployment.",
                    "$ref": "#/definitions/PreDeploymentDiffInformation"
                }
            }
        },
        "PipelineOperationUser": {
            "description": "User or service principal that performed the pipeline operation.",
            "required": [
                "principalType"
            ],
            "properties": {
                "userPrincipalName": {
                    "type": "string",
                    "description": "The UPN of the user who performed the deployment."
                },
                "principalObjectID": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the service principal that performed the deployment."
                },
                "principalType": {
                    "description": "The type of user who performed the deployment.",
                    "$ref": "#/definitions/PrincipalType"
                }
            }
        },
        "PipelineOperationNote": {
            "description": "A note describing the deployment.",
            "required": [
                "content",
                "isTruncated"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Text describing the deployment."
                },
                "isTruncated": {
                    "type": "boolean",
                    "description": "Indicates if the note is incomplete. True, only part of the note is returned. False, the note is complete."
                }
            }
        },
        "DeploymentExecutionPlan": {
            "description": "A deployment execution plan",
            "properties": {
                "steps": {
                    "type": "array",
                    "description": "The collection of execution plan steps",
                    "items": {
                        "$ref": "#/definitions/DeploymentExecutionStep"
                    }
                }
            }
        },
        "DeploymentExecutionStep": {
            "required": [
                "index",
                "type",
                "status",
                "lastUpdatedTime"
            ],
            "description": "A deployment execution step",
            "properties": {
                "index": {
                    "type": "integer",
                    "description": "The step index"
                },
                "type": {
                    "type": "string",
                    "description": "The type of deployment step",
                    "enum": [
                        "DatasetDeployment",
                        "ReportDeployment",
                        "DashboardDeployment",
                        "DataflowDeployment",
                        "DatamartDeployment"
                    ],
                    "x-ms-enum": {
                        "name": "DeploymentStepType",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "DatasetDeployment",
                                "description": "A step for deploying a single dataset"
                            },
                            {
                                "value": "ReportDeployment",
                                "description": "A step for deploying a single report"
                            },
                            {
                                "value": "DashboardDeployment",
                                "description": "A step for deploying a single dashboard"
                            },
                            {
                                "value": "DataflowDeployment",
                                "description": "A step for deploying a single dataflow"
                            },
                            {
                                "value": "DatamartDeployment",
                                "description": "A step for deploying a single datamart"
                            }
                        ]
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the pipeline operation",
                    "enum": [
                        "NotStarted",
                        "Executing",
                        "Succeeded",
                        "Failed"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineOperationStatus",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "NotStarted",
                                "description": "The pipeline operation didn't start"
                            },
                            {
                                "value": "Executing",
                                "description": "The pipeline operation is executing"
                            },
                            {
                                "value": "Succeeded",
                                "description": "The pipeline operation succeeded"
                            },
                            {
                                "value": "Failed",
                                "description": "The pipeline operation failed"
                            }
                        ]
                    }
                },
                "preDeploymentDiffState": {
                    "description": "Is an item new, different or identical to items in the target stage before deployment.",
                    "$ref": "#/definitions/DeploymentExecutionStepPreDeploymentDiffState"
                },
                "sourceAndTarget": {
                    "description": "The source and target items of the step",
                    "$ref": "#/definitions/DeploymentSourceAndTarget"
                },
                "error": {
                    "description": "The error details. Only applicable if the pipeline operation failed.",
                    "$ref": "#/definitions/DeploymentError"
                }
            }
        },
        "DeploymentExecutionStepPreDeploymentDiffState": {
            "type": "string",
            "description": "Is an item new, different or identical to items in the target stage before deployment.",
            "enum": [
                "New",
                "Different",
                "NoDifference"
            ],
            "x-ms-enum": {
                "name": "DeploymentExecutionStepPreDeploymentDiffState",
                "modelAsExtensible": true,
                "values": [
                    {
                        "value": "New",
                        "description": "A new deployed item that doesn't exist in the target stage."
                    },
                    {
                        "value": "Different",
                        "description": "Before deployment, the item in the source stage wasn't identical to the one in the target stage."
                    },
                    {
                        "value": "NoDifference",
                        "description": "Before deployment, the item in the source stage was identical to the one in the target stage."
                    }
                ]
            }
        },
        "DeploymentSourceAndTarget": {
            "required": [
                "source"
            ],
            "description": "Source and target items",
            "properties": {
                "source": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item that's deployed from the source stage"
                },
                "sourceDisplayName": {
                    "type": "string",
                    "description": "The display name of the Power BI item that's deployed from the source stage"
                },
                "target": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item that will be overwritten in the target stage. Only applies when overwriting a Power BI item."
                },
                "targetDisplayName": {
                    "type": "string",
                    "description": "The name of the Power BI item that will be overwritten in the target stage. Only applies when overwriting a Power BI item."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Power BI item that will be overwritten in the target stage. Only applies when overwriting a Power BI item."
                }
            }
        },
        "DeploymentError": {
            "description": "Error details for the deployment step",
            "properties": {
                "errorCode": {
                    "type": "string",
                    "description": "The error code"
                },
                "errorDetails": {
                    "type": "string",
                    "description": "Additional error details"
                }
            }
        },
        "PreDeploymentDiffInformation": {
            "required": [
                "newArtifactsCount",
                "differentArtifactsCount",
                "noDifferenceArtifactsCount"
            ],
            "description": "The amount of new, different and identical deployed items before deployment.",
            "properties": {
                "newArtifactsCount": {
                    "type": "integer",
                    "description": "The number of new items deployed to the target stage."
                },
                "differentArtifactsCount": {
                    "type": "integer",
                    "description": "The number of deployed items with differences between source and target stages, before deployment."
                },
                "noDifferenceArtifactsCount": {
                    "type": "integer",
                    "description": "The number of identical deployed items in the source and target stages, before deployment."
                }
            }
        },
        "DeployRequestBase": {
            "required": [
                "sourceStageOrder"
            ],
            "description": "Base request to deploy content from a deployment pipeline stage",
            "properties": {
                "sourceStageOrder": {
                    "type": "integer",
                    "description": "The numeric identifier of the pipeline deployment stage that the content should be deployed from. Development (0), Test (1), Production (2)."
                },
                "isBackwardDeployment": {
                    "type": "boolean",
                    "description": "Whether the deployment will be from a later stage in the deployment pipeline, to an earlier one. The default value is `false`."
                },
                "newWorkspace": {
                    "description": "The configuration details for creating a new workspace. Required when deploying to a stage that has no assigned workspaces. The deployment will fail if the new workspace configuration details aren't provided when required.",
                    "$ref": "#/definitions/PipelineNewWorkspaceRequest"
                },
                "updateAppSettings": {
                    "description": "Update org app in the target workspace settings",
                    "$ref": "#/definitions/PipelineUpdateAppSettings"
                },
                "options": {
                    "description": "Options that control the behavior of the entire deployment",
                    "$ref": "#/definitions/DeploymentOptions"
                },
                "note": {
                    "type": "string",
                    "description": "A note describing the deployment."
                }
            }
        },
        "DeployAllRequest": {
            "description": "A request to deploy all supported items from a deployment pipeline stage",
            "allOf": [
                {
                    "$ref": "#/definitions/DeployRequestBase"
                }
            ]
        },
        "SelectiveDeployRequest": {
            "description": "A request to selectively deploy items from a deployment pipeline stage",
            "allOf": [
                {
                    "$ref": "#/definitions/DeployRequestBase"
                }
            ],
            "properties": {
                "datasets": {
                    "type": "array",
                    "description": "A list of datasets to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "reports": {
                    "type": "array",
                    "description": "A list of reports to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "dashboards": {
                    "type": "array",
                    "description": "A list of dashboards to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "dataflows": {
                    "type": "array",
                    "description": "A list of dataflows to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                },
                "datamarts": {
                    "type": "array",
                    "description": "A list of datamarts to be deployed",
                    "items": {
                        "$ref": "#/definitions/DeployArtifactRequest"
                    }
                }
            }
        },
        "PipelineNewWorkspaceRequest": {
            "description": "The configuration details for creating a new workspace. Required when deploying to a stage that has no assigned workspaces.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the new workspace"
                },
                "capacityId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the capacity that the new workspace will be assigned to. If unspecified and the API caller has permissions for the source stage workspace capacity, then that capacity will be used. Otherwise, Power BI will select a capacity that the API caller has permissions for."
                }
            }
        },
        "PipelineUpdateAppSettings": {
            "description": "Configuration update org app after deployment",
            "properties": {
                "updateAppInTargetWorkspace": {
                    "type": "boolean",
                    "description": "Whether to update the app in the target workspace. Only deployed items that already exist in the app are updated. New deployed items are not added to the app."
                }
            }
        },
        "DeploymentOptions": {
            "description": "Deployment configuration options. Can be specified either for the entire deployment or for a specific Power BI item (such as a report or dashboard). If both are specified, only the deployment options for the Power BI item are used.",
            "properties": {
                "allowCreateArtifact": {
                    "type": "boolean",
                    "description": "Whether creating a new Power BI item (such as a report or a dashboard) in the target stage workspace is allowed. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowOverwriteArtifact": {
                    "type": "boolean",
                    "description": "Whether overwriting a Power BI item (such as a report or a dashboard) in the target stage workspace is allowed. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowSkipTilesWithMissingPrerequisites": {
                    "type": "boolean",
                    "description": "Whether to skip tiles that don't have a model or a report in the target stage workspace. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowPurgeData": {
                    "type": "boolean",
                    "description": "Whether to delete all data from the target Power BI item (such as a report or a dashboard) when there's a schema mismatch. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowTakeOver": {
                    "type": "boolean",
                    "description": "Whether to allow overriding the previous paginated report owner and becoming the owner of the paginated report. Applicable when deploying a paginated report to a stage that already contains a copy of the paginated report that isn't owned by you. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                },
                "allowOverwriteTargetArtifactLabel": {
                    "type": "boolean",
                    "description": "Whether the label of a target Power BI item (such as a report or a dashboard) can be changed. The label gets changed when the source is protected but the target isn't. If this option isn't set to `true` when it's required for deployment, the deployment will fail."
                }
            }
        },
        "DeployArtifactRequest": {
            "required": [
                "sourceId"
            ],
            "description": "A request to deploy a Power BI item (such as a report or a dashboard)",
            "properties": {
                "sourceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the Power BI item (such as a report or a dashboard) to be deployed"
                },
                "options": {
                    "description": "The deployment configuration options for a specific Power BI item (such as a report or a dashboard)",
                    "$ref": "#/definitions/DeploymentOptions"
                }
            }
        },
        "CreatePipelineRequest": {
            "required": [
                "displayName"
            ],
            "description": "A request to create a new deployment pipeline",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name for the new deployment pipeline",
                    "maxLength": 256
                },
                "description": {
                    "type": "string",
                    "description": "The description for the new deployment pipeline",
                    "maxLength": 1024
                }
            }
        },
        "UpdatePipelineRequest": {
            "description": "A request to update an existing deployment pipeline. An updated display name and/or a description is required.",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The updated display name for the deployment pipeline",
                    "maxLength": 256
                },
                "description": {
                    "type": "string",
                    "description": "The updated description for the deployment pipeline",
                    "maxLength": 1024
                }
            }
        },
        "AssignWorkspaceRequest": {
            "required": [
                "workspaceId"
            ],
            "description": "A request to assign a workspace to a deployment pipeline stage",
            "properties": {
                "workspaceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The workspace ID."
                }
            }
        },
        "PipelineUsers": {
            "description": "OData response wrapper for a collection of Power BI deployment pipeline users",
            "properties": {
                "odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The collection of deployment pipeline users",
                    "items": {
                        "$ref": "#/definitions/PipelineUser"
                    }
                }
            }
        },
        "PipelineUser": {
            "required": [
                "identifier",
                "principalType"
            ],
            "description": "A Power BI user access right entry for a deployment pipeline",
            "allOf": [
                {
                    "$ref": "#/definitions/Principal"
                }
            ],
            "properties": {
                "accessRight": {
                    "type": "string",
                    "description": "Required. The access right a user has for the deployment pipeline.",
                    "enum": [
                        "Admin"
                    ],
                    "x-ms-enum": {
                        "name": "PipelineUserAccessRight",
                        "modelAsExtensible": true,
                        "values": [
                            {
                                "value": "Admin",
                                "description": "Grants administrator rights to a deployment pipeline"
                            }
                        ]
                    }
                }
            }
        },
        "DatasetExecuteQueriesRequest": {
            "type": "object",
            "required": [
                "queries"
            ],
            "properties": {
                "queries": {
                    "type": "array",
                    "description": "The list of dataset queries to execute",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesQuery"
                    }
                },
                "serializerSettings": {
                    "description": "The serialization settings for the result set",
                    "$ref": "#/definitions/DatasetExecuteQueriesSerializationSettings"
                },
                "impersonatedUserName": {
                    "type": "string",
                    "description": "The UPN of a user to be impersonated. If the model is not RLS enabled, this will be ignored."
                }
            },
            "description": "A request to execute queries against a dataset"
        },
        "DatasetExecuteQueriesQuery": {
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The DAX query to be executed"
                }
            },
            "description": "A dataset query"
        },
        "DatasetExecuteQueriesSerializationSettings": {
            "type": "object",
            "properties": {
                "includeNulls": {
                    "type": "boolean",
                    "description": "Whether null (blank) values should be included in the result set. If unspecified, the default value is `false`."
                }
            },
            "description": "The serialization settings for the results of a dataset query"
        },
        "DatasetExecuteQueriesResponse": {
            "type": "object",
            "properties": {
                "informationProtectionLabel": {
                    "description": "The details of the information protection label, if any, associated with the dataset.",
                    "$ref": "#/definitions/DatasetExecuteQueriesInformationProtectionLabel"
                },
                "results": {
                    "type": "array",
                    "description": "The list of results, one per input query.",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesQueryResult"
                    }
                },
                "error": {
                    "description": "The details of an error, if present.",
                    "$ref": "#/definitions/DatasetExecuteQueriesError"
                }
            },
            "description": "The response to a dataset execute queries request"
        },
        "DatasetExecuteQueriesInformationProtectionLabel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The identifier (guid) of the information protection label"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the information protection label"
                }
            },
            "description": "The details of the information protection label, if any, associated with the dataset."
        },
        "DatasetExecuteQueriesQueryResult": {
            "type": "object",
            "properties": {
                "tables": {
                    "type": "array",
                    "description": "A list of tables data for a query",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesTableResult"
                    }
                },
                "error": {
                    "description": "The details of an error, if present.",
                    "$ref": "#/definitions/DatasetExecuteQueriesError"
                }
            },
            "description": "The results from a single dataset query"
        },
        "DatasetExecuteQueriesTableResult": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "description": "A list of rows",
                    "items": {
                        "$ref": "#/definitions/DatasetExecuteQueriesRowResult"
                    }
                },
                "error": {
                    "description": "The details of an error, if present.",
                    "$ref": "#/definitions/DatasetExecuteQueriesError"
                }
            },
            "description": "A table of data"
        },
        "DatasetExecuteQueriesRowResult": {
            "type": "object",
            "example": {
                "Country": "United States",
                "Sales": 100.5
            },
            "description": "A set of key-value pairs representing the column name and a row value. The column name is the key of the pair."
        },
        "DatasetExecuteQueriesError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code associated with the error"
                },
                "message": {
                    "type": "string",
                    "description": "The message of the error. If not present here, this information my also be found in details object nested under the error object."
                }
            },
            "description": "The details of an error, if present."
        },
        "DatasetQueryScaleOutSyncStatus": {
            "description": "Dataset query scale-out sync status",
            "type": "object",
            "properties": {
                "commitVersion": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Latest commit version"
                },
                "commitTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp indicating the latest commit version"
                },
                "targetSyncVersion": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Target sync version"
                },
                "targetSyncTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp indicating the target sync version"
                },
                "triggerReason": {
                    "type": "string",
                    "description": "Query scale-out sync trigger reason",
                    "enum": [
                        "explicit",
                        "automatic",
                        "system"
                    ],
                    "x-ms-enum": {
                        "name": "QueryScaleOutSyncTriggerReason",
                        "modelAsString": true,
                        "values": [
                            {
                                "value": "explicit",
                                "description": "Sync was explicitly triggered"
                            },
                            {
                                "value": "automatic",
                                "description": "Sync was automatically triggered"
                            },
                            {
                                "value": "system",
                                "description": "Sync was triggered following a system event"
                            }
                        ]
                    }
                },
                "syncStartTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp indicating when last sync started"
                },
                "syncEndTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp indicating when last sync ended"
                },
                "minActiveReadVersion": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Minimum active read version"
                },
                "minActiveReadTimestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp indicating the minimum active read version"
                },
                "scaleOutStatus": {
                    "type": "string",
                    "description": "Query scale-out status",
                    "enum": [
                        "Enabled",
                        "TenantSettingDisabled",
                        "StorageModeNotSupported",
                        "ReadOnlyReplicasDisabled"
                    ],
                    "x-ms-enum": {
                        "name": "QueryScaleOutStatus",
                        "modelAsString": true,
                        "values": [
                            {
                                "value": "Enabled",
                                "description": "Query scale-out is enabled"
                            },
                            {
                                "value": "TenantSettingDisabled",
                                "description": "Query scale-out tenant setting is disabled"
                            },
                            {
                                "value": "StorageModeNotSupported",
                                "description": "Query scale-out is not supported for dataset's storage mode"
                            },
                            {
                                "value": "ReadOnlyReplicasDisabled",
                                "description": "Query scale-out max read-only replicas is set to 0"
                            }
                        ]
                    }
                }
            }
        },
        "Scorecards": {
            "description": "The OData response wrapper for a Power BI scorecard collection",
            "properties": {
                "@odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "@odata.count": {
                    "type": "integer"
                },
                "@odata.nextLink": {
                    "type": "string",
                    "description": "Link to the next page results."
                },
                "value": {
                    "type": "array",
                    "description": "The scorecard collection",
                    "items": {
                        "$ref": "#/definitions/Scorecard"
                    }
                }
            }
        },
        "ScorecardCreateRequest": {
            "description": "A request to create a scorecard",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "The scorecard name",
                    "type": "string"
                },
                "description": {
                    "description": "Optional. The scorecard description.",
                    "type": "string"
                },
                "sensitivityLabelId": {
                    "description": "Optional. The GUID of a sensitivity label. If you don't want to select a sensitivity label, use a null or empty GUID (`00000000-0000-0000-0000-000000000000`). If default labels are enabled and/or enforced, they will be applied on the scorecard and dataset.",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "Scorecard": {
            "description": "A Power BI scorecard",
            "properties": {
                "id": {
                    "description": "The scorecard ID",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "The scorecard name",
                    "type": "string"
                },
                "createdTime": {
                    "description": "The UTC time at creation",
                    "type": "string",
                    "format": "date-time"
                },
                "lastModifiedTime": {
                    "description": "The UTC time at last modification",
                    "type": "string",
                    "format": "date-time"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "The provisioning status of the scorecard.",
                    "default": "Initialized",
                    "enum": [
                        "Initialized",
                        "Completed",
                        "Failed",
                        "Deprovisioning",
                        "Deleted"
                    ]
                },
                "groupId": {
                    "description": "The ID of the workspace",
                    "type": "string",
                    "format": "uuid"
                },
                "datasetId": {
                    "description": "The ID of the dataset associated with the scorecard",
                    "type": "string",
                    "format": "uuid"
                },
                "reportId": {
                    "description": "The ID of the internal report associated with the scorecard",
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "description": "The scorecard description",
                    "type": "string"
                },
                "permissions": {
                    "description": "The scorecard permissions",
                    "type": "string",
                    "enum": [
                        "None",
                        "Read",
                        "Write",
                        "ReadWrite"
                    ],
                    "x-ms-enum": {
                        "name": "ScorecardPermission",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "None",
                                "description": "No access",
                                "name": "None"
                            },
                            {
                                "value": "Read",
                                "description": "Read access",
                                "name": "Read"
                            },
                            {
                                "value": "Write",
                                "description": "Write access",
                                "name": "Write"
                            },
                            {
                                "value": "ReadWrite",
                                "description": "Read and Write access",
                                "name": "ReadWrite"
                            }
                        ]
                    }
                },
                "columnSettings": {
                    "description": "The display settings for columns on a scorecard",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScorecardColumnSetting"
                    }
                },
                "goals": {
                    "description": "The scorecard goals",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Goal"
                    }
                }
            }
        },
        "Goals": {
            "description": "The OData response wrapper for a Power BI goal collection",
            "properties": {
                "@odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The goal collection",
                    "items": {
                        "$ref": "#/definitions/Goal"
                    }
                }
            }
        },
        "GoalRankValidationInfo": {
            "description": "The rank validation information for a Power BI goal, to be used with the [Move Goals](/rest/api/power-bi/scorecards_(preview)/move-goals) API request. The caller provides validation information to confirm that they know the existing position of the goal within the hierarchy of goals.",
            "properties": {
                "goalId": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "currentParentId": {
                    "description": "The ID of the current parent goal",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "GoalsMoveRequest": {
            "description": "A request object to be used with the [Move Goals](/rest/api/power-bi/scorecards_(preview)/move-goals) API request",
            "required": [
                "goalToMove"
            ],
            "properties": {
                "goalToMove": {
                    "description": "The rank validation information for the goal to be moved. The caller provides validation information to confirm that they know the existing position of a goal within the hierarchy of goals.",
                    "$ref": "#/definitions/GoalRankValidationInfo"
                },
                "newParent": {
                    "description": "Optional. The rank validation information for the new parent of the goal to be moved. The caller provides validation information to confirm that they know the existing position of a goal within the hierarchy of goals.",
                    "$ref": "#/definitions/GoalRankValidationInfo"
                },
                "newPrevious": {
                    "description": "Optional. The rank validation information for the new previous-sibling of the goal to be moved. The caller provides validation information to confirm that they know the existing position of a goal within the hierarchy of goals.",
                    "$ref": "#/definitions/GoalRankValidationInfo"
                },
                "newNext": {
                    "description": "Optional. The rank validation information for the new next-sibling of the goal to be moved. The caller provides validation information to confirm that they know the existing position of a goal within the hierarchy of goals.",
                    "$ref": "#/definitions/GoalRankValidationInfo"
                }
            }
        },
        "GoalCreateRequest": {
            "description": "A Power BI goal create request",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "The goal name",
                    "type": "string"
                },
                "startDate": {
                    "description": "Optional. The UTC timestamp for the start date of the goal. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "completionDate": {
                    "description": "Optional. The UTC timestamp for the completion date of the goal. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "parentId": {
                    "description": "Optional. The ID of the parent goal, if defined.",
                    "type": "string"
                },
                "valuesFormatString": {
                    "description": "Optional. The [custom format string](/power-bi/create-reports/desktop-custom-format-strings) for values.",
                    "type": "string"
                },
                "datesFormatString": {
                    "description": "Optional. The [custom format string](/power-bi/create-reports/desktop-custom-format-strings) for dates.",
                    "type": "string"
                }
            }
        },
        "Goal": {
            "description": "A Power BI goal",
            "properties": {
                "id": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "The goal name",
                    "type": "string"
                },
                "scorecardId": {
                    "description": "The scorecard ID",
                    "type": "string",
                    "format": "uuid"
                },
                "createdTime": {
                    "description": "The UTC time at creation",
                    "type": "string",
                    "format": "date-time"
                },
                "lastModifiedTime": {
                    "description": "The UTC time at last modification",
                    "type": "string",
                    "format": "date-time"
                },
                "startDate": {
                    "description": "The UTC timestamp for the start date of the goal. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "completionDate": {
                    "description": "The UTC timestamp for the completion date of the goal. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "parentId": {
                    "description": "The ID of the parent goal, if defined.",
                    "type": "string",
                    "format": "uuid"
                },
                "notesCount": {
                    "description": "notesCount",
                    "type": "integer",
                    "format": "int32"
                },
                "valuesFormatString": {
                    "description": "valuesFormatString",
                    "type": "string"
                },
                "datesFormatString": {
                    "description": "datesFormatString",
                    "type": "string"
                },
                "description": {
                    "description": "The goal description",
                    "type": "string"
                },
                "hasStatusRules": {
                    "description": "Whether the goal has status rules defined",
                    "type": "boolean"
                },
                "statusRules": {
                    "description": "The goal status rules",
                    "$ref": "#/definitions/Goals.Rules.GoalRulesContainer"
                },
                "permissions": {
                    "description": "The goal permissions",
                    "type": "string",
                    "enum": [
                        "None",
                        "View",
                        "UpdateCurrentValue",
                        "UpdateTargetValue",
                        "UpdateNotes",
                        "UpdateStatus",
                        "UpdateValues",
                        "All",
                        "11",
                        "13",
                        "15",
                        "19",
                        "21",
                        "23",
                        "25",
                        "27",
                        "29"
                    ],
                    "x-ms-enum": {
                        "name": "GoalPermissions",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "None",
                                "description": "No access.",
                                "name": "None"
                            },
                            {
                                "value": "View",
                                "description": "View access only.",
                                "name": "View"
                            },
                            {
                                "value": "UpdateCurrentValue",
                                "description": "Current value can be updated.",
                                "name": "UpdateCurrentValue"
                            },
                            {
                                "value": "UpdateTargetValue",
                                "description": "Target value can be updated.",
                                "name": "UpdateTargetValue"
                            },
                            {
                                "value": "UpdateNotes",
                                "description": "Notes can be updated.",
                                "name": "UpdateNotes"
                            },
                            {
                                "value": "UpdateStatus",
                                "description": "Status can be updated.",
                                "name": "UpdateStatus"
                            },
                            {
                                "value": "UpdateValues",
                                "description": "Current and target values can be updated.",
                                "name": "UpdateValues"
                            },
                            {
                                "value": "All",
                                "description": "Values, notes, and status can be updated.",
                                "name": "All"
                            },
                            {
                                "value": "11",
                                "description": "Current value and notes can be updated.",
                                "name": "UpdateCurrentValueAndNotes"
                            },
                            {
                                "value": "13",
                                "description": "Target value and notes can be updated.",
                                "name": "UpdateTargetValueAndNotes"
                            },
                            {
                                "value": "15",
                                "description": "Current value, target value, and notes can be updated.",
                                "name": "UpdateCurrentValueAndTargetValueAndNotes"
                            },
                            {
                                "value": "19",
                                "description": "Current value and status can be updated.",
                                "name": "UpdateCurrentValueAndStatus"
                            },
                            {
                                "value": "21",
                                "description": "Target value and status can be updated.",
                                "name": "UpdateTargetValueAndStatus"
                            },
                            {
                                "value": "23",
                                "description": "Current value, target value, and status can be updated.",
                                "name": "UpdateCurrentValueAndTargetValueAndStatus"
                            },
                            {
                                "value": "25",
                                "description": "Notes and status can be updated.",
                                "name": "UpdateNotesAndStatus"
                            },
                            {
                                "value": "27",
                                "description": "Current value, notes, and status can be updated.",
                                "name": "UpdateCurrentValueAndNotesAndStatus"
                            },
                            {
                                "value": "29",
                                "description": "Target value, notes, and status can be updated.",
                                "name": "UpdateTargetValueAndNotesAndStatus"
                            }
                        ]
                    }
                },
                "level": {
                    "description": "The nested level of the goal in the parent-child hierarchy of scorecard goals",
                    "type": "integer",
                    "format": "int32"
                },
                "rank": {
                    "description": "The rank of the goal within the ordered set of sibling goals",
                    "type": "integer",
                    "format": "int64"
                },
                "goalValues": {
                    "description": "The list of goal value check-ins",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalValue"
                    }
                },
                "aggregations": {
                    "description": "The list of aggregated properties of the goal",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalAggregation"
                    }
                }
            }
        },
        "GoalRefreshHistories": {
            "description": "The OData response wrapper for a collection of Power BI goal refresh history entries",
            "properties": {
                "@odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The goal refresh history entries",
                    "items": {
                        "$ref": "#/definitions/GoalRefreshHistory"
                    }
                }
            }
        },
        "GoalRefreshHistory": {
            "description": "A refresh history entry for a Power BI goal",
            "properties": {
                "goalId": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "connectionType": {
                    "description": "The refresh connection type",
                    "type": "string",
                    "enum": [
                        "Current",
                        "Target",
                        "Status"
                    ],
                    "x-ms-enum": {
                        "name": "GoalValueType",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "Current",
                                "description": "Information about the current value of the goal",
                                "name": "Current"
                            },
                            {
                                "value": "Target",
                                "description": "Information about the target value of the goal",
                                "name": "Target"
                            },
                            {
                                "value": "Status",
                                "description": "Information about the status of the goal",
                                "name": "Status"
                            }
                        ]
                    }
                },
                "status": {
                    "description": "The status of the refresh processing.",
                    "type": "string",
                    "enum": [
                        "NotProcessed",
                        "Succeeded",
                        "Failed",
                        "UserNotFound",
                        "QueryExecutionError",
                        "QueryResultError",
                        "BadQueryResultMetadata",
                        "EmptyGoalValues",
                        "ConnectedDatasetDeleted",
                        "UserNotAuthorized",
                        "ModelNotFound",
                        "ScorecardNotFound"
                    ],
                    "x-ms-enum": {
                        "name": "GoalProcessingStatus",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "NotProcessed",
                                "description": "Not processed",
                                "name": "NotProcessed"
                            },
                            {
                                "value": "Succeeded",
                                "description": "Succeeded",
                                "name": "Succeeded"
                            },
                            {
                                "value": "Failed",
                                "description": "Failed",
                                "name": "Failed"
                            },
                            {
                                "value": "UserNotFound",
                                "description": "User not found",
                                "name": "UserNotFound"
                            },
                            {
                                "value": "QueryExecutionError",
                                "description": "Query execution error",
                                "name": "QueryExecutionError"
                            },
                            {
                                "value": "QueryResultError",
                                "description": "Query result error",
                                "name": "QueryResultError"
                            },
                            {
                                "value": "BadQueryResultMetadata",
                                "description": "Bad query result metadata",
                                "name": "BadQueryResultMetadata"
                            },
                            {
                                "value": "EmptyGoalValues",
                                "description": "Empty goal values",
                                "name": "EmptyGoalValues"
                            },
                            {
                                "value": "ConnectedDatasetDeleted",
                                "description": "Connected dataset deleted",
                                "name": "ConnectedDatasetDeleted"
                            },
                            {
                                "value": "UserNotAuthorized",
                                "description": "User not authorized",
                                "name": "UserNotAuthorized"
                            },
                            {
                                "value": "ModelNotFound",
                                "description": "Model not found",
                                "name": "ModelNotFound"
                            },
                            {
                                "value": "ScorecardNotFound",
                                "description": "Scorecard not found",
                                "name": "ScorecardNotFound"
                            }
                        ]
                    }
                },
                "timestamp": {
                    "description": "The UTC timestamp of the refresh operation",
                    "type": "string",
                    "format": "date-time"
                },
                "rootActivityId": {
                    "description": "The root activity ID",
                    "type": "string",
                    "format": "uuid"
                },
                "message": {
                    "description": "The verbal description of the status of the refresh operation",
                    "type": "string"
                }
            }
        },
        "ScorecardColumnSetting": {
            "description": "An entry defining the display settings for columns on a Power BI scorecard",
            "required": [
                "columnId",
                "show"
            ],
            "properties": {
                "columnId": {
                    "description": "The ID for one of the columns on the scorecard control or scorecard Web UI page",
                    "type": "string",
                    "format": "int32",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6"
                    ],
                    "x-ms-enum": {
                        "name": "ScorecardColumnId",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "0",
                                "description": "Name",
                                "name": "Name"
                            },
                            {
                                "value": "1",
                                "description": "Owner",
                                "name": "Owner"
                            },
                            {
                                "value": "2",
                                "description": "Status",
                                "name": "Status"
                            },
                            {
                                "value": "3",
                                "description": "Value",
                                "name": "Value"
                            },
                            {
                                "value": "4",
                                "description": "Progress",
                                "name": "Progress"
                            },
                            {
                                "value": "5",
                                "description": "DueDate",
                                "name": "DueDate"
                            },
                            {
                                "value": "6",
                                "description": "Notes",
                                "name": "Notes"
                            }
                        ]
                    }
                },
                "show": {
                    "description": "Whether the column should be visible on the scorecard",
                    "type": "boolean"
                }
            }
        },
        "GoalValues": {
            "description": "The OData response wrapper for a Power BI goal value collection",
            "properties": {
                "@odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The goal value collection",
                    "items": {
                        "$ref": "#/definitions/GoalValue"
                    }
                }
            }
        },
        "GoalValueCreateRequest": {
            "description": "A creation request for a Power BI goal value check-in",
            "required": [
                "timestamp"
            ],
            "properties": {
                "timestamp": {
                    "description": "The UTC timestamp of the goal value check-in. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "description": "Optional. The current value of the goal.",
                    "type": "number",
                    "format": "double"
                },
                "target": {
                    "description": "Optional. The target value of the goal.",
                    "type": "number",
                    "format": "double"
                },
                "trend": {
                    "description": "Optional. The value trend of the goal.",
                    "type": "integer",
                    "format": "int32"
                },
                "forecast": {
                    "description": "Optional. The value trend forecast of the goal.",
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "description": "Optional. The goal status ID.\n\n| ID | Description |\n|-|-|\n| 0 | Not started |\n| 1 | On track |\n| 2 | At risk |\n| 3 | Behind |\n| 4 | Overdue |\n| 5 | Completed |",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "GoalValue": {
            "description": "A Power BI goal value check-in",
            "properties": {
                "timestamp": {
                    "description": "The UTC timestamp of the goal value check-in. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "goalId": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "scorecardId": {
                    "description": "The scorecard ID",
                    "type": "string",
                    "format": "uuid"
                },
                "createdTime": {
                    "description": "The UTC time at creation",
                    "type": "string",
                    "format": "date-time"
                },
                "lastModifiedTime": {
                    "description": "The UTC time at last modification",
                    "type": "string",
                    "format": "date-time"
                },
                "value": {
                    "description": "The goal current value",
                    "type": "number",
                    "format": "double"
                },
                "target": {
                    "description": "The goal target value",
                    "type": "number",
                    "format": "double"
                },
                "valueDisplayString": {
                    "description": "The textual representation of the current goal value",
                    "type": "string"
                },
                "targetDisplayString": {
                    "description": "The textual representation of the goal target",
                    "type": "string"
                },
                "trend": {
                    "description": "The goal value trend",
                    "type": "integer",
                    "format": "int32"
                },
                "forecast": {
                    "description": "The goal value trend forecast",
                    "type": "number",
                    "format": "double"
                },
                "status": {
                    "description": "The ID of the goal status\n\n| ID | Description |\n|-|-|\n| 0 | Not started |\n| 1 | On track |\n| 2 | At risk |\n| 3 | Behind |\n| 4 | Overdue |\n| 5 | Completed |",
                    "type": "integer",
                    "format": "int32"
                },
                "notes": {
                    "description": "The notes for the goal",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalNote"
                    }
                }
            }
        },
        "GoalAggregation": {
            "description": "An entry describing the state of various Power BI goal properties at a specific time (normally current time)",
            "required": [
                "id",
                "timestamp",
                "calculationTime",
                "scorecardId",
                "goalId",
                "value",
                "type",
                "maxLastModifiedTime"
            ],
            "properties": {
                "id": {
                    "description": "The aggregation ID",
                    "type": "string"
                },
                "timestamp": {
                    "description": "The UTC timestamp associated with the aggregated property. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "calculationTime": {
                    "description": "The UTC timestamp of the aggregation calculation",
                    "type": "string",
                    "format": "date-time"
                },
                "scorecardId": {
                    "description": "The scorecard ID",
                    "type": "string",
                    "format": "uuid"
                },
                "goalId": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "value": {
                    "description": "The numeric value of the aggregated property",
                    "type": "number",
                    "format": "double"
                },
                "valueDisplayString": {
                    "description": "Optional. The alternative text representation of the aggregated property value.",
                    "type": "string"
                },
                "type": {
                    "description": "The type of the aggregated property",
                    "type": "string",
                    "enum": [
                        "Value",
                        "Target",
                        "Status",
                        "Sparkline",
                        "Change"
                    ],
                    "x-ms-enum": {
                        "name": "GoalAggregationType",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "Value",
                                "description": "Information about the current value of the goal",
                                "name": "Value"
                            },
                            {
                                "value": "Target",
                                "description": "Information about the target value of the goal",
                                "name": "Target"
                            },
                            {
                                "value": "Status",
                                "description": "Information about the status of the goal",
                                "name": "Status"
                            },
                            {
                                "value": "Sparkline",
                                "description": "Information about the sparkline",
                                "name": "Sparkline"
                            },
                            {
                                "value": "Change",
                                "description": "Information about the change",
                                "name": "Change"
                            }
                        ]
                    }
                },
                "maxLastModifiedTime": {
                    "description": "The UTC timestamp of the latest modification to the aggregated property",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "GoalNotes": {
            "description": "The OData response wrapper for a Power BI goal value note collection",
            "properties": {
                "@odata.context": {
                    "type": "string",
                    "description": "OData context"
                },
                "value": {
                    "type": "array",
                    "description": "The goal value note collection",
                    "items": {
                        "$ref": "#/definitions/GoalNote"
                    }
                }
            }
        },
        "GoalNoteRequest": {
            "description": "A Power BI goal value check-in note request",
            "required": [
                "body"
            ],
            "properties": {
                "body": {
                    "description": "The note text",
                    "type": "string"
                }
            }
        },
        "GoalNote": {
            "description": "A Power BI goal value check-in note",
            "properties": {
                "id": {
                    "description": "The goal value check-in note ID",
                    "type": "string",
                    "format": "uuid"
                },
                "valueTimestamp": {
                    "description": "The UTC timestamp of the goal value check-in that this note belongs to. The time portion of the timestamp is zero.",
                    "type": "string",
                    "format": "date-time"
                },
                "goalId": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "scorecardId": {
                    "description": "The scorecard ID",
                    "type": "string",
                    "format": "uuid"
                },
                "lastModifiedTime": {
                    "description": "The UTC time at last modification",
                    "type": "string",
                    "format": "date-time"
                },
                "content": {
                    "description": "The content of this note in special format",
                    "type": "string"
                },
                "createdTime": {
                    "description": "The UTC time at creation",
                    "type": "string",
                    "format": "date-time"
                },
                "body": {
                    "description": "The note text",
                    "type": "string"
                }
            }
        },
        "Goals.Rules.GoalStatusRulesUpdateRequest": {
            "description": "The request data to be used when updating rules for a Power BI goal",
            "required": [
                "defaultOutput"
            ],
            "properties": {
                "rules": {
                    "description": "Optional. The list of rules.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Goals.Rules.Rule_1OfInt32"
                    }
                },
                "defaultOutput": {
                    "description": "The status ID when no rule matches\n\n| ID | Description |\n|-|-|\n| 0 | Not started |\n| 1 | On track |\n| 2 | At risk |\n| 3 | Behind |\n| 4 | Overdue |\n| 5 | Completed |",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Goals.Rules.GoalStatusRules": {
            "description": "The request data to be used when defining or reporting rules for the status of a Power BI goal",
            "properties": {
                "rules": {
                    "description": "The list of rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Goals.Rules.Rule_1OfInt32"
                    }
                },
                "defaultOutput": {
                    "description": "The status ID when no rule matches\n\n| ID | Description |\n|-|-|\n| 0 | Not started |\n| 1 | On track |\n| 2 | At risk |\n| 3 | Behind |\n| 4 | Overdue |\n| 5 | Completed |",
                    "type": "integer",
                    "format": "int32"
                },
                "scorecardObjectId": {
                    "description": "The scorecard ID",
                    "type": "string"
                },
                "goalObjectId": {
                    "description": "The goal ID",
                    "type": "string"
                },
                "lastModifiedTime": {
                    "description": "The UTC time at last modification",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Goals.Rules.Rule_1OfInt32": {
            "description": "A status rule object for the Power BI goal",
            "properties": {
                "conditions": {
                    "description": "The list of status rule conditions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Goals.Rules.RuleCondition"
                    }
                },
                "output": {
                    "description": "The status ID when conditions are met\n\n| ID | Description |\n|-|-|\n| 0 | Not started |\n| 1 | On track |\n| 2 | At risk |\n| 3 | Behind |\n| 4 | Overdue |\n| 5 | Completed |",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Goals.Rules.GoalRulesContainer": {
            "description": "A container for JSON definitions of status rules on a Power BI goal",
            "properties": {
                "scorecardObjectId": {
                    "description": "The scorecard ID",
                    "type": "string",
                    "format": "uuid"
                },
                "goalObjectId": {
                    "description": "The goal ID",
                    "type": "string",
                    "format": "uuid"
                },
                "lastModifiedTime": {
                    "description": "The UTC time at last modification",
                    "type": "string",
                    "format": "date-time"
                },
                "rules": {
                    "description": "The list of rules",
                    "type": "string"
                }
            }
        },
        "Goals.Rules.RuleCondition": {
            "description": "A Power BI goal status rule",
            "properties": {
                "fieldComparison": {
                    "description": "The field comparison definition when `expression` isn't defined",
                    "$ref": "#/definitions/Goals.Rules.FieldComparison"
                },
                "expression": {
                    "description": "The rule condition expression when `fieldComparison` isn't defined",
                    "type": "string"
                }
            }
        },
        "Goals.Rules.FieldComparison": {
            "description": "A field comparison specification for Power BI goal status rule",
            "properties": {
                "field": {
                    "description": "The name of the field, such as `Timestamp`, `Value`, or `Change`.",
                    "type": "string"
                },
                "operator": {
                    "description": "The comparison operator",
                    "type": "string",
                    "enum": [
                        "Equal",
                        "GreaterThan",
                        "GreaterThanOrEqual",
                        "LessThan",
                        "LessThanOrEqual"
                    ],
                    "x-ms-enum": {
                        "name": "GoalRulesFieldComparisonKind",
                        "modelAsExtensible": true,
                        "modelAsString": false,
                        "values": [
                            {
                                "value": "Equal",
                                "description": "Are equal",
                                "name": "Equal"
                            },
                            {
                                "value": "GreaterThan",
                                "description": "Is greater than",
                                "name": "GreaterThan"
                            },
                            {
                                "value": "GreaterThanOrEqual",
                                "description": "Is greater than or equal",
                                "name": "GreaterThanOrEqual"
                            },
                            {
                                "value": "LessThan",
                                "description": "Is less than",
                                "name": "LessThan"
                            },
                            {
                                "value": "LessThanOrEqual",
                                "description": "Is less than or equal",
                                "name": "LessThanOrEqual"
                            }
                        ]
                    }
                },
                "value": {
                    "description": "The rule value",
                    "$ref": "#/definitions/Goals.Rules.RuleValue"
                }
            }
        },
        "Goals.Rules.RuleValue": {
            "description": "A specification for a condition in a Power BI goal status rule",
            "properties": {
                "percentOf": {
                    "description": "An entry defining a percentage of some target metric",
                    "$ref": "#/definitions/Goals.Rules.PercentOf"
                },
                "field": {
                    "description": "The rule value",
                    "type": "string"
                },
                "dateTime": {
                    "description": "The rule value timestamp",
                    "type": "string",
                    "format": "date-time"
                },
                "number": {
                    "description": "The rule value number",
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "Goals.Rules.PercentOf": {
            "description": "An entry defining a percentage of some target metric in a condition for Power BI goal status rule",
            "properties": {
                "field": {
                    "description": "The field for which the percent value is computed",
                    "type": "string"
                },
                "percent": {
                    "description": "The percent value",
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "parameters": {
        "ScorecardIdParameter": {
            "name": "scorecardId",
            "in": "path",
            "description": "The unique identifier of the scorecard",
            "type": "string",
            "format": "uuid",
            "required": true
        },
        "GoalIdParameter": {
            "name": "goalId",
            "in": "path",
            "description": "The unique identifier of the goal",
            "type": "string",
            "format": "uuid",
            "required": true
        },
        "GroupIdParameter": {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "The unique identifier of the workspace"
        },
        "GoalValueTimestampParameter": {
            "name": "timestamp",
            "in": "path",
            "type": "string",
            "format": "date",
            "description": "The timestamp for the value of the goal",
            "required": true
        },
        "GoalNoteIdParameter": {
            "name": "noteId",
            "in": "path",
            "description": "The unique identifier of the goal check-in note",
            "type": "string",
            "format": "uuid",
            "required": true
        }
    },
    "responses": {},
    "security": [],
    "tags": []
}
